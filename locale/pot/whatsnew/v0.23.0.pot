# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v0.23.0.rst:4
msgid "What's new in 0.23.0 (May 15, 2018)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:6
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:14
msgid "This is a major release from 0.22.0 and includes a number of API changes, deprecations, new features, enhancements, and performance improvements along with a large number of bug fixes. We recommend that all users upgrade to this version."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:19
msgid "Highlights include:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:21
msgid ":ref:`Round-trippable JSON format with 'table' orient <whatsnew_0230.enhancements.round-trippable_json>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:22
msgid ":ref:`Instantiation from dicts respects order for Python 3.6+ <whatsnew_0230.api_breaking.dict_insertion_order>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:23
msgid ":ref:`Dependent column arguments for assign <whatsnew_0230.enhancements.assign_dependent>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:24
msgid ":ref:`Merging / sorting on a combination of columns and index levels <whatsnew_0230.enhancements.merge_on_columns_and_levels>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:25
msgid ":ref:`Extending pandas with custom types <whatsnew_023.enhancements.extension>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:26
msgid ":ref:`Excluding unobserved categories from groupby <whatsnew_0230.enhancements.categorical_grouping>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:27
msgid ":ref:`Changes to make output shape of DataFrame.apply consistent <whatsnew_0230.api_breaking.apply>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:29
msgid "Check the :ref:`API Changes <whatsnew_0230.api_breaking>` and :ref:`deprecations <whatsnew_0230.deprecations>` before updating."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:33
msgid "Starting January 1, 2019, pandas feature releases will support Python 3 only. See `Dropping Python 2.7 <https://pandas.pydata.org/pandas-docs/version/0.24/install.html#install-dropping-27>`_ for more."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:39
msgid "What's new in v0.23.0"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:44
msgid "New features"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:49
msgid "JSON read/write round-trippable with ``orient='table'``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:51
msgid "A ``DataFrame`` can now be written to and subsequently read back via JSON while preserving metadata through usage of the ``orient='table'`` argument (see :issue:`18912` and :issue:`9146`). Previously, none of the available ``orient`` values guaranteed the preservation of dtypes and index names, amongst other metadata."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:67
msgid "Please note that the string ``index`` is not supported with the round trip format, as it is used by default in ``write_json`` to indicate a missing index name."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:90
msgid "Method ``.assign()`` accepts dependent arguments"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:92
msgid "The :func:`DataFrame.assign` now accepts dependent keyword arguments for python version later than 3.6 (see also `PEP 468 <https://www.python.org/dev/peps/pep-0468/>`_). Later keyword arguments may now refer to earlier ones if the argument is a callable. See the :ref:`documentation here <dsintro.chained_assignment>` (:issue:`14207`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:104
msgid "This may subtly change the behavior of your code when you're using ``.assign()`` to update an existing column. Previously, callables referring to other variables being updated would get the \"old\" values"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:108
#: ../../source/whatsnew/v0.23.0.rst:400
#: ../../source/whatsnew/v0.23.0.rst:426
#: ../../source/whatsnew/v0.23.0.rst:840
#: ../../source/whatsnew/v0.23.0.rst:890
msgid "Previous behavior:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:121
#: ../../source/whatsnew/v0.23.0.rst:908
#: ../../source/whatsnew/v0.23.0.rst:935
msgid "New behavior:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:132
msgid "Merging on a combination of columns and index levels"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:134
msgid "Strings passed to :meth:`DataFrame.merge` as the ``on``, ``left_on``, and ``right_on`` parameters may now refer to either column names or index level names. This enables merging ``DataFrame`` instances on a combination of index levels and columns without resetting indexes. See the :ref:`Merge on columns and levels <merging.merge_on_columns_and_levels>` documentation section. (:issue:`14355`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:162
msgid "Sorting by a combination of columns and index levels"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:164
msgid "Strings passed to :meth:`DataFrame.sort_values` as the ``by`` parameter may now refer to either column names or index level names.  This enables sorting ``DataFrame`` instances by a combination of index levels and columns without resetting indexes. See the :ref:`Sorting by Indexes and Values <basics.sort_indexes_and_values>` documentation section. (:issue:`14353`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:190
msgid "Extending pandas with custom types (experimental)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:192
msgid "pandas now supports storing array-like objects that aren't necessarily 1-D NumPy arrays as columns in a DataFrame or values in a Series. This allows third-party libraries to implement extensions to NumPy's types, similar to how pandas implemented categoricals, datetimes with timezones, periods, and intervals."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:197
msgid "As a demonstration, we'll use cyberpandas_, which provides an ``IPArray`` type for storing ip addresses."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:212
msgid "``IPArray`` isn't a normal 1-D NumPy array, but because it's a pandas :class:`~pandas.api.extensions.ExtensionArray`, it can be stored properly inside pandas' containers."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:226
msgid "Notice that the dtype is ``ip``. The missing value semantics of the underlying array are respected:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:238
msgid "For more, see the :ref:`extension types <extending.extension-types>` documentation. If you build an extension array, publicize it on `the ecosystem page <https://pandas.pydata.org/community/ecosystem.html>`_."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:247
msgid "New ``observed`` keyword for excluding unobserved categories in ``GroupBy``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:249
msgid "Grouping by a categorical includes the unobserved categories in the output. When grouping by multiple categorical columns, this means you get the cartesian product of all the categories, including combinations where there are no observations, which can result in a large number of groups. We have added a keyword ``observed`` to control this behavior, it defaults to ``observed=False`` for backward-compatibility. (:issue:`14942`, :issue:`8138`, :issue:`15217`, :issue:`17594`, :issue:`8669`, :issue:`20583`, :issue:`20902`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:265
msgid "To show all values, the previous behavior:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:272
msgid "To show only observed values:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:278
msgid "For pivoting operations, this behavior is *already* controlled by the ``dropna`` keyword:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:300
msgid "Rolling/Expanding.apply() accepts ``raw=False`` to pass a ``Series`` to the function"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:302
msgid ":func:`Series.rolling().apply() <pandas.core.window.Rolling.apply>`, :func:`DataFrame.rolling().apply() <pandas.core.window.Rolling.apply>`, :func:`Series.expanding().apply() <pandas.core.window.Expanding.apply>`, and :func:`DataFrame.expanding().apply() <pandas.core.window.Expanding.apply>` have gained a ``raw=None`` parameter. This is similar to :func:`DataFame.apply`. This parameter, if ``True`` allows one to send a ``np.ndarray`` to the applied function. If ``False`` a ``Series`` will be passed. The default is ``None``, which preserves backward compatibility, so this will default to ``True``, sending an ``np.ndarray``. In a future version the default will be changed to ``False``, sending a ``Series``. (:issue:`5071`, :issue:`20584`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:313
msgid "Pass a ``Series``:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:319
msgid "Mimic the original behavior of passing a ndarray:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:329
msgid "``DataFrame.interpolate`` has gained the ``limit_area`` kwarg"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:331
msgid ":meth:`DataFrame.interpolate` has gained a ``limit_area`` parameter to allow further control of which ``NaN`` s are replaced. Use ``limit_area='inside'`` to fill only NaNs surrounded by valid values or use ``limit_area='outside'`` to fill only ``NaN`` s outside the existing valid values while preserving those inside.  (:issue:`16284`) See the :ref:`full documentation here <missing_data.interp_limits>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:342
msgid "Fill one consecutive inside value in both directions"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:348
msgid "Fill all consecutive outside values backward"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:354
msgid "Fill all consecutive outside values in both directions"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:363
msgid "Function ``get_dummies`` now supports ``dtype`` argument"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:365
msgid "The :func:`get_dummies` now accepts a ``dtype`` argument, which specifies a dtype for the new columns. The default remains uint8. (:issue:`18330`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:377
msgid "Timedelta mod method"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:379
msgid "``mod`` (%) and ``divmod`` operations are now defined on ``Timedelta`` objects when operating with either timedelta-like or with numeric arguments. See the :ref:`documentation here <timedeltas.mod_divmod>`. (:issue:`19365`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:391
msgid "Method ``.rank()`` handles ``inf`` values when ``NaN`` are present"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:393
msgid "In previous versions, ``.rank()`` would assign ``inf`` elements ``NaN`` as their ranks. Now ranks are calculated properly. (:issue:`6945`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:413
#: ../../source/whatsnew/v0.23.0.rst:438
#: ../../source/whatsnew/v0.23.0.rst:861
msgid "Current behavior:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:419
msgid "Furthermore, previously if you rank ``inf`` or ``-inf`` values together with ``NaN`` values, the calculation won't distinguish ``NaN`` from infinity when using 'top' or 'bottom' argument."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:444
msgid "These bugs were squashed:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:446
msgid "Bug in :meth:`DataFrame.rank` and :meth:`Series.rank` when ``method='dense'`` and ``pct=True`` in which percentile ranks were not being used with the number of distinct observations (:issue:`15630`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:447
msgid "Bug in :meth:`Series.rank` and :meth:`DataFrame.rank` when ``ascending='False'`` failed to return correct ranks for infinity if ``NaN`` were present (:issue:`19538`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:448
msgid "Bug in :func:`DataFrameGroupBy.rank` where ranks were incorrect when both infinity and ``NaN`` were present (:issue:`20561`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:454
msgid "``Series.str.cat`` has gained the ``join`` kwarg"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:456
msgid "Previously, :meth:`Series.str.cat` did not -- in contrast to most of ``pandas`` -- align :class:`Series` on their index before concatenation (see :issue:`18657`). The method has now gained a keyword ``join`` to control the manner of alignment, see examples below and :ref:`here <text.concatenate>`."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:459
msgid "In v.0.23 ``join`` will default to None (meaning no alignment), but this default will change to ``'left'`` in a future version of pandas."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:469
msgid "Furthermore, :meth:`Series.str.cat` now works for ``CategoricalIndex`` as well (previously raised a ``ValueError``; see :issue:`20842`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:474
msgid "``DataFrame.astype`` performs column-wise conversion to ``Categorical``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:476
msgid ":meth:`DataFrame.astype` can now perform column-wise conversion to ``Categorical`` by supplying the string ``'category'`` or a :class:`~pandas.api.types.CategoricalDtype`. Previously, attempting this would raise a ``NotImplementedError``. See the :ref:`categorical.objectcreation` section of the documentation for more details and examples. (:issue:`12860`, :issue:`18099`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:480
msgid "Supplying the string ``'category'`` performs column-wise conversion, with only labels appearing in a given column set as categories:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:490
msgid "Supplying a ``CategoricalDtype`` will make the categories in each column consistent with the supplied dtype:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:505
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:507
msgid "Unary ``+`` now permitted for ``Series`` and ``DataFrame`` as  numeric operator (:issue:`16073`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:508
msgid "Better support for :meth:`~pandas.io.formats.style.Styler.to_excel` output with the ``xlsxwriter`` engine. (:issue:`16149`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:509
msgid ":func:`pandas.tseries.frequencies.to_offset` now accepts leading '+' signs e.g. '+1h'. (:issue:`18171`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:510
msgid ":func:`MultiIndex.unique` now supports the ``level=`` argument, to get unique values from a specific index level (:issue:`17896`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:511
msgid ":class:`pandas.io.formats.style.Styler` now has method ``hide_index()`` to determine whether the index will be rendered in output (:issue:`14194`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:512
msgid ":class:`pandas.io.formats.style.Styler` now has method ``hide_columns()`` to determine whether columns will be hidden in output (:issue:`14194`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:513
msgid "Improved wording of ``ValueError`` raised in :func:`to_datetime` when ``unit=`` is passed with a non-convertible value (:issue:`14350`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:514
msgid ":func:`Series.fillna` now accepts a Series or a dict as a ``value`` for a categorical dtype (:issue:`17033`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:515
msgid ":func:`pandas.read_clipboard` updated to use qtpy, falling back to PyQt5 and then PyQt4, adding compatibility with Python3 and multiple python-qt bindings (:issue:`17722`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:516
msgid "Improved wording of ``ValueError`` raised in :func:`read_csv` when the ``usecols`` argument cannot match all columns. (:issue:`17301`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:517
msgid ":func:`DataFrame.corrwith` now silently drops non-numeric columns when passed a Series. Before, an exception was raised (:issue:`18570`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:518
msgid ":class:`IntervalIndex` now supports time zone aware ``Interval`` objects (:issue:`18537`, :issue:`18538`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:519
msgid ":func:`Series` / :func:`DataFrame` tab completion also returns identifiers in the first level of a :func:`MultiIndex`. (:issue:`16326`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:520
msgid ":func:`read_excel()` has gained the ``nrows`` parameter (:issue:`16645`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:521
msgid ":meth:`DataFrame.append` can now in more cases preserve the type of the calling dataframe's columns (e.g. if both are ``CategoricalIndex``) (:issue:`18359`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:522
msgid ":meth:`DataFrame.to_json` and :meth:`Series.to_json` now accept an ``index`` argument which allows the user to exclude the index from the JSON output (:issue:`17394`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:523
msgid "``IntervalIndex.to_tuples()`` has gained the ``na_tuple`` parameter to control whether NA is returned as a tuple of NA, or NA itself (:issue:`18756`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:524
msgid "``Categorical.rename_categories``, ``CategoricalIndex.rename_categories`` and :attr:`Series.cat.rename_categories` can now take a callable as their argument (:issue:`18862`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:526
msgid ":class:`Interval` and :class:`IntervalIndex` have gained a ``length`` attribute (:issue:`18789`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:527
msgid "``Resampler`` objects now have a functioning :attr:`~pandas.core.resample.Resampler.pipe` method. Previously, calls to ``pipe`` were diverted to  the ``mean`` method (:issue:`17905`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:529
msgid ":func:`~pandas.api.types.is_scalar` now returns ``True`` for ``DateOffset`` objects (:issue:`18943`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:530
msgid ":func:`DataFrame.pivot` now accepts a list for the ``values=`` kwarg (:issue:`17160`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:531
msgid "Added :func:`pandas.api.extensions.register_dataframe_accessor`, :func:`pandas.api.extensions.register_series_accessor`, and :func:`pandas.api.extensions.register_index_accessor`, accessor for libraries downstream of pandas to register custom accessors like ``.cat`` on pandas objects. See :ref:`Registering Custom Accessors <extending.register-accessors>` for more (:issue:`14781`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:537
msgid "``IntervalIndex.astype`` now supports conversions between subtypes when passed an ``IntervalDtype`` (:issue:`19197`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:538
msgid ":class:`IntervalIndex` and its associated constructor methods (``from_arrays``, ``from_breaks``, ``from_tuples``) have gained a ``dtype`` parameter (:issue:`19262`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:539
msgid "Added :func:`pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing` and :func:`pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing` (:issue:`17015`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:540
msgid "For subclassed ``DataFrames``, :func:`DataFrame.apply` will now preserve the ``Series`` subclass (if defined) when passing the data to the applied function (:issue:`19822`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:541
msgid ":func:`DataFrame.from_dict` now accepts a ``columns`` argument that can be used to specify the column names when ``orient='index'`` is used (:issue:`18529`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:542
msgid "Added option ``display.html.use_mathjax`` so `MathJax <https://www.mathjax.org/>`_ can be disabled when rendering tables in ``Jupyter`` notebooks (:issue:`19856`, :issue:`19824`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:543
msgid ":func:`DataFrame.replace` now supports the ``method`` parameter, which can be used to specify the replacement method when ``to_replace`` is a scalar, list or tuple and ``value`` is ``None`` (:issue:`19632`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:544
msgid ":meth:`Timestamp.month_name`, :meth:`DatetimeIndex.month_name`, and :meth:`Series.dt.month_name` are now available (:issue:`12805`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:545
msgid ":meth:`Timestamp.day_name` and :meth:`DatetimeIndex.day_name` are now available to return day names with a specified locale (:issue:`12806`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:546
msgid ":meth:`DataFrame.to_sql` now performs a multi-value insert if the underlying connection supports itk rather than inserting row by row. ``SQLAlchemy`` dialects supporting multi-value inserts include: ``mysql``, ``postgresql``, ``sqlite`` and any dialect with ``supports_multivalues_insert``. (:issue:`14315`, :issue:`8953`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:548
msgid ":func:`read_html` now accepts a ``displayed_only`` keyword argument to controls whether or not hidden elements are parsed (``True`` by default) (:issue:`20027`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:549
msgid ":func:`read_html` now reads all ``<tbody>`` elements in a ``<table>``, not just the first. (:issue:`20690`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:550
msgid ":meth:`~pandas.core.window.Rolling.quantile` and :meth:`~pandas.core.window.Expanding.quantile` now accept the ``interpolation`` keyword, ``linear`` by default (:issue:`20497`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:551
msgid "zip compression is supported via ``compression=zip`` in :func:`DataFrame.to_pickle`, :func:`Series.to_pickle`, :func:`DataFrame.to_csv`, :func:`Series.to_csv`, :func:`DataFrame.to_json`, :func:`Series.to_json`. (:issue:`17778`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:552
msgid ":class:`~pandas.tseries.offsets.WeekOfMonth` constructor now supports ``n=0`` (:issue:`20517`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:553
msgid ":class:`DataFrame` and :class:`Series` now support matrix multiplication (``@``) operator (:issue:`10259`) for Python>=3.5"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:554
msgid "Updated :meth:`DataFrame.to_gbq` and :meth:`pandas.read_gbq` signature and documentation to reflect changes from the pandas-gbq library version 0.4.0. Adds intersphinx mapping to pandas-gbq library. (:issue:`20564`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:557
msgid "Added new writer for exporting Stata dta files in version 117, ``StataWriter117``.  This format supports exporting strings with lengths up to 2,000,000 characters (:issue:`16450`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:558
msgid ":func:`to_hdf` and :func:`read_hdf` now accept an ``errors`` keyword argument to control encoding error handling (:issue:`20835`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:559
msgid ":func:`cut` has gained the ``duplicates='raise'|'drop'`` option to control whether to raise on duplicated edges (:issue:`20947`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:560
msgid ":func:`date_range`, :func:`timedelta_range`, and :func:`interval_range` now return a linearly spaced index if ``start``, ``stop``, and ``periods`` are specified, but ``freq`` is not. (:issue:`20808`, :issue:`20983`, :issue:`20976`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:565
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:570
msgid "Dependencies have increased minimum versions"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:572
msgid "We have updated our minimum supported versions of dependencies (:issue:`15184`). If installed, we now require:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:576
msgid "Package"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:576
msgid "Minimum Version"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:576
msgid "Required"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:576
msgid "Issue"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:578
msgid "python-dateutil"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:578
msgid "2.5.0"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:578
msgid "X"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:578
#: ../../source/whatsnew/v0.23.0.rst:580
msgid ":issue:`15184`"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:580
msgid "openpyxl"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:580
msgid "2.4.0"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:582
msgid "beautifulsoup4"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:582
msgid "4.2.1"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:582
msgid ":issue:`20082`"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:584
msgid "setuptools"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:584
msgid "24.2.0"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:584
msgid ":issue:`20698`"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:590
msgid "Instantiation from dicts preserves dict insertion order for Python 3.6+"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:592
msgid "Until Python 3.6, dicts in Python had no formally defined ordering. For Python version 3.6 and later, dicts are ordered by insertion order, see `PEP 468 <https://www.python.org/dev/peps/pep-0468/>`_. pandas will use the dict's insertion order, when creating a ``Series`` or ``DataFrame`` from a dict and you're using Python version 3.6 or higher. (:issue:`19884`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:599
msgid "Previous behavior (and current behavior if on Python < 3.6):"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:614
msgid "Note the Series above is ordered alphabetically by the index values."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:616
msgid "New behavior (for Python >= 3.6):"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:625
msgid "Notice that the Series is now ordered by insertion order. This new behavior is used for all relevant pandas types (``Series``, ``DataFrame``, ``SparseSeries`` and ``SparseDataFrame``)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:629
msgid "If you wish to retain the old behavior while using Python >= 3.6, you can use ``.sort_index()``:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:642
msgid "Deprecate Panel"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:644
msgid "``Panel`` was deprecated in the 0.20.x release, showing as a ``DeprecationWarning``. Using ``Panel`` will now show a ``FutureWarning``. The recommended way to represent 3-D data are with a ``MultiIndex`` on a ``DataFrame`` via the :meth:`~Panel.to_frame` or with the `xarray package <http://xarray.pydata.org/en/stable/>`__. pandas provides a :meth:`~Panel.to_xarray` method to automate this conversion (:issue:`13563`, :issue:`18324`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:662
msgid "Convert to a MultiIndex DataFrame"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:685
msgid "Convert to an xarray DataArray"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:712
msgid "pandas.core.common removals"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:714
msgid "The following error & warning messages are removed from ``pandas.core.common`` (:issue:`13634`, :issue:`19769`):"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:716
msgid "``PerformanceWarning``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:717
msgid "``UnsupportedFunctionCall``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:718
msgid "``UnsortedIndexError``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:719
msgid "``AbstractMethodError``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:721
msgid "These are available from import from ``pandas.errors`` (since 0.19.0)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:727
msgid "Changes to make output of ``DataFrame.apply`` consistent"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:729
msgid ":func:`DataFrame.apply` was inconsistent when applying an arbitrary user-defined-function that returned a list-like with ``axis=1``. Several bugs and inconsistencies are resolved. If the applied function returns a Series, then pandas will return a DataFrame; otherwise a Series will be returned, this includes the case where a list-like (e.g. ``tuple`` or ``list`` is returned) (:issue:`16353`, :issue:`17437`, :issue:`17970`, :issue:`17348`, :issue:`17892`, :issue:`18573`, :issue:`17602`, :issue:`18775`, :issue:`18901`, :issue:`18919`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:740
msgid "Previous behavior: if the returned shape happened to match the length of original columns, this would return a ``DataFrame``. If the return shape did not match, a ``Series`` with lists was returned."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:766
msgid "New behavior: When the applied function returns a list-like, this will now *always* return a ``Series``."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:773
msgid "To have expanded columns, you can use ``result_type='expand'``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:779
msgid "To broadcast the result across the original columns (the old behaviour for list-likes of the correct length), you can use ``result_type='broadcast'``. The shape must match the original columns."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:787
msgid "Returning a ``Series`` allows one to control the exact return structure and column names:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:796
msgid "Concatenation will no longer sort"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:798
msgid "In a future version of pandas :func:`pandas.concat` will no longer sort the non-concatenation axis when it is not already aligned. The current behavior is the same as the previous (sorting), but now a warning is issued when ``sort`` is not specified and the non-concatenation axis is not aligned (:issue:`4588`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:809
msgid "To keep the previous behavior (sorting) and silence the warning, pass ``sort=True``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:815
msgid "To accept the future behavior (no sorting), pass ``sort=False``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:821
msgid "Note that this change also applies to :meth:`DataFrame.append`, which has also received a ``sort`` keyword for controlling this behavior."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:827
msgid "Build changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:829
msgid "Building pandas for development now requires ``cython >= 0.24`` (:issue:`18613`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:830
msgid "Building from source now explicitly requires ``setuptools`` in ``setup.py`` (:issue:`18113`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:831
msgid "Updated conda recipe to be in compliance with conda-build 3.0+ (:issue:`18002`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:836
msgid "Index division by zero fills correctly"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:838
msgid "Division operations on ``Index`` and subclasses will now fill division of positive numbers by zero with ``np.inf``, division of negative numbers by zero with ``-np.inf`` and ``0 / 0`` with ``np.nan``.  This matches existing ``Series`` behavior. (:issue:`19322`, :issue:`19347`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:882
msgid "Extraction of matching patterns from strings"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:884
msgid "By default, extracting matching patterns from strings with :func:`str.extract` used to return a ``Series`` if a single group was being extracted (a ``DataFrame`` if more than one group was extracted). As of pandas 0.23.0 :func:`str.extract` always returns a ``DataFrame``, unless ``expand`` is set to ``False``. Finally, ``None`` was an accepted value for the ``expand`` parameter (which was equivalent to ``False``), but now raises a ``ValueError``. (:issue:`11386`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:917
msgid "To restore previous behavior, simply set ``expand`` to ``False``:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:929
msgid "Default value for the ``ordered`` parameter of ``CategoricalDtype``"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:931
msgid "The default value of the ``ordered`` parameter for :class:`~pandas.api.types.CategoricalDtype` has changed from ``False`` to ``None`` to allow updating of ``categories`` without impacting ``ordered``.  Behavior should remain consistent for downstream objects, such as :class:`Categorical` (:issue:`18790`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:933
msgid "In previous versions, the default value for the ``ordered`` parameter was ``False``.  This could potentially lead to the ``ordered`` parameter unintentionally being changed from ``True`` to ``False`` when users attempt to update ``categories`` if ``ordered`` is not explicitly specified, as it would silently default to ``False``.  The new behavior for ``ordered=None`` is to retain the existing value of ``ordered``."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:955
msgid "Notice in the example above that the converted ``Categorical`` has retained ``ordered=True``.  Had the default value for ``ordered`` remained as ``False``, the converted ``Categorical`` would have become unordered, despite ``ordered=False`` never being explicitly specified.  To change the value of ``ordered``, explicitly pass it to the new dtype, e.g. ``CategoricalDtype(categories=list('cbad'), ordered=False)``."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:957
msgid "Note that the unintentional conversion of ``ordered`` discussed above did not arise in previous versions due to separate bugs that prevented ``astype`` from doing any type of category to category conversion (:issue:`10696`, :issue:`18593`).  These bugs have been fixed in this release, and motivated changing the default value of ``ordered``."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:962
msgid "Better pretty-printing of DataFrames in a terminal"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:963
msgid "Previously, the default value for the maximum number of columns was ``pd.options.display.max_columns=20``. This meant that relatively wide data frames would not fit within the terminal width, and pandas would introduce line breaks to display these 20 columns. This resulted in an output that was relatively difficult to read:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:971
msgid "If Python runs in a terminal, the maximum number of columns is now determined automatically so that the printed data frame fits within the current terminal width (``pd.options.display.max_columns=0``) (:issue:`17023`). If Python runs as a Jupyter kernel (such as the Jupyter QtConsole or a Jupyter notebook, as well as in many IDEs), this value cannot be inferred automatically and is thus set to ``20`` as in previous versions. In a terminal, this results in a much nicer output:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:981
msgid "Note that if you don't like the new default, you can always set this option yourself. To revert to the old setting, you can run this line:"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:991
msgid "Datetimelike API changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:993
msgid "The default ``Timedelta`` constructor now accepts an ``ISO 8601 Duration`` string as an argument (:issue:`19040`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:994
msgid "Subtracting ``NaT`` from a :class:`Series` with ``dtype='datetime64[ns]'`` returns a ``Series`` with ``dtype='timedelta64[ns]'`` instead of ``dtype='datetime64[ns]'`` (:issue:`18808`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:995
msgid "Addition or subtraction of ``NaT`` from :class:`TimedeltaIndex` will return ``TimedeltaIndex`` instead of ``DatetimeIndex`` (:issue:`19124`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:996
msgid ":func:`DatetimeIndex.shift` and :func:`TimedeltaIndex.shift` will now raise ``NullFrequencyError`` (which subclasses ``ValueError``, which was raised in older versions) when the index object frequency is ``None`` (:issue:`19147`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:997
msgid "Addition and subtraction of ``NaN`` from a :class:`Series` with ``dtype='timedelta64[ns]'`` will raise a ``TypeError`` instead of treating the ``NaN`` as ``NaT`` (:issue:`19274`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:998
msgid "``NaT`` division with :class:`datetime.timedelta` will now return ``NaN`` instead of raising (:issue:`17876`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:999
msgid "Operations between a :class:`Series` with dtype ``dtype='datetime64[ns]'`` and a :class:`PeriodIndex` will correctly raises ``TypeError`` (:issue:`18850`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1000
msgid "Subtraction of :class:`Series` with timezone-aware ``dtype='datetime64[ns]'`` with mismatched timezones will raise ``TypeError`` instead of ``ValueError`` (:issue:`18817`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1001
msgid ":class:`Timestamp` will no longer silently ignore unused or invalid ``tz`` or ``tzinfo`` keyword arguments (:issue:`17690`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1002
msgid ":class:`Timestamp` will no longer silently ignore invalid ``freq`` arguments (:issue:`5168`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1003
msgid ":class:`CacheableOffset` and :class:`WeekDay` are no longer available in the ``pandas.tseries.offsets`` module (:issue:`17830`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1004
msgid "``pandas.tseries.frequencies.get_freq_group()`` and ``pandas.tseries.frequencies.DAYS`` are removed from the public API (:issue:`18034`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1005
msgid ":func:`Series.truncate` and :func:`DataFrame.truncate` will raise a ``ValueError`` if the index is not sorted instead of an unhelpful ``KeyError`` (:issue:`17935`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1006
msgid ":attr:`Series.first` and :attr:`DataFrame.first` will now raise a ``TypeError`` rather than ``NotImplementedError`` when index is not a :class:`DatetimeIndex` (:issue:`20725`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1008
msgid ":attr:`Series.last` and :attr:`DataFrame.last` will now raise a ``TypeError`` rather than ``NotImplementedError`` when index is not a :class:`DatetimeIndex` (:issue:`20725`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1010
msgid "Restricted ``DateOffset`` keyword arguments. Previously, ``DateOffset`` subclasses allowed arbitrary keyword arguments which could lead to unexpected behavior. Now, only valid arguments will be accepted. (:issue:`17176`, :issue:`18226`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1011
msgid ":func:`pandas.merge` provides a more informative error message when trying to merge on timezone-aware and timezone-naive columns (:issue:`15800`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1012
msgid "For :class:`DatetimeIndex` and :class:`TimedeltaIndex` with ``freq=None``, addition or subtraction of integer-dtyped array or ``Index`` will raise ``NullFrequencyError`` instead of ``TypeError`` (:issue:`19895`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1013
msgid ":class:`Timestamp` constructor now accepts a ``nanosecond`` keyword or positional argument (:issue:`18898`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1014
msgid ":class:`DatetimeIndex` will now raise an ``AttributeError`` when the ``tz`` attribute is set after instantiation (:issue:`3746`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1015
msgid ":class:`DatetimeIndex` with a ``pytz`` timezone will now return a consistent ``pytz`` timezone (:issue:`18595`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1020
msgid "Other API changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1022
msgid ":func:`Series.astype` and :func:`Index.astype` with an incompatible dtype will now raise a ``TypeError`` rather than a ``ValueError`` (:issue:`18231`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1023
msgid "``Series`` construction with an ``object`` dtyped tz-aware datetime and ``dtype=object`` specified, will now return an ``object`` dtyped ``Series``, previously this would infer the datetime dtype (:issue:`18231`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1024
msgid "A :class:`Series` of ``dtype=category`` constructed from an empty ``dict`` will now have categories of ``dtype=object`` rather than ``dtype=float64``, consistently with the case in which an empty list is passed (:issue:`18515`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1025
msgid "All-NaN levels in a ``MultiIndex`` are now assigned ``float`` rather than ``object`` dtype, promoting consistency with ``Index`` (:issue:`17929`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1026
msgid "Levels names of a ``MultiIndex`` (when not None) are now required to be unique: trying to create a ``MultiIndex`` with repeated names will raise a ``ValueError`` (:issue:`18872`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1027
msgid "Both construction and renaming of ``Index``/``MultiIndex`` with non-hashable ``name``/``names`` will now raise ``TypeError`` (:issue:`20527`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1028
msgid ":func:`Index.map` can now accept ``Series`` and dictionary input objects (:issue:`12756`, :issue:`18482`, :issue:`18509`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1029
msgid ":func:`DataFrame.unstack` will now default to filling with ``np.nan`` for ``object`` columns. (:issue:`12815`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1030
msgid ":class:`IntervalIndex` constructor will raise if the ``closed`` parameter conflicts with how the input data is inferred to be closed (:issue:`18421`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1031
msgid "Inserting missing values into indexes will work for all types of indexes and automatically insert the correct type of missing value (``NaN``, ``NaT``, etc.) regardless of the type passed in (:issue:`18295`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1032
msgid "When created with duplicate labels, ``MultiIndex`` now raises a ``ValueError``. (:issue:`17464`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1033
msgid ":func:`Series.fillna` now raises a ``TypeError`` instead of a ``ValueError`` when passed a list, tuple or DataFrame as a ``value`` (:issue:`18293`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1034
msgid ":func:`pandas.DataFrame.merge` no longer casts a ``float`` column to ``object`` when merging on ``int`` and ``float`` columns (:issue:`16572`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1035
msgid ":func:`pandas.merge` now raises a ``ValueError`` when trying to merge on incompatible data types (:issue:`9780`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1036
msgid "The default NA value for :class:`UInt64Index` has changed from 0 to ``NaN``, which impacts methods that mask with NA, such as ``UInt64Index.where()`` (:issue:`18398`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1037
msgid "Refactored ``setup.py`` to use ``find_packages`` instead of explicitly listing out all subpackages (:issue:`18535`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1038
#: ../../source/whatsnew/v0.23.0.rst:1041
msgid "Rearranged the order of keyword arguments in :func:`read_excel()` to align with :func:`read_csv()` (:issue:`16672`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1039
msgid ":func:`wide_to_long` previously kept numeric-like suffixes as ``object`` dtype. Now they are cast to numeric if possible (:issue:`17627`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1040
msgid "In :func:`read_excel`, the ``comment`` argument is now exposed as a named parameter (:issue:`18735`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1042
msgid "The options ``html.border`` and ``mode.use_inf_as_null`` were deprecated in prior versions, these will now show ``FutureWarning`` rather than a ``DeprecationWarning`` (:issue:`19003`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1043
msgid ":class:`IntervalIndex` and ``IntervalDtype`` no longer support categorical, object, and string subtypes (:issue:`19016`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1044
msgid "``IntervalDtype`` now returns ``True`` when compared against ``'interval'`` regardless of subtype, and ``IntervalDtype.name`` now returns ``'interval'`` regardless of subtype (:issue:`18980`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1045
msgid "``KeyError`` now raises instead of ``ValueError`` in :meth:`~DataFrame.drop`, :meth:`~Panel.drop`, :meth:`~Series.drop`, :meth:`~Index.drop` when dropping a non-existent element in an axis with duplicates (:issue:`19186`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1046
msgid ":func:`Series.to_csv` now accepts a ``compression`` argument that works in the same way as the ``compression`` argument in :func:`DataFrame.to_csv` (:issue:`18958`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1047
msgid "Set operations (union, difference...) on :class:`IntervalIndex` with incompatible index types will now raise a ``TypeError`` rather than a ``ValueError`` (:issue:`19329`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1048
msgid ":class:`DateOffset` objects render more simply, e.g. ``<DateOffset: days=1>`` instead of ``<DateOffset: kwds={'days': 1}>`` (:issue:`19403`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1049
msgid "``Categorical.fillna`` now validates its ``value`` and ``method`` keyword arguments. It now raises when both or none are specified, matching the behavior of :meth:`Series.fillna` (:issue:`19682`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1050
msgid "``pd.to_datetime('today')`` now returns a datetime, consistent with ``pd.Timestamp('today')``; previously ``pd.to_datetime('today')`` returned a ``.normalized()`` datetime (:issue:`19935`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1051
msgid ":func:`Series.str.replace` now takes an optional ``regex`` keyword which, when set to ``False``, uses literal string replacement rather than regex replacement (:issue:`16808`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1052
msgid ":func:`DatetimeIndex.strftime` and :func:`PeriodIndex.strftime` now return an ``Index`` instead of a numpy array to be consistent with similar accessors (:issue:`20127`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1053
msgid "Constructing a Series from a list of length 1 no longer broadcasts this list when a longer index is specified (:issue:`19714`, :issue:`20391`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1054
msgid ":func:`DataFrame.to_dict` with ``orient='index'`` no longer casts int columns to float for a DataFrame with only int and float columns (:issue:`18580`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1055
msgid "A user-defined-function that is passed to :func:`Series.rolling().aggregate() <pandas.core.window.Rolling.aggregate>`, :func:`DataFrame.rolling().aggregate() <pandas.core.window.Rolling.aggregate>`, or its expanding cousins, will now *always* be passed a ``Series``, rather than a ``np.array``; ``.apply()`` only has the ``raw`` keyword, see :ref:`here <whatsnew_0230.enhancements.window_raw>`. This is consistent with the signatures of ``.aggregate()`` across pandas (:issue:`20584`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1056
msgid "Rolling and Expanding types raise ``NotImplementedError`` upon iteration (:issue:`11704`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1061
msgid "Deprecations"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1063
msgid "``Series.from_array`` and ``SparseSeries.from_array`` are deprecated. Use the normal constructor ``Series(..)`` and ``SparseSeries(..)`` instead (:issue:`18213`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1064
msgid "``DataFrame.as_matrix`` is deprecated. Use ``DataFrame.values`` instead (:issue:`18458`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1065
msgid "``Series.asobject``, ``DatetimeIndex.asobject``, ``PeriodIndex.asobject`` and ``TimeDeltaIndex.asobject`` have been deprecated. Use ``.astype(object)`` instead (:issue:`18572`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1066
msgid "Grouping by a tuple of keys now emits a ``FutureWarning`` and is deprecated. In the future, a tuple passed to ``'by'`` will always refer to a single key that is the actual tuple, instead of treating the tuple as multiple keys. To retain the previous behavior, use a list instead of a tuple (:issue:`18314`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1070
msgid "``Series.valid`` is deprecated. Use :meth:`Series.dropna` instead (:issue:`18800`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1071
msgid ":func:`read_excel` has deprecated the ``skip_footer`` parameter. Use ``skipfooter`` instead (:issue:`18836`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1072
msgid ":meth:`ExcelFile.parse` has deprecated ``sheetname`` in favor of ``sheet_name`` for consistency with :func:`read_excel` (:issue:`20920`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1073
msgid "The ``is_copy`` attribute is deprecated and will be removed in a future version (:issue:`18801`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1074
msgid "``IntervalIndex.from_intervals`` is deprecated in favor of the :class:`IntervalIndex` constructor (:issue:`19263`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1075
msgid "``DataFrame.from_items`` is deprecated. Use :func:`DataFrame.from_dict` instead, or ``DataFrame.from_dict(OrderedDict())`` if you wish to preserve the key order (:issue:`17320`, :issue:`17312`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1076
msgid "Indexing a :class:`MultiIndex` or a :class:`FloatIndex` with a list containing some missing keys will now show a :class:`FutureWarning`, which is consistent with other types of indexes (:issue:`17758`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1078
msgid "The ``broadcast`` parameter of ``.apply()`` is deprecated in favor of ``result_type='broadcast'`` (:issue:`18577`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1079
msgid "The ``reduce`` parameter of ``.apply()`` is deprecated in favor of ``result_type='reduce'`` (:issue:`18577`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1080
msgid "The ``order`` parameter of :func:`factorize` is deprecated and will be removed in a future release (:issue:`19727`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1081
msgid ":attr:`Timestamp.weekday_name`, :attr:`DatetimeIndex.weekday_name`, and :attr:`Series.dt.weekday_name` are deprecated in favor of :meth:`Timestamp.day_name`, :meth:`DatetimeIndex.day_name`, and :meth:`Series.dt.day_name` (:issue:`12806`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1083
msgid "``pandas.tseries.plotting.tsplot`` is deprecated. Use :func:`Series.plot` instead (:issue:`18627`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1084
msgid "``Index.summary()`` is deprecated and will be removed in a future version (:issue:`18217`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1085
msgid "``NDFrame.get_ftype_counts()`` is deprecated and will be removed in a future version (:issue:`18243`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1086
msgid "The ``convert_datetime64`` parameter in :func:`DataFrame.to_records` has been deprecated and will be removed in a future version. The NumPy bug motivating this parameter has been resolved. The default value for this parameter has also changed from ``True`` to ``None`` (:issue:`18160`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1087
msgid ":func:`Series.rolling().apply() <pandas.core.window.Rolling.apply>`, :func:`DataFrame.rolling().apply() <pandas.core.window.Rolling.apply>`, :func:`Series.expanding().apply() <pandas.core.window.Expanding.apply>`, and :func:`DataFrame.expanding().apply() <pandas.core.window.Expanding.apply>` have deprecated passing an ``np.array`` by default. One will need to pass the new ``raw`` parameter to be explicit about what is passed (:issue:`20584`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1089
msgid "The ``data``, ``base``, ``strides``, ``flags`` and ``itemsize`` properties of the ``Series`` and ``Index`` classes have been deprecated and will be removed in a future version (:issue:`20419`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1092
msgid "``DatetimeIndex.offset`` is deprecated. Use ``DatetimeIndex.freq`` instead (:issue:`20716`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1093
msgid "Floor division between an integer ndarray and a :class:`Timedelta` is deprecated. Divide by :attr:`Timedelta.value` instead (:issue:`19761`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1094
msgid "Setting ``PeriodIndex.freq`` (which was not guaranteed to work correctly) is deprecated. Use :meth:`PeriodIndex.asfreq` instead (:issue:`20678`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1095
msgid "``Index.get_duplicates()`` is deprecated and will be removed in a future version (:issue:`20239`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1096
msgid "The previous default behavior of negative indices in ``Categorical.take`` is deprecated. In a future version it will change from meaning missing values to meaning positional indices from the right. The future behavior is consistent with :meth:`Series.take` (:issue:`20664`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1097
msgid "Passing multiple axes to the ``axis`` parameter in :func:`DataFrame.dropna` has been deprecated and will be removed in a future version (:issue:`20987`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1103
msgid "Removal of prior version deprecations/changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1105
msgid "Warnings against the obsolete usage ``Categorical(codes, categories)``, which were emitted for instance when the first two arguments to ``Categorical()`` had different dtypes, and recommended the use of ``Categorical.from_codes``, have now been removed (:issue:`8074`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1106
msgid "The ``levels`` and ``labels`` attributes of a ``MultiIndex`` can no longer be set directly (:issue:`4039`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1107
msgid "``pd.tseries.util.pivot_annual`` has been removed (deprecated since v0.19). Use ``pivot_table`` instead (:issue:`18370`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1108
msgid "``pd.tseries.util.isleapyear`` has been removed (deprecated since v0.19). Use ``.is_leap_year`` property in Datetime-likes instead (:issue:`18370`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1109
msgid "``pd.ordered_merge`` has been removed (deprecated since v0.19). Use ``pd.merge_ordered`` instead (:issue:`18459`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1110
msgid "The ``SparseList`` class has been removed (:issue:`14007`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1111
msgid "The ``pandas.io.wb`` and ``pandas.io.data`` stub modules have been removed (:issue:`13735`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1112
msgid "``Categorical.from_array`` has been removed (:issue:`13854`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1113
msgid "The ``freq`` and ``how`` parameters have been removed from the ``rolling``/``expanding``/``ewm`` methods of DataFrame and Series (deprecated since v0.18). Instead, resample before calling the methods. (:issue:`18601` & :issue:`18668`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1115
msgid "``DatetimeIndex.to_datetime``, ``Timestamp.to_datetime``, ``PeriodIndex.to_datetime``, and ``Index.to_datetime`` have been removed (:issue:`8254`, :issue:`14096`, :issue:`14113`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1116
msgid ":func:`read_csv` has dropped the ``skip_footer`` parameter (:issue:`13386`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1117
msgid ":func:`read_csv` has dropped the ``as_recarray`` parameter (:issue:`13373`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1118
msgid ":func:`read_csv` has dropped the ``buffer_lines`` parameter (:issue:`13360`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1119
msgid ":func:`read_csv` has dropped the ``compact_ints`` and ``use_unsigned`` parameters (:issue:`13323`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1120
msgid "The ``Timestamp`` class has dropped the ``offset`` attribute in favor of ``freq`` (:issue:`13593`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1121
msgid "The ``Series``, ``Categorical``, and ``Index`` classes have dropped the ``reshape`` method (:issue:`13012`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1122
msgid "``pandas.tseries.frequencies.get_standard_freq`` has been removed in favor of ``pandas.tseries.frequencies.to_offset(freq).rule_code`` (:issue:`13874`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1123
msgid "The ``freqstr`` keyword has been removed from ``pandas.tseries.frequencies.to_offset`` in favor of ``freq`` (:issue:`13874`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1124
msgid "The ``Panel4D`` and ``PanelND`` classes have been removed (:issue:`13776`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1125
msgid "The ``Panel`` class has dropped the ``to_long`` and ``toLong`` methods (:issue:`19077`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1126
msgid "The options ``display.line_with`` and ``display.height`` are removed in favor of ``display.width`` and ``display.max_rows`` respectively (:issue:`4391`, :issue:`19107`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1127
msgid "The ``labels`` attribute of the ``Categorical`` class has been removed in favor of :attr:`Categorical.codes` (:issue:`7768`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1128
msgid "The ``flavor`` parameter have been removed from :func:`to_sql` method (:issue:`13611`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1129
msgid "The modules ``pandas.tools.hashing`` and ``pandas.util.hashing`` have been removed (:issue:`16223`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1130
msgid "The top-level functions ``pd.rolling_*``, ``pd.expanding_*`` and ``pd.ewm*`` have been removed (Deprecated since v0.18). Instead, use the DataFrame/Series methods :attr:`~DataFrame.rolling`, :attr:`~DataFrame.expanding` and :attr:`~DataFrame.ewm` (:issue:`18723`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1132
msgid "Imports from ``pandas.core.common`` for functions such as ``is_datetime64_dtype`` are now removed. These are located in ``pandas.api.types``. (:issue:`13634`, :issue:`19769`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1133
msgid "The ``infer_dst`` keyword in :meth:`Series.tz_localize`, :meth:`DatetimeIndex.tz_localize` and :class:`DatetimeIndex` have been removed. ``infer_dst=True`` is equivalent to ``ambiguous='infer'``, and ``infer_dst=False`` to ``ambiguous='raise'`` (:issue:`7963`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1136
msgid "When ``.resample()`` was changed from an eager to a lazy operation, like ``.groupby()`` in v0.18.0, we put in place compatibility (with a ``FutureWarning``), so operations would continue to work. This is now fully removed, so a ``Resampler`` will no longer forward compat operations (:issue:`20554`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1138
msgid "Remove long deprecated ``axis=None`` parameter from ``.replace()`` (:issue:`20271`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1143
msgid "Performance improvements"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1145
msgid "Indexers on ``Series`` or ``DataFrame`` no longer create a reference cycle (:issue:`17956`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1146
msgid "Added a keyword argument, ``cache``, to :func:`to_datetime` that improved the performance of converting duplicate datetime arguments (:issue:`11665`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1147
msgid ":class:`DateOffset` arithmetic performance is improved (:issue:`18218`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1148
msgid "Converting a ``Series`` of ``Timedelta`` objects to days, seconds, etc... sped up through vectorization of underlying methods (:issue:`18092`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1149
msgid "Improved performance of ``.map()`` with a ``Series/dict`` input (:issue:`15081`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1150
msgid "The overridden ``Timedelta`` properties of days, seconds and microseconds have been removed, leveraging their built-in Python versions instead (:issue:`18242`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1151
msgid "``Series`` construction will reduce the number of copies made of the input data in certain cases (:issue:`17449`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1152
msgid "Improved performance of :func:`Series.dt.date` and :func:`DatetimeIndex.date` (:issue:`18058`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1153
msgid "Improved performance of :func:`Series.dt.time` and :func:`DatetimeIndex.time` (:issue:`18461`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1154
msgid "Improved performance of :func:`IntervalIndex.symmetric_difference()` (:issue:`18475`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1155
msgid "Improved performance of ``DatetimeIndex`` and ``Series`` arithmetic operations with Business-Month and Business-Quarter frequencies (:issue:`18489`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1156
msgid ":func:`Series` / :func:`DataFrame` tab completion limits to 100 values, for better performance. (:issue:`18587`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1157
msgid "Improved performance of :func:`DataFrame.median` with ``axis=1`` when bottleneck is not installed (:issue:`16468`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1158
msgid "Improved performance of :func:`MultiIndex.get_loc` for large indexes, at the cost of a reduction in performance for small ones (:issue:`18519`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1159
msgid "Improved performance of :func:`MultiIndex.remove_unused_levels` when there are no unused levels, at the cost of a reduction in performance when there are (:issue:`19289`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1160
msgid "Improved performance of :func:`Index.get_loc` for non-unique indexes (:issue:`19478`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1161
msgid "Improved performance of pairwise ``.rolling()`` and ``.expanding()`` with ``.cov()`` and ``.corr()`` operations (:issue:`17917`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1162
msgid "Improved performance of :func:`pandas.core.groupby.GroupBy.rank` (:issue:`15779`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1163
msgid "Improved performance of variable ``.rolling()`` on ``.min()`` and ``.max()`` (:issue:`19521`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1164
msgid "Improved performance of :func:`pandas.core.groupby.GroupBy.ffill` and :func:`pandas.core.groupby.GroupBy.bfill` (:issue:`11296`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1165
msgid "Improved performance of :func:`pandas.core.groupby.GroupBy.any` and :func:`pandas.core.groupby.GroupBy.all` (:issue:`15435`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1166
msgid "Improved performance of :func:`pandas.core.groupby.GroupBy.pct_change` (:issue:`19165`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1167
msgid "Improved performance of :func:`Series.isin` in the case of categorical dtypes (:issue:`20003`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1168
msgid "Improved performance of ``getattr(Series, attr)`` when the Series has certain index types. This manifested in slow printing of large Series with a ``DatetimeIndex`` (:issue:`19764`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1169
msgid "Fixed a performance regression for :func:`GroupBy.nth` and :func:`GroupBy.last` with some object columns (:issue:`19283`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1170
msgid "Improved performance of :func:`pandas.core.arrays.Categorical.from_codes` (:issue:`18501`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1175
msgid "Documentation changes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1177
msgid "Thanks to all of the contributors who participated in the pandas Documentation Sprint, which took place on March 10th. We had about 500 participants from over 30 locations across the world. You should notice that many of the :ref:`API docstrings <api>` have greatly improved."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1182
msgid "There were too many simultaneous contributions to include a release note for each improvement, but this `GitHub search`_ should give you an idea of how many docstrings were improved."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1186
msgid "Special thanks to `Marc Garcia`_ for organizing the sprint. For more information, read the `NumFOCUS blogpost`_ recapping the sprint."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1193
msgid "Changed spelling of \"numpy\" to \"NumPy\", and \"python\" to \"Python\". (:issue:`19017`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1194
msgid "Consistency when introducing code samples, using either colon or period. Rewrote some sentences for greater clarity, added more dynamic references to functions, methods and classes. (:issue:`18941`, :issue:`18948`, :issue:`18973`, :issue:`19017`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1198
msgid "Added a reference to :func:`DataFrame.assign` in the concatenate section of the merging documentation (:issue:`18665`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1203
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1206
msgid "Categorical"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1210
msgid "A class of bugs were introduced in pandas 0.21 with ``CategoricalDtype`` that affects the correctness of operations like ``merge``, ``concat``, and indexing when comparing multiple unordered ``Categorical`` arrays that have the same categories, but in a different order. We highly recommend upgrading or manually aligning your categories before doing these operations."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1216
msgid "Bug in ``Categorical.equals`` returning the wrong result when comparing two unordered ``Categorical`` arrays with the same categories, but in a different order (:issue:`16603`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1219
msgid "Bug in :func:`pandas.api.types.union_categoricals` returning the wrong result when for unordered categoricals with the categories in a different order. This affected :func:`pandas.concat` with Categorical data (:issue:`19096`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1222
msgid "Bug in :func:`pandas.merge` returning the wrong result when joining on an unordered ``Categorical`` that had the same categories but in a different order (:issue:`19551`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1225
msgid "Bug in :meth:`CategoricalIndex.get_indexer` returning the wrong result when ``target`` was an unordered ``Categorical`` that had the same categories as ``self`` but in a different order (:issue:`19551`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1228
msgid "Bug in :meth:`Index.astype` with a categorical dtype where the resultant index is not converted to a :class:`CategoricalIndex` for all types of index (:issue:`18630`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1229
msgid "Bug in :meth:`Series.astype` and ``Categorical.astype()`` where an existing categorical data does not get updated (:issue:`10696`, :issue:`18593`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1230
msgid "Bug in :meth:`Series.str.split` with ``expand=True`` incorrectly raising an IndexError on empty strings (:issue:`20002`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1231
msgid "Bug in :class:`Index` constructor with ``dtype=CategoricalDtype(...)`` where ``categories`` and ``ordered`` are not maintained (:issue:`19032`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1232
msgid "Bug in :class:`Series` constructor with scalar and ``dtype=CategoricalDtype(...)`` where ``categories`` and ``ordered`` are not maintained (:issue:`19565`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1233
msgid "Bug in ``Categorical.__iter__`` not converting to Python types (:issue:`19909`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1234
msgid "Bug in :func:`pandas.factorize` returning the unique codes for the ``uniques``. This now returns a ``Categorical`` with the same dtype as the input (:issue:`19721`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1235
msgid "Bug in :func:`pandas.factorize` including an item for missing values in the ``uniques`` return value (:issue:`19721`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1236
msgid "Bug in :meth:`Series.take` with categorical data interpreting ``-1`` in ``indices`` as missing value markers, rather than the last element of the Series (:issue:`20664`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1239
msgid "Datetimelike"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1241
msgid "Bug in :func:`Series.__sub__` subtracting a non-nanosecond ``np.datetime64`` object from a ``Series`` gave incorrect results (:issue:`7996`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1242
msgid "Bug in :class:`DatetimeIndex`, :class:`TimedeltaIndex` addition and subtraction of zero-dimensional integer arrays gave incorrect results (:issue:`19012`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1243
msgid "Bug in :class:`DatetimeIndex` and :class:`TimedeltaIndex` where adding or subtracting an array-like of ``DateOffset`` objects either raised (``np.array``, ``pd.Index``) or broadcast incorrectly (``pd.Series``) (:issue:`18849`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1244
msgid "Bug in :func:`Series.__add__` adding Series with dtype ``timedelta64[ns]`` to a timezone-aware ``DatetimeIndex`` incorrectly dropped timezone information (:issue:`13905`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1245
msgid "Adding a ``Period`` object to a ``datetime`` or ``Timestamp`` object will now correctly raise a ``TypeError`` (:issue:`17983`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1246
msgid "Bug in :class:`Timestamp` where comparison with an array of ``Timestamp`` objects would result in a ``RecursionError`` (:issue:`15183`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1247
msgid "Bug in :class:`Series` floor-division where operating on a scalar ``timedelta`` raises an exception (:issue:`18846`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1248
msgid "Bug in :class:`DatetimeIndex` where the repr was not showing high-precision time values at the end of a day (e.g., 23:59:59.999999999) (:issue:`19030`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1249
msgid "Bug in ``.astype()`` to non-ns timedelta units would hold the incorrect dtype (:issue:`19176`, :issue:`19223`, :issue:`12425`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1250
msgid "Bug in subtracting :class:`Series` from ``NaT`` incorrectly returning ``NaT`` (:issue:`19158`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1251
msgid "Bug in :func:`Series.truncate` which raises ``TypeError`` with a monotonic ``PeriodIndex`` (:issue:`17717`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1252
msgid "Bug in :func:`~DataFrame.pct_change` using ``periods`` and ``freq`` returned different length outputs (:issue:`7292`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1253
msgid "Bug in comparison of :class:`DatetimeIndex` against ``None`` or ``datetime.date`` objects raising ``TypeError`` for ``==`` and ``!=`` comparisons instead of all-``False`` and all-``True``, respectively (:issue:`19301`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1254
msgid "Bug in :class:`Timestamp` and :func:`to_datetime` where a string representing a barely out-of-bounds timestamp would be incorrectly rounded down instead of raising ``OutOfBoundsDatetime`` (:issue:`19382`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1255
msgid "Bug in :func:`Timestamp.floor` :func:`DatetimeIndex.floor` where time stamps far in the future and past were not rounded correctly (:issue:`19206`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1256
msgid "Bug in :func:`to_datetime` where passing an out-of-bounds datetime with ``errors='coerce'`` and ``utc=True`` would raise ``OutOfBoundsDatetime`` instead of parsing to ``NaT`` (:issue:`19612`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1257
msgid "Bug in :class:`DatetimeIndex` and :class:`TimedeltaIndex` addition and subtraction where name of the returned object was not always set consistently. (:issue:`19744`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1258
msgid "Bug in :class:`DatetimeIndex` and :class:`TimedeltaIndex` addition and subtraction where operations with numpy arrays raised ``TypeError`` (:issue:`19847`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1259
msgid "Bug in :class:`DatetimeIndex` and :class:`TimedeltaIndex` where setting the ``freq`` attribute was not fully supported (:issue:`20678`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1262
msgid "Timedelta"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1264
msgid "Bug in :func:`Timedelta.__mul__` where multiplying by ``NaT`` returned ``NaT`` instead of raising a ``TypeError`` (:issue:`19819`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1265
msgid "Bug in :class:`Series` with ``dtype='timedelta64[ns]'`` where addition or subtraction of ``TimedeltaIndex`` had results cast to ``dtype='int64'`` (:issue:`17250`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1266
msgid "Bug in :class:`Series` with ``dtype='timedelta64[ns]'`` where addition or subtraction of ``TimedeltaIndex`` could return a ``Series`` with an incorrect name (:issue:`19043`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1267
msgid "Bug in :func:`Timedelta.__floordiv__` and :func:`Timedelta.__rfloordiv__` dividing by many incompatible numpy objects was incorrectly allowed (:issue:`18846`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1268
msgid "Bug where dividing a scalar timedelta-like object with :class:`TimedeltaIndex` performed the reciprocal operation (:issue:`19125`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1269
msgid "Bug in :class:`TimedeltaIndex` where division by a ``Series`` would return a ``TimedeltaIndex`` instead of a ``Series`` (:issue:`19042`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1270
msgid "Bug in :func:`Timedelta.__add__`, :func:`Timedelta.__sub__` where adding or subtracting a ``np.timedelta64`` object would return another ``np.timedelta64`` instead of a ``Timedelta`` (:issue:`19738`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1271
msgid "Bug in :func:`Timedelta.__floordiv__`, :func:`Timedelta.__rfloordiv__` where operating with a ``Tick`` object would raise a ``TypeError`` instead of returning a numeric value (:issue:`19738`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1272
msgid "Bug in :func:`Period.asfreq` where periods near ``datetime(1, 1, 1)`` could be converted incorrectly (:issue:`19643`, :issue:`19834`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1273
msgid "Bug in :func:`Timedelta.total_seconds()` causing precision errors, for example ``Timedelta('30S').total_seconds()==30.000000000000004`` (:issue:`19458`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1274
msgid "Bug in :func:`Timedelta.__rmod__` where operating with a ``numpy.timedelta64`` returned a ``timedelta64`` object instead of a ``Timedelta`` (:issue:`19820`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1275
msgid "Multiplication of :class:`TimedeltaIndex` by ``TimedeltaIndex`` will now raise ``TypeError`` instead of raising ``ValueError`` in cases of length mismatch (:issue:`19333`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1276
msgid "Bug in indexing a :class:`TimedeltaIndex` with a ``np.timedelta64`` object which was raising a ``TypeError`` (:issue:`20393`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1280
msgid "Timezones"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1282
msgid "Bug in creating a ``Series`` from an array that contains both tz-naive and tz-aware values will result in a ``Series`` whose dtype is tz-aware instead of object (:issue:`16406`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1283
msgid "Bug in comparison of timezone-aware :class:`DatetimeIndex` against ``NaT`` incorrectly raising ``TypeError`` (:issue:`19276`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1284
msgid "Bug in :meth:`DatetimeIndex.astype` when converting between timezone aware dtypes, and converting from timezone aware to naive (:issue:`18951`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1285
msgid "Bug in comparing :class:`DatetimeIndex`, which failed to raise ``TypeError`` when attempting to compare timezone-aware and timezone-naive datetimelike objects (:issue:`18162`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1286
msgid "Bug in localization of a naive, datetime string in a ``Series`` constructor with a ``datetime64[ns, tz]`` dtype (:issue:`174151`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1287
msgid ":func:`Timestamp.replace` will now handle Daylight Savings transitions gracefully (:issue:`18319`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1288
msgid "Bug in tz-aware :class:`DatetimeIndex` where addition/subtraction with a :class:`TimedeltaIndex` or array with ``dtype='timedelta64[ns]'`` was incorrect (:issue:`17558`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1289
msgid "Bug in :func:`DatetimeIndex.insert` where inserting ``NaT`` into a timezone-aware index incorrectly raised (:issue:`16357`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1290
msgid "Bug in :class:`DataFrame` constructor, where tz-aware Datetimeindex and a given column name will result in an empty ``DataFrame`` (:issue:`19157`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1291
msgid "Bug in :func:`Timestamp.tz_localize` where localizing a timestamp near the minimum or maximum valid values could overflow and return a timestamp with an incorrect nanosecond value (:issue:`12677`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1292
msgid "Bug when iterating over :class:`DatetimeIndex` that was localized with fixed timezone offset that rounded nanosecond precision to microseconds (:issue:`19603`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1293
msgid "Bug in :func:`DataFrame.diff` that raised an ``IndexError`` with tz-aware values (:issue:`18578`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1294
msgid "Bug in :func:`melt` that converted tz-aware dtypes to tz-naive (:issue:`15785`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1295
msgid "Bug in :func:`Dataframe.count` that raised an ``ValueError``, if :func:`Dataframe.dropna` was called for a single column with timezone-aware values. (:issue:`13407`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1298
msgid "Offsets"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1300
msgid "Bug in :class:`WeekOfMonth` and :class:`Week` where addition and subtraction did not roll correctly (:issue:`18510`, :issue:`18672`, :issue:`18864`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1301
msgid "Bug in :class:`WeekOfMonth` and :class:`LastWeekOfMonth` where default keyword arguments for constructor raised ``ValueError`` (:issue:`19142`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1302
msgid "Bug in :class:`FY5253Quarter`, :class:`LastWeekOfMonth` where rollback and rollforward behavior was inconsistent with addition and subtraction behavior (:issue:`18854`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1303
msgid "Bug in :class:`FY5253` where ``datetime`` addition and subtraction incremented incorrectly for dates on the year-end but not normalized to midnight (:issue:`18854`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1304
msgid "Bug in :class:`FY5253` where date offsets could incorrectly raise an ``AssertionError`` in arithmetic operations (:issue:`14774`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1307
msgid "Numeric"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1308
msgid "Bug in :class:`Series` constructor with an int or float list where specifying ``dtype=str``, ``dtype='str'`` or ``dtype='U'`` failed to convert the data elements to strings (:issue:`16605`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1309
msgid "Bug in :class:`Index` multiplication and division methods where operating with a ``Series`` would return an ``Index`` object instead of a ``Series`` object (:issue:`19042`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1310
msgid "Bug in the :class:`DataFrame` constructor in which data containing very large positive or very large negative numbers was causing ``OverflowError`` (:issue:`18584`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1311
msgid "Bug in :class:`Index` constructor with ``dtype='uint64'`` where int-like floats were not coerced to :class:`UInt64Index` (:issue:`18400`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1312
msgid "Bug in :class:`DataFrame` flex arithmetic (e.g. ``df.add(other, fill_value=foo)``) with a ``fill_value`` other than ``None`` failed to raise ``NotImplementedError`` in corner cases where either the frame or ``other`` has length zero (:issue:`19522`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1313
msgid "Multiplication and division of numeric-dtyped :class:`Index` objects with timedelta-like scalars returns ``TimedeltaIndex`` instead of raising ``TypeError`` (:issue:`19333`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1314
msgid "Bug where ``NaN`` was returned instead of 0 by :func:`Series.pct_change` and :func:`DataFrame.pct_change` when ``fill_method`` is not ``None`` (:issue:`19873`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1317
msgid "Strings"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1318
msgid "Bug in :func:`Series.str.get` with a dictionary in the values and the index not in the keys, raising ``KeyError`` (:issue:`20671`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1322
msgid "Indexing"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1324
msgid "Bug in :class:`Index` construction from list of mixed type tuples (:issue:`18505`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1325
msgid "Bug in :func:`Index.drop` when passing a list of both tuples and non-tuples (:issue:`18304`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1326
msgid "Bug in :func:`DataFrame.drop`, :meth:`Panel.drop`, :meth:`Series.drop`, :meth:`Index.drop` where no ``KeyError`` is raised when dropping a non-existent element from an axis that contains duplicates (:issue:`19186`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1327
msgid "Bug in indexing a datetimelike ``Index`` that raised ``ValueError`` instead of ``IndexError`` (:issue:`18386`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1328
msgid ":func:`Index.to_series` now accepts ``index`` and ``name`` kwargs (:issue:`18699`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1329
msgid ":func:`DatetimeIndex.to_series` now accepts ``index`` and ``name`` kwargs (:issue:`18699`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1330
msgid "Bug in indexing non-scalar value from ``Series`` having non-unique ``Index`` will return value flattened (:issue:`17610`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1331
msgid "Bug in indexing with iterator containing only missing keys, which raised no error (:issue:`20748`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1332
msgid "Fixed inconsistency in ``.ix`` between list and scalar keys when the index has integer dtype and does not include the desired keys (:issue:`20753`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1333
msgid "Bug in ``__setitem__`` when indexing a :class:`DataFrame` with a 2-d boolean ndarray (:issue:`18582`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1334
msgid "Bug in ``str.extractall`` when there were no matches empty :class:`Index` was returned instead of appropriate :class:`MultiIndex` (:issue:`19034`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1335
msgid "Bug in :class:`IntervalIndex` where empty and purely NA data was constructed inconsistently depending on the construction method (:issue:`18421`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1336
msgid "Bug in :func:`IntervalIndex.symmetric_difference` where the symmetric difference with a non-``IntervalIndex`` did not raise (:issue:`18475`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1337
msgid "Bug in :class:`IntervalIndex` where set operations that returned an empty ``IntervalIndex`` had the wrong dtype (:issue:`19101`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1338
msgid "Bug in :meth:`DataFrame.drop_duplicates` where no ``KeyError`` is raised when passing in columns that don't exist on the ``DataFrame`` (:issue:`19726`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1339
msgid "Bug in ``Index`` subclasses constructors that ignore unexpected keyword arguments (:issue:`19348`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1340
msgid "Bug in :meth:`Index.difference` when taking difference of an ``Index`` with itself (:issue:`20040`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1341
msgid "Bug in :meth:`DataFrame.first_valid_index` and :meth:`DataFrame.last_valid_index` in presence of entire rows of NaNs in the middle of values (:issue:`20499`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1342
msgid "Bug in :class:`IntervalIndex` where some indexing operations were not supported for overlapping or non-monotonic ``uint64`` data (:issue:`20636`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1343
msgid "Bug in ``Series.is_unique`` where extraneous output in stderr is shown if Series contains objects with ``__ne__`` defined (:issue:`20661`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1344
msgid "Bug in ``.loc`` assignment with a single-element list-like incorrectly assigns as a list (:issue:`19474`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1345
msgid "Bug in partial string indexing on a ``Series/DataFrame`` with a monotonic decreasing ``DatetimeIndex`` (:issue:`19362`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1346
msgid "Bug in performing in-place operations on a ``DataFrame`` with a duplicate ``Index`` (:issue:`17105`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1347
msgid "Bug in :meth:`IntervalIndex.get_loc` and :meth:`IntervalIndex.get_indexer` when used with an :class:`IntervalIndex` containing a single interval (:issue:`17284`, :issue:`20921`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1348
msgid "Bug in ``.loc`` with a ``uint64`` indexer (:issue:`20722`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1351
msgid "MultiIndex"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1353
msgid "Bug in :func:`MultiIndex.__contains__` where non-tuple keys would return ``True`` even if they had been dropped (:issue:`19027`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1354
msgid "Bug in :func:`MultiIndex.set_labels` which would cause casting (and potentially clipping) of the new labels if the ``level`` argument is not 0 or a list like [0, 1, ... ]  (:issue:`19057`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1355
msgid "Bug in :func:`MultiIndex.get_level_values` which would return an invalid index on level of ints with missing values (:issue:`17924`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1356
msgid "Bug in :func:`MultiIndex.unique` when called on empty :class:`MultiIndex` (:issue:`20568`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1357
msgid "Bug in :func:`MultiIndex.unique` which would not preserve level names (:issue:`20570`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1358
msgid "Bug in :func:`MultiIndex.remove_unused_levels` which would fill nan values (:issue:`18417`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1359
msgid "Bug in :func:`MultiIndex.from_tuples` which would fail to take zipped tuples in python3 (:issue:`18434`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1360
msgid "Bug in :func:`MultiIndex.get_loc` which would fail to automatically cast values between float and int (:issue:`18818`, :issue:`15994`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1361
msgid "Bug in :func:`MultiIndex.get_loc` which would cast boolean to integer labels (:issue:`19086`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1362
msgid "Bug in :func:`MultiIndex.get_loc` which would fail to locate keys containing ``NaN`` (:issue:`18485`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1363
msgid "Bug in :func:`MultiIndex.get_loc` in large :class:`MultiIndex`, would fail when levels had different dtypes (:issue:`18520`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1364
msgid "Bug in indexing where nested indexers having only numpy arrays are handled incorrectly (:issue:`19686`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1368
msgid "IO"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1370
msgid ":func:`read_html` now rewinds seekable IO objects after parse failure, before attempting to parse with a new parser. If a parser errors and the object is non-seekable, an informative error is raised suggesting the use of a different parser (:issue:`17975`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1371
msgid ":meth:`DataFrame.to_html` now has an option to add an id to the leading ``<table>`` tag (:issue:`8496`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1372
msgid "Bug in :func:`read_msgpack` with a non existent file is passed in Python 2 (:issue:`15296`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1373
msgid "Bug in :func:`read_csv` where a ``MultiIndex`` with duplicate columns was not being mangled appropriately (:issue:`18062`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1374
msgid "Bug in :func:`read_csv` where missing values were not being handled properly when ``keep_default_na=False`` with dictionary ``na_values`` (:issue:`19227`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1375
msgid "Bug in :func:`read_csv` causing heap corruption on 32-bit, big-endian architectures (:issue:`20785`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1376
msgid "Bug in :func:`read_sas` where a file with 0 variables gave an ``AttributeError`` incorrectly. Now it gives an ``EmptyDataError`` (:issue:`18184`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1377
msgid "Bug in :func:`DataFrame.to_latex()` where pairs of braces meant to serve as invisible placeholders were escaped (:issue:`18667`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1378
msgid "Bug in :func:`DataFrame.to_latex()` where a ``NaN`` in a ``MultiIndex`` would cause an ``IndexError`` or incorrect output (:issue:`14249`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1379
msgid "Bug in :func:`DataFrame.to_latex()` where a non-string index-level name would result in an ``AttributeError`` (:issue:`19981`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1380
msgid "Bug in :func:`DataFrame.to_latex()` where the combination of an index name and the ``index_names=False`` option would result in incorrect output (:issue:`18326`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1381
msgid "Bug in :func:`DataFrame.to_latex()` where a ``MultiIndex`` with an empty string as its name would result in incorrect output (:issue:`18669`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1382
msgid "Bug in :func:`DataFrame.to_latex()` where missing space characters caused wrong escaping and produced non-valid latex in some cases (:issue:`20859`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1383
msgid "Bug in :func:`read_json` where large numeric values were causing an ``OverflowError`` (:issue:`18842`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1384
msgid "Bug in :func:`DataFrame.to_parquet` where an exception was raised if the write destination is S3 (:issue:`19134`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1385
msgid ":class:`Interval` now supported in :func:`DataFrame.to_excel` for all Excel file types (:issue:`19242`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1386
msgid ":class:`Timedelta` now supported in :func:`DataFrame.to_excel` for all Excel file types (:issue:`19242`, :issue:`9155`, :issue:`19900`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1387
msgid "Bug in :meth:`pandas.io.stata.StataReader.value_labels` raising an ``AttributeError`` when called on very old files. Now returns an empty dict (:issue:`19417`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1388
msgid "Bug in :func:`read_pickle` when unpickling objects with :class:`TimedeltaIndex` or :class:`Float64Index` created with pandas prior to version 0.20 (:issue:`19939`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1389
msgid "Bug in :meth:`pandas.io.json.json_normalize` where sub-records are not properly normalized if any sub-records values are NoneType (:issue:`20030`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1390
msgid "Bug in ``usecols`` parameter in :func:`read_csv` where error is not raised correctly when passing a string. (:issue:`20529`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1391
msgid "Bug in :func:`HDFStore.keys` when reading a file with a soft link causes exception (:issue:`20523`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1392
msgid "Bug in :func:`HDFStore.select_column` where a key which is not a valid store raised an ``AttributeError`` instead of a ``KeyError`` (:issue:`17912`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1395
msgid "Plotting"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1397
msgid "Better error message when attempting to plot but matplotlib is not installed (:issue:`19810`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1398
msgid ":func:`DataFrame.plot` now raises a ``ValueError`` when the ``x`` or ``y`` argument is improperly formed (:issue:`18671`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1399
msgid "Bug in :func:`DataFrame.plot` when ``x`` and ``y`` arguments given as positions caused incorrect referenced columns for line, bar and area plots (:issue:`20056`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1400
msgid "Bug in formatting tick labels with ``datetime.time()`` and fractional seconds (:issue:`18478`)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1401
msgid ":meth:`Series.plot.kde` has exposed the args ``ind`` and ``bw_method`` in the docstring (:issue:`18461`). The argument ``ind`` may now also be an integer (number of sample points)."
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1402
msgid ":func:`DataFrame.plot` now supports multiple columns to the ``y`` argument (:issue:`19699`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1406
msgid "GroupBy/resample/rolling"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1408
msgid "Bug when grouping by a single column and aggregating with a class like ``list`` or ``tuple`` (:issue:`18079`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1409
msgid "Fixed regression in :func:`DataFrame.groupby` which would not emit an error when called with a tuple key not in the index (:issue:`18798`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1410
msgid "Bug in :func:`DataFrame.resample` which silently ignored unsupported (or mistyped) options for ``label``, ``closed`` and ``convention`` (:issue:`19303`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1411
msgid "Bug in :func:`DataFrame.groupby` where tuples were interpreted as lists of keys rather than as keys (:issue:`17979`, :issue:`18249`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1412
msgid "Bug in :func:`DataFrame.groupby` where aggregation by ``first``/``last``/``min``/``max`` was causing timestamps to lose precision (:issue:`19526`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1413
msgid "Bug in :func:`DataFrame.transform` where particular aggregation functions were being incorrectly cast to match the dtype(s) of the grouped data (:issue:`19200`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1414
msgid "Bug in :func:`DataFrame.groupby` passing the ``on=`` kwarg, and subsequently using ``.apply()`` (:issue:`17813`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1415
msgid "Bug in :func:`DataFrame.resample().aggregate <pandas.core.resample.Resampler.aggregate>` not raising a ``KeyError`` when aggregating a non-existent column (:issue:`16766`, :issue:`19566`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1416
msgid "Bug in :func:`DataFrameGroupBy.cumsum` and :func:`DataFrameGroupBy.cumprod` when ``skipna`` was passed (:issue:`19806`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1417
msgid "Bug in :func:`DataFrame.resample` that dropped timezone information (:issue:`13238`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1418
msgid "Bug in :func:`DataFrame.groupby` where transformations using ``np.all`` and ``np.any`` were raising a ``ValueError`` (:issue:`20653`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1419
msgid "Bug in :func:`DataFrame.resample` where ``ffill``, ``bfill``, ``pad``, ``backfill``, ``fillna``, ``interpolate``, and ``asfreq`` were ignoring ``loffset``. (:issue:`20744`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1420
msgid "Bug in :func:`DataFrame.groupby` when applying a function that has mixed data types and the user supplied function can fail on the grouping column (:issue:`20949`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1421
msgid "Bug in :func:`DataFrameGroupBy.rolling().apply() <pandas.core.window.Rolling.apply>` where operations performed against the associated :class:`DataFrameGroupBy` object could impact the inclusion of the grouped item(s) in the result (:issue:`14013`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1424
msgid "Sparse"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1426
msgid "Bug in which creating a :class:`SparseDataFrame` from a dense ``Series`` or an unsupported type raised an uncontrolled exception (:issue:`19374`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1427
msgid "Bug in :class:`SparseDataFrame.to_csv` causing exception (:issue:`19384`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1428
msgid "Bug in :class:`SparseSeries.memory_usage` which caused segfault by accessing non sparse elements (:issue:`19368`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1429
msgid "Bug in constructing a :class:`SparseArray`: if ``data`` is a scalar and ``index`` is defined it will coerce to ``float64`` regardless of scalar's dtype. (:issue:`19163`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1432
msgid "Reshaping"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1434
msgid "Bug in :func:`DataFrame.merge` where referencing a ``CategoricalIndex`` by name, where the ``by`` kwarg would ``KeyError`` (:issue:`20777`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1435
msgid "Bug in :func:`DataFrame.stack` which fails trying to sort mixed type levels under Python 3 (:issue:`18310`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1436
msgid "Bug in :func:`DataFrame.unstack` which casts int to float if ``columns`` is a ``MultiIndex`` with unused levels (:issue:`17845`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1437
msgid "Bug in :func:`DataFrame.unstack` which raises an error if ``index`` is a ``MultiIndex`` with unused labels on the unstacked level (:issue:`18562`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1438
msgid "Fixed construction of a :class:`Series` from a ``dict`` containing ``NaN`` as key (:issue:`18480`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1439
msgid "Fixed construction of a :class:`DataFrame` from a ``dict`` containing ``NaN`` as key (:issue:`18455`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1440
msgid "Disabled construction of a :class:`Series` where len(index) > len(data) = 1, which previously would broadcast the data item, and now raises a ``ValueError`` (:issue:`18819`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1441
msgid "Suppressed error in the construction of a :class:`DataFrame` from a ``dict`` containing scalar values when the corresponding keys are not included in the passed index (:issue:`18600`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1443
msgid "Fixed (changed from ``object`` to ``float64``) dtype of :class:`DataFrame` initialized with axes, no data, and ``dtype=int`` (:issue:`19646`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1444
msgid "Bug in :func:`Series.rank` where ``Series`` containing ``NaT`` modifies the ``Series`` inplace (:issue:`18521`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1445
msgid "Bug in :func:`cut` which fails when using readonly arrays (:issue:`18773`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1446
msgid "Bug in :func:`DataFrame.pivot_table` which fails when the ``aggfunc`` arg is of type string.  The behavior is now consistent with other methods like ``agg`` and ``apply`` (:issue:`18713`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1447
msgid "Bug in :func:`DataFrame.merge` in which merging using ``Index`` objects as vectors raised an Exception (:issue:`19038`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1448
msgid "Bug in :func:`DataFrame.stack`, :func:`DataFrame.unstack`, :func:`Series.unstack` which were not returning subclasses (:issue:`15563`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1449
msgid "Bug in timezone comparisons, manifesting as a conversion of the index to UTC in ``.concat()`` (:issue:`18523`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1450
msgid "Bug in :func:`concat` when concatenating sparse and dense series it returns only a ``SparseDataFrame``. Should be a ``DataFrame``. (:issue:`18914`, :issue:`18686`, and :issue:`16874`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1451
msgid "Improved error message for :func:`DataFrame.merge` when there is no common merge key (:issue:`19427`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1452
msgid "Bug in :func:`DataFrame.join` which does an ``outer`` instead of a ``left`` join when being called with multiple DataFrames and some have non-unique indices (:issue:`19624`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1453
msgid ":func:`Series.rename` now accepts ``axis`` as a kwarg (:issue:`18589`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1454
msgid "Bug in :func:`~DataFrame.rename` where an Index of same-length tuples was converted to a MultiIndex (:issue:`19497`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1455
msgid "Comparisons between :class:`Series` and :class:`Index` would return a ``Series`` with an incorrect name, ignoring the ``Index``'s name attribute (:issue:`19582`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1456
msgid "Bug in :func:`qcut` where datetime and timedelta data with ``NaT`` present raised a ``ValueError`` (:issue:`19768`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1457
msgid "Bug in :func:`DataFrame.iterrows`, which would infers strings not compliant to `ISO8601 <https://en.wikipedia.org/wiki/ISO_8601>`_ to datetimes (:issue:`19671`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1458
msgid "Bug in :class:`Series` constructor with ``Categorical`` where a ``ValueError`` is not raised when an index of different length is given (:issue:`19342`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1459
msgid "Bug in :meth:`DataFrame.astype` where column metadata is lost when converting to categorical or a dictionary of dtypes (:issue:`19920`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1460
msgid "Bug in :func:`cut` and :func:`qcut` where timezone information was dropped (:issue:`19872`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1461
msgid "Bug in :class:`Series` constructor with a ``dtype=str``, previously raised in some cases (:issue:`19853`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1462
msgid "Bug in :func:`get_dummies`, and :func:`select_dtypes`, where duplicate column names caused incorrect behavior (:issue:`20848`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1463
msgid "Bug in :func:`isna`, which cannot handle ambiguous typed lists (:issue:`20675`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1464
msgid "Bug in :func:`concat` which raises an error when concatenating TZ-aware dataframes and all-NaT dataframes (:issue:`12396`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1465
msgid "Bug in :func:`concat` which raises an error when concatenating empty TZ-aware series (:issue:`18447`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1468
msgid "Other"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1470
msgid "Improved error message when attempting to use a Python keyword as an identifier in a ``numexpr`` backed query (:issue:`18221`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1471
msgid "Bug in accessing a :func:`pandas.get_option`, which raised ``KeyError`` rather than ``OptionError`` when looking up a non-existent option key in some cases (:issue:`19789`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1472
msgid "Bug in :func:`testing.assert_series_equal` and :func:`testing.assert_frame_equal` for Series or DataFrames with differing unicode data (:issue:`20503`)"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1477
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v0.23.0.rst:1479
msgid "A total of 328 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
