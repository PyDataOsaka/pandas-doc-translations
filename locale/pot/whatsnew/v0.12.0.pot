# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v0.12.0.rst:4
msgid "Version 0.12.0 (July 24, 2013)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:6
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:9
msgid "This is a major release from 0.11.0 and includes several new features and enhancements along with a large number of bug fixes."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:12
msgid "Highlights include a consistent I/O API naming scheme, routines to read html, write MultiIndexes to csv files, read & write STATA data files, read & write JSON format files, Python 3 support for ``HDFStore``, filtering of groupby expressions via ``filter``, and a revamped ``replace`` routine that accepts regular expressions."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:18
msgid "API changes"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:20
msgid "The I/O API is now much more consistent with a set of top level ``reader`` functions accessed like ``pd.read_csv()`` that generally return a ``pandas`` object."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:23
msgid "``read_csv``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:24
msgid "``read_excel``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:25
msgid "``read_hdf``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:26
msgid "``read_sql``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:27
msgid "``read_json``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:28
msgid "``read_html``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:29
msgid "``read_stata``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:30
msgid "``read_clipboard``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:32
msgid "The corresponding ``writer`` functions are object methods that are accessed like ``df.to_csv()``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:34
msgid "``to_csv``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:35
msgid "``to_excel``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:36
msgid "``to_hdf``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:37
msgid "``to_sql``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:38
msgid "``to_json``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:39
msgid "``to_html``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:40
msgid "``to_stata``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:41
msgid "``to_clipboard``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:44
msgid "Fix modulo and integer division on Series,DataFrames to act similarly to ``float`` dtypes to return ``np.nan`` or ``np.inf`` as appropriate (:issue:`3590`). This correct a numpy bug that treats ``integer`` and ``float`` dtypes differently."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:56
msgid "Add ``squeeze`` keyword to ``groupby`` to allow reduction from DataFrame -> Series if groups are unique. This is a Regression from 0.10.1. We are reverting back to the prior behavior. This means groupby will return the same shaped objects whether the groups are unique or not. Revert this issue (:issue:`2893`) with (:issue:`3596`)."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:89
msgid "Raise on ``iloc`` when boolean indexing with a label based indexer mask e.g. a boolean Series, even with integer labels, will raise. Since ``iloc`` is purely positional based, the labels on the Series are not alignable (:issue:`3631`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:93
msgid "This case is rarely used, and there are plenty of alternatives. This preserves the ``iloc`` API to be *purely* positional based."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:108
msgid "``df.iloc[mask]`` will raise a ``ValueError``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:110
msgid "The ``raise_on_error`` argument to plotting functions is removed. Instead, plotting functions raise a ``TypeError`` when the ``dtype`` of the object is ``object`` to remind you to avoid ``object`` arrays whenever possible and thus you should cast to an appropriate numeric dtype if you need to plot something."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:116
msgid "Add ``colormap`` keyword to DataFrame plotting methods. Accepts either a matplotlib colormap object (ie, matplotlib.cm.jet) or a string name of such an object (ie, 'jet'). The colormap is sampled to select the color for each column. Please see :ref:`visualization.colormaps` for more information. (:issue:`3860`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:122
msgid "``DataFrame.interpolate()`` is now deprecated. Please use ``DataFrame.fillna()`` and ``DataFrame.replace()`` instead. (:issue:`3582`, :issue:`3675`, :issue:`3676`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:126
msgid "the ``method`` and ``axis`` arguments of ``DataFrame.replace()`` are deprecated"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:129
msgid "``DataFrame.replace`` 's ``infer_types`` parameter is removed and now performs conversion by default. (:issue:`3907`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:132
msgid "Add the keyword ``allow_duplicates`` to ``DataFrame.insert`` to allow a duplicate column to be inserted if ``True``, default is ``False`` (same as prior to 0.12) (:issue:`3679`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:134
msgid "Implement ``__nonzero__`` for ``NDFrame`` objects (:issue:`3691`, :issue:`3696`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:136
msgid "IO api"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:138
msgid "added top-level function ``read_excel`` to replace the following, The original API is deprecated and will be removed in a future version"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:148
msgid "With"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:156
msgid "added top-level function ``read_sql`` that is equivalent to the following"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:164
msgid "``DataFrame.to_html`` and ``DataFrame.to_latex`` now accept a path for their first argument (:issue:`3702`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:167
msgid "Do not allow astypes on ``datetime64[ns]`` except to ``object``, and ``timedelta64[ns]`` to ``object/int`` (:issue:`3425`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:170
msgid "The behavior of ``datetime64`` dtypes has changed with respect to certain so-called reduction operations (:issue:`3726`). The following operations now raise a ``TypeError`` when performed on a ``Series`` and return an *empty* ``Series`` when performed on a ``DataFrame`` similar to performing these operations on, for example, a ``DataFrame`` of ``slice`` objects:"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:176
msgid "sum, prod, mean, std, var, skew, kurt, corr, and cov"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:178
msgid "``read_html`` now defaults to ``None`` when reading, and falls back on ``bs4`` + ``html5lib`` when lxml fails to parse. a list of parsers to try until success is also valid"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:182
msgid "The internal ``pandas`` class hierarchy has changed (slightly). The previous ``PandasObject`` now is called ``PandasContainer`` and a new ``PandasObject`` has become the base class for ``PandasContainer`` as well as ``Index``, ``Categorical``, ``GroupBy``, ``SparseList``, and ``SparseArray`` (+ their base classes). Currently, ``PandasObject`` provides string methods (from ``StringMixin``). (:issue:`4090`, :issue:`4092`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:189
msgid "New ``StringMixin`` that, given a ``__unicode__`` method, gets python 2 and python 3 compatible string methods (``__str__``, ``__bytes__``, and ``__repr__``). Plus string safety throughout. Now employed in many places throughout the pandas library. (:issue:`4090`, :issue:`4092`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:195
msgid "IO enhancements"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:197
msgid "``pd.read_html()`` can now parse HTML strings, files or urls and return DataFrames, courtesy of @cpcloud. (:issue:`3477`, :issue:`3605`, :issue:`3606`, :issue:`3616`). It works with a *single* parser backend: BeautifulSoup4 + html5lib :ref:`See the docs<io.html>`"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:201
msgid "You can use ``pd.read_html()`` to read the output from ``DataFrame.to_html()`` like so"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:212
msgid "Note that ``alist`` here is a Python ``list`` so ``pd.read_html()`` and ``DataFrame.to_html()`` are not inverses."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:215
msgid "``pd.read_html()`` no longer performs hard conversion of date strings (:issue:`3656`)."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:220
msgid "You may have to install an older version of BeautifulSoup4, :ref:`See the installation docs<install.optional_dependencies>`"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:223
msgid "Added module for reading and writing Stata files: ``pandas.io.stata`` (:issue:`1512`) accessible via ``read_stata`` top-level function for reading, and ``to_stata`` DataFrame method for writing, :ref:`See the docs<io.stata>`"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:227
msgid "Added module for reading and writing json format files: ``pandas.io.json`` accessible via ``read_json`` top-level function for reading, and ``to_json`` DataFrame method for writing, :ref:`See the docs<io.json>` various issues (:issue:`1226`, :issue:`3804`, :issue:`3876`, :issue:`3867`, :issue:`1305`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:232
msgid "``MultiIndex`` column support for reading and writing csv format files"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:234
msgid "The ``header`` option in ``read_csv`` now accepts a list of the rows from which to read the index."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:237
msgid "The option, ``tupleize_cols`` can now be specified in both ``to_csv`` and ``read_csv``, to provide compatibility for the pre 0.12 behavior of writing and reading ``MultIndex`` columns via a list of tuples. The default in 0.12 is to write lists of tuples and *not* interpret list of tuples as a ``MultiIndex`` column."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:243
msgid "Note: The default behavior in 0.12 remains unchanged from prior versions, but starting with 0.13, the default *to* write and read ``MultiIndex`` columns will be in the new format. (:issue:`3571`, :issue:`1651`, :issue:`3141`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:247
msgid "If an ``index_col`` is not specified (e.g. you don't have an index, or wrote it with ``df.to_csv(..., index=False``), then any ``names`` on the columns index will be *lost*."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:267
msgid "Support for ``HDFStore`` (via ``PyTables 3.0.0``) on Python3"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:269
msgid "Iterator support via ``read_hdf`` that automatically opens and closes the store when iteration is finished. This is only for *tables*"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:298
msgid "``read_csv`` will now throw a more informative error message when a file contains no columns, e.g., all newline characters"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:302
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:304
msgid "``DataFrame.replace()`` now allows regular expressions on contained ``Series`` with object dtype. See the examples section in the regular docs :ref:`Replacing via String Expression <missing_data.replace_expression>`"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:308
msgid "For example you can do"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:315
msgid "to replace all occurrences of the string ``'.'`` with zero or more instances of surrounding white space with ``NaN``."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:318
msgid "Regular string replacement still works as expected. For example, you can do"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:324
msgid "to replace all occurrences of the string ``'.'`` with ``NaN``."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:326
msgid "``pd.melt()`` now accepts the optional parameters ``var_name`` and ``value_name`` to specify custom column names of the returned DataFrame."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:329
msgid "``pd.set_option()`` now allows N option, value pairs (:issue:`3667`)."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:331
msgid "Let's say that we had an option ``'a.b'`` and another option ``'b.c'``. We can set them at the same time:"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:350
msgid "The ``filter`` method for group objects returns a subset of the original object. Suppose we want to take only elements that belong to groups with a group sum greater than 2."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:359
msgid "The argument of ``filter`` must a function that, applied to the group as a whole, returns ``True`` or ``False``."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:362
msgid "Another useful operation is filtering out elements that belong to groups with only a couple members."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:370
msgid "Alternatively, instead of dropping the offending groups, we can return a like-indexed objects where the groups that do not pass the filter are filled with NaNs."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:378
msgid "Series and DataFrame hist methods now take a ``figsize`` argument (:issue:`3834`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:380
msgid "DatetimeIndexes no longer try to convert mixed-integer indexes during join operations (:issue:`3877`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:383
msgid "Timestamp.min and Timestamp.max now represent valid Timestamp instances instead of the default datetime.min and datetime.max (respectively), thanks @SleepingPills"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:386
msgid "``read_html`` now raises when no tables are found and BeautifulSoup==4.2.0 is detected (:issue:`4214`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:391
msgid "Experimental features"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:393
msgid "Added experimental ``CustomBusinessDay`` class to support ``DateOffsets`` with custom holiday calendars and custom weekmasks. (:issue:`2301`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:398
msgid "This uses the ``numpy.busdaycalendar`` API introduced in Numpy 1.7 and therefore requires Numpy 1.7.0 or newer."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:419
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:421
msgid "Plotting functions now raise a ``TypeError`` before trying to plot anything if the associated objects have a dtype of ``object`` (:issue:`1818`, :issue:`3572`, :issue:`3911`, :issue:`3912`), but they will try to convert object arrays to numeric arrays if possible so that you can still plot, for example, an object array with floats. This happens before any drawing takes place which eliminates any spurious plots from showing up."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:428
msgid "``fillna`` methods now raise a ``TypeError`` if the ``value`` parameter is a list or tuple."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:431
msgid "``Series.str`` now supports iteration (:issue:`3638`). You can iterate over the individual elements of each string in the ``Series``. Each iteration yields a ``Series`` with either a single character at each index of the original ``Series`` or ``NaN``. For example,"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:477
msgid "The last element yielded by the iterator will be a ``Series`` containing the last element of the longest string in the ``Series`` with all other elements being ``NaN``. Here since ``'slow'`` is the longest string and there are no other strings with the same length ``'w'`` is the only non-null string in the yielded ``Series``."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:483
msgid "``HDFStore``"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:485
msgid "will retain index attributes (freq,tz,name) on recreation (:issue:`3499`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:486
msgid "will warn with a ``AttributeConflictWarning`` if you are attempting to append an index with a different frequency than the existing, or attempting to append an index with a different name than the existing"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:489
msgid "support datelike columns with a timezone as data_columns (:issue:`2852`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:491
msgid "Non-unique index support clarified (:issue:`3468`)."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:493
msgid "Fix assigning a new index to a duplicate index in a DataFrame would fail (:issue:`3468`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:494
msgid "Fix construction of a DataFrame with a duplicate index"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:495
msgid "ref_locs support to allow duplicative indices across dtypes, allows iget support to always find the index (even across dtypes) (:issue:`2194`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:497
msgid "applymap on a DataFrame with a non-unique index now works (removed warning) (:issue:`2786`), and fix (:issue:`3230`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:499
msgid "Fix to_csv to handle non-unique columns (:issue:`3495`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:500
msgid "Duplicate indexes with getitem will return items in the correct order (:issue:`3455`, :issue:`3457`) and handle missing elements like unique indices (:issue:`3561`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:502
msgid "Duplicate indexes with and empty DataFrame.from_records will return a correct frame (:issue:`3562`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:503
msgid "Concat to produce a non-unique columns when duplicates are across dtypes is fixed (:issue:`3602`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:504
#: ../../source/whatsnew/v0.12.0.rst:506
msgid "Allow insert/delete to non-unique columns (:issue:`3679`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:505
msgid "Non-unique indexing with a slice via ``loc`` and friends fixed (:issue:`3659`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:507
msgid "Extend ``reindex`` to correctly deal with non-unique indices (:issue:`3679`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:508
msgid "``DataFrame.itertuples()`` now works with frames with duplicate column names (:issue:`3873`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:510
msgid "Bug in non-unique indexing via ``iloc`` (:issue:`4017`); added ``takeable`` argument to ``reindex`` for location-based taking"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:512
msgid "Allow non-unique indexing in series via ``.ix/.loc`` and ``__getitem__`` (:issue:`4246`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:513
msgid "Fixed non-unique indexing memory allocation issue with ``.ix/.loc`` (:issue:`4280`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:515
msgid "``DataFrame.from_records`` did not accept empty recarrays (:issue:`3682`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:516
msgid "``read_html`` now correctly skips tests (:issue:`3741`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:517
msgid "Fixed a bug where ``DataFrame.replace`` with a compiled regular expression in the ``to_replace`` argument wasn't working (:issue:`3907`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:519
msgid "Improved ``network`` test decorator to catch ``IOError`` (and therefore ``URLError`` as well). Added ``with_connectivity_check`` decorator to allow explicitly checking a website as a proxy for seeing if there is network connectivity. Plus, new ``optional_args`` decorator factory for decorators. (:issue:`3910`, :issue:`3914`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:524
msgid "Fixed testing issue where too many sockets where open thus leading to a connection reset issue (:issue:`3982`, :issue:`3985`, :issue:`4028`, :issue:`4054`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:527
msgid "Fixed failing tests in test_yahoo, test_google where symbols were not retrieved but were being accessed (:issue:`3982`, :issue:`3985`, :issue:`4028`, :issue:`4054`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:530
msgid "``Series.hist`` will now take the figure from the current environment if one is not passed"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:532
msgid "Fixed bug where a 1xN DataFrame would barf on a 1xN mask (:issue:`4071`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:533
msgid "Fixed running of ``tox`` under python3 where the pickle import was getting rewritten in an incompatible way (:issue:`4062`, :issue:`4063`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:535
msgid "Fixed bug where sharex and sharey were not being passed to grouped_hist (:issue:`4089`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:537
msgid "Fixed bug in ``DataFrame.replace`` where a nested dict wasn't being iterated over when regex=False (:issue:`4115`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:539
msgid "Fixed bug in the parsing of microseconds when using the ``format`` argument in ``to_datetime`` (:issue:`4152`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:541
msgid "Fixed bug in ``PandasAutoDateLocator`` where ``invert_xaxis`` triggered incorrectly ``MilliSecondLocator``  (:issue:`3990`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:543
msgid "Fixed bug in plotting that wasn't raising on invalid colormap for matplotlib 1.1.1 (:issue:`4215`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:545
msgid "Fixed the legend displaying in ``DataFrame.plot(kind='kde')`` (:issue:`4216`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:546
msgid "Fixed bug where Index slices weren't carrying the name attribute (:issue:`4226`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:548
msgid "Fixed bug in initializing ``DatetimeIndex`` with an array of strings in a certain time zone (:issue:`4229`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:550
msgid "Fixed bug where html5lib wasn't being properly skipped (:issue:`4265`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:551
msgid "Fixed bug where get_data_famafrench wasn't using the correct file edges (:issue:`4281`)"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:554
msgid "See the :ref:`full release notes <release>` or issue tracker on GitHub for a complete list."
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:562
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v0.12.0.rst:564
msgid "A total of 50 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
