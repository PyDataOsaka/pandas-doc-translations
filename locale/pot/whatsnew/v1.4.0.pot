# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v1.4.0.rst:4
msgid "What's new in 1.4.0 (January 22, 2022)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:6
msgid "These are the changes in pandas 1.4.0. See :ref:`release` for a full changelog including other versions of pandas."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:9
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:16
msgid "Enhancements"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:21
msgid "Improved warning messages"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:23
msgid "Previously, warning messages may have pointed to lines within the pandas library. Running the script ``setting_with_copy_warning.py``"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:33
msgid "with pandas 1.3 resulted in::"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:38
msgid "This made it difficult to determine where the warning was being generated from. Now pandas will inspect the call stack, reporting the first line outside of the pandas library that gave rise to the warning. The output of the above script is now::"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:52
msgid "Index can hold arbitrary ExtensionArrays"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:54
msgid "Until now, passing a custom :class:`ExtensionArray` to ``pd.Index`` would cast the array to ``object`` dtype. Now :class:`Index` can directly hold arbitrary ExtensionArrays (:issue:`43930`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:58
#: ../../source/whatsnew/v1.4.0.rst:67
#: ../../source/whatsnew/v1.4.0.rst:292
#: ../../source/whatsnew/v1.4.0.rst:334
#: ../../source/whatsnew/v1.4.0.rst:371
#: ../../source/whatsnew/v1.4.0.rst:400
#: ../../source/whatsnew/v1.4.0.rst:442
msgid "*Previous behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:65
msgid "In the old behavior, ``idx`` would be object-dtype:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:74
msgid "With the new behavior, we keep the original dtype:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:76
#: ../../source/whatsnew/v1.4.0.rst:305
#: ../../source/whatsnew/v1.4.0.rst:346
#: ../../source/whatsnew/v1.4.0.rst:384
#: ../../source/whatsnew/v1.4.0.rst:408
#: ../../source/whatsnew/v1.4.0.rst:465
msgid "*New behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:82
msgid "One exception to this is ``SparseArray``, which will continue to cast to numpy dtype until pandas 2.0. At that point it will retain its dtype like other ExtensionArrays."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:89
#: ../../source/whatsnew/v1.4.0.rst:1078
msgid "Styler"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:91
msgid ":class:`.Styler` has been further developed in 1.4.0. The following general enhancements have been made:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:93
msgid "Styling and formatting of indexes has been added, with :meth:`.Styler.apply_index`, :meth:`.Styler.applymap_index` and :meth:`.Styler.format_index`. These mirror the signature of the methods already used to style and format data values, and work with both HTML, LaTeX and Excel format (:issue:`41893`, :issue:`43101`, :issue:`41993`, :issue:`41995`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:94
msgid "The new method :meth:`.Styler.hide` deprecates :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns` (:issue:`43758`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:95
msgid "The keyword arguments ``level`` and ``names`` have been added to :meth:`.Styler.hide` (and implicitly to the deprecated methods :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns`) for additional control of visibility of MultiIndexes and of Index names (:issue:`25475`, :issue:`43404`, :issue:`43346`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:96
msgid "The :meth:`.Styler.export` and :meth:`.Styler.use` have been updated to address all of the added functionality from v1.2.0 and v1.3.0 (:issue:`40675`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:97
msgid "Global options under the category ``pd.options.styler`` have been extended to configure default ``Styler`` properties which address formatting, encoding, and HTML and LaTeX rendering. Note that formerly ``Styler`` relied on ``display.html.use_mathjax``, which has now been replaced by ``styler.html.mathjax`` (:issue:`41395`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:98
msgid "Validation of certain keyword arguments, e.g. ``caption`` (:issue:`43368`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:99
msgid "Various bug fixes as recorded below"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:101
msgid "Additionally there are specific enhancements to the HTML specific rendering:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:103
msgid ":meth:`.Styler.bar` introduces additional arguments to control alignment and display (:issue:`26070`, :issue:`36419`), and it also validates the input arguments ``width`` and ``height`` (:issue:`42511`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:104
msgid ":meth:`.Styler.to_html` introduces keyword arguments ``sparse_index``, ``sparse_columns``, ``bold_headers``, ``caption``, ``max_rows`` and ``max_columns`` (:issue:`41946`, :issue:`43149`, :issue:`42972`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:105
msgid ":meth:`.Styler.to_html` omits CSSStyle rules for hidden table elements as a performance enhancement (:issue:`43619`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:106
msgid "Custom CSS classes can now be directly specified without string replacement (:issue:`43686`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:107
msgid "Ability to render hyperlinks automatically via a new ``hyperlinks`` formatting keyword argument (:issue:`45058`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:109
msgid "There are also some LaTeX specific enhancements:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:111
msgid ":meth:`.Styler.to_latex` introduces keyword argument ``environment``, which also allows a specific \"longtable\" entry through a separate jinja2 template (:issue:`41866`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:112
msgid "Naive sparsification is now possible for LaTeX without the necessity of including the multirow package (:issue:`43369`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:113
msgid "*cline* support has been added for :class:`MultiIndex` row sparsification through a keyword argument (:issue:`45138`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:118
msgid "Multi-threaded CSV reading with a new CSV Engine based on pyarrow"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:120
msgid ":func:`pandas.read_csv` now accepts ``engine=\"pyarrow\"`` (requires at least ``pyarrow`` 1.0.1) as an argument, allowing for faster csv parsing on multicore machines with pyarrow installed. See the :doc:`I/O docs </user_guide/io>` for more info. (:issue:`23697`, :issue:`43706`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:128
msgid "Rank function for rolling and expanding windows"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:130
msgid "Added ``rank`` function to :class:`Rolling` and :class:`Expanding`. The new function supports the ``method``, ``ascending``, and ``pct`` flags of :meth:`DataFrame.rank`. The ``method`` argument supports ``min``, ``max``, and ``average`` ranking methods. Example:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:146
msgid "Groupby positional indexing"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:148
msgid "It is now possible to specify positional ranges relative to the ends of each group."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:151
msgid "Negative arguments for :meth:`.DataFrameGroupBy.head`, :meth:`.SeriesGroupBy.head`, :meth:`.DataFrameGroupBy.tail`, and :meth:`.SeriesGroupBy.tail` now work correctly and result in ranges relative to the end and start of each group, respectively. Previously, negative arguments returned empty frames."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:162
msgid ":meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` now accept a slice or list of integers and slices."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:169
msgid ":meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` now accept index notation."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:180
msgid "DataFrame.from_dict and DataFrame.to_dict have new ``'tight'`` option"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:182
msgid "A new ``'tight'`` dictionary format that preserves :class:`MultiIndex` entries and names is now available with the :meth:`DataFrame.from_dict` and :meth:`DataFrame.to_dict` methods and can be used with the standard ``json`` library to produce a tight representation of :class:`DataFrame` objects (:issue:`4889`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:203
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:204
msgid ":meth:`concat` will preserve the ``attrs`` when it is the same for all objects and discard the ``attrs`` when they are different (:issue:`41828`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:205
msgid ":class:`DataFrameGroupBy` operations with ``as_index=False`` now correctly retain ``ExtensionDtype`` dtypes for columns being grouped on (:issue:`41373`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:206
msgid "Add support for assigning values to ``by`` argument in :meth:`DataFrame.plot.hist` and :meth:`DataFrame.plot.box` (:issue:`15079`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:207
msgid ":meth:`Series.sample`, :meth:`DataFrame.sample`, :meth:`.DataFrameGroupBy.sample`, and :meth:`.SeriesGroupBy.sample` now accept a ``np.random.Generator`` as input to ``random_state``. A generator will be more performant, especially with ``replace=False`` (:issue:`38100`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:208
msgid ":meth:`Series.ewm` and :meth:`DataFrame.ewm` now support a ``method`` argument with a ``'table'`` option that performs the windowing operation over an entire :class:`DataFrame`. See :ref:`Window Overview <window.overview>` for performance and functional benefits (:issue:`42273`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:209
msgid ":meth:`.DataFrameGroupBy.cummin`, :meth:`.SeriesGroupBy.cummin`, :meth:`.DataFrameGroupBy.cummax`, and :meth:`.SeriesGroupBy.cummax` now support the argument ``skipna`` (:issue:`34047`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:210
msgid ":meth:`read_table` now supports the argument ``storage_options`` (:issue:`39167`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:211
msgid ":meth:`DataFrame.to_stata` and :meth:`StataWriter` now accept the keyword only argument ``value_labels`` to save labels for non-categorical columns (:issue:`38454`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:212
msgid "Methods that relied on hashmap based algos such as :meth:`DataFrameGroupBy.value_counts`, :meth:`DataFrameGroupBy.count` and :func:`factorize` ignored imaginary component for complex numbers (:issue:`17927`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:213
msgid "Add :meth:`Series.str.removeprefix` and :meth:`Series.str.removesuffix` introduced in Python 3.9 to remove pre-/suffixes from string-type :class:`Series` (:issue:`36944`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:214
msgid "Attempting to write into a file in missing parent directory with :meth:`DataFrame.to_csv`, :meth:`DataFrame.to_html`, :meth:`DataFrame.to_excel`, :meth:`DataFrame.to_feather`, :meth:`DataFrame.to_parquet`, :meth:`DataFrame.to_stata`, :meth:`DataFrame.to_json`, :meth:`DataFrame.to_pickle`, and :meth:`DataFrame.to_xml` now explicitly mentions missing parent directory, the same is true for :class:`Series` counterparts (:issue:`24306`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:215
msgid "Indexing with ``.loc`` and ``.iloc`` now supports ``Ellipsis`` (:issue:`37750`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:216
msgid ":meth:`IntegerArray.all` , :meth:`IntegerArray.any`, :meth:`FloatingArray.any`, and :meth:`FloatingArray.all` use Kleene logic (:issue:`41967`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:217
msgid "Added support for nullable boolean and integer types in :meth:`DataFrame.to_stata`, :class:`~pandas.io.stata.StataWriter`, :class:`~pandas.io.stata.StataWriter117`, and :class:`~pandas.io.stata.StataWriterUTF8` (:issue:`40855`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:218
msgid ":meth:`DataFrame.__pos__` and :meth:`DataFrame.__neg__` now retain ``ExtensionDtype`` dtypes (:issue:`43883`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:219
msgid "The error raised when an optional dependency can't be imported now includes the original exception, for easier investigation (:issue:`43882`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:220
msgid "Added :meth:`.ExponentialMovingWindow.sum` (:issue:`13297`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:221
msgid ":meth:`Series.str.split` now supports a ``regex`` argument that explicitly specifies whether the pattern is a regular expression. Default is ``None`` (:issue:`43563`, :issue:`32835`, :issue:`25549`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:222
msgid ":meth:`DataFrame.dropna` now accepts a single label as ``subset`` along with array-like (:issue:`41021`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:223
msgid "Added :meth:`DataFrameGroupBy.value_counts` (:issue:`43564`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:224
msgid ":func:`read_csv` now accepts a ``callable`` function in ``on_bad_lines`` when ``engine=\"python\"`` for custom handling of bad lines (:issue:`5686`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:225
msgid ":class:`ExcelWriter` argument ``if_sheet_exists=\"overlay\"`` option added (:issue:`40231`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:226
msgid ":meth:`read_excel` now accepts a ``decimal`` argument that allow the user to specify the decimal point when parsing string columns to numeric (:issue:`14403`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:227
msgid ":meth:`.DataFrameGroupBy.mean`, :meth:`.SeriesGroupBy.mean`, :meth:`.DataFrameGroupBy.std`, :meth:`.SeriesGroupBy.std`, :meth:`.DataFrameGroupBy.var`, :meth:`.SeriesGroupBy.var`, :meth:`.DataFrameGroupBy.sum`, and :meth:`.SeriesGroupBy.sum` now support `Numba <http://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`43731`, :issue:`44862`, :issue:`44939`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:228
msgid ":meth:`Timestamp.isoformat` now handles the ``timespec`` argument from the base ``datetime`` class (:issue:`26131`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:229
msgid ":meth:`NaT.to_numpy` ``dtype`` argument is now respected, so ``np.timedelta64`` can be returned (:issue:`44460`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:230
msgid "New option ``display.max_dir_items`` customizes the number of columns added to :meth:`Dataframe.__dir__` and suggested for tab completion (:issue:`37996`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:231
msgid "Added \"Juneteenth National Independence Day\" to ``USFederalHolidayCalendar`` (:issue:`44574`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:232
msgid ":meth:`.Rolling.var`, :meth:`.Expanding.var`, :meth:`.Rolling.std`, and :meth:`.Expanding.std` now support `Numba <http://numba.pydata.org/>`_ execution with the ``engine`` keyword (:issue:`44461`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:233
msgid ":meth:`Series.info` has been added, for compatibility with :meth:`DataFrame.info` (:issue:`5167`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:234
msgid "Implemented :meth:`IntervalArray.min` and :meth:`IntervalArray.max`, as a result of which ``min`` and ``max`` now work for :class:`IntervalIndex`, :class:`Series` and :class:`DataFrame` with ``IntervalDtype`` (:issue:`44746`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:235
msgid ":meth:`UInt64Index.map` now retains ``dtype`` where possible (:issue:`44609`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:236
msgid ":meth:`read_json` can now parse unsigned long long integers (:issue:`26068`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:237
msgid ":meth:`DataFrame.take` now raises a ``TypeError`` when passed a scalar for the indexer (:issue:`42875`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:238
msgid ":meth:`is_list_like` now identifies duck-arrays as list-like unless ``.ndim == 0`` (:issue:`35131`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:239
msgid ":class:`ExtensionDtype` and :class:`ExtensionArray` are now (de)serialized when exporting a :class:`DataFrame` with :meth:`DataFrame.to_json` using ``orient='table'`` (:issue:`20612`, :issue:`44705`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:240
msgid "Add support for `Zstandard <http://facebook.github.io/zstd/>`_ compression to :meth:`DataFrame.to_pickle`/:meth:`read_pickle` and friends (:issue:`43925`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:241
msgid ":meth:`DataFrame.to_sql` now returns an ``int`` of the number of written rows (:issue:`23998`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:248
msgid "Notable bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:250
msgid "These are bug fixes that might have notable behavior changes."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:255
msgid "Inconsistent date string parsing"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:257
msgid "The ``dayfirst`` option of :func:`to_datetime` isn't strict, and this can lead to surprising behavior:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:265
msgid "Now, a warning will be raised if a date string cannot be parsed accordance to the given ``dayfirst`` value when the value is a delimited date string (e.g. ``31-12-2012``)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:272
msgid "Ignoring dtypes in concat with empty or all-NA columns"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:275
msgid "This behaviour change has been reverted in pandas 1.4.3."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:277
msgid "When using :func:`concat` to concatenate two or more :class:`DataFrame` objects, if one of the DataFrames was empty or had all-NA values, its dtype was *sometimes* ignored when finding the concatenated dtype.  These are now consistently *not* ignored (:issue:`43507`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:288
msgid "Previously, the float-dtype in ``df2`` would be ignored so the result dtype would be ``datetime64[ns]``. As a result, the ``np.nan`` would be cast to ``NaT``."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:302
msgid "Now the float-dtype is respected. Since the common dtype for these DataFrames is object, the ``np.nan`` is retained."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:320
msgid "Null-values are no longer coerced to NaN-value in value_counts and mode"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:322
msgid ":meth:`Series.value_counts` and :meth:`Series.mode` no longer coerce ``None``, ``NaT`` and other null-values to a NaN-value for ``np.object_``-dtype. This behavior is now consistent with ``unique``, ``isin`` and others (:issue:`42688`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:332
msgid "Previously, all null-values were replaced by a NaN-value."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:344
msgid "Now null-values are no longer mangled."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:355
msgid "mangle_dupe_cols in read_csv no longer renames unique columns conflicting with target names"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:357
msgid ":func:`read_csv` no longer renames unique column labels which conflict with the target names of duplicated columns. Already existing columns are skipped, i.e. the next available index is used for the target column name (:issue:`14704`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:368
msgid "Previously, the second column was called ``a.1``, while the third column was also renamed to ``a.1.1``."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:380
msgid "Now the renaming checks if ``a.1`` already exists when changing the name of the second column and jumps this index. The second column is instead renamed to ``a.2``."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:393
msgid "unstack and pivot_table no longer raises ValueError for result that would exceed int32 limit"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:395
msgid "Previously :meth:`DataFrame.pivot_table` and :meth:`DataFrame.unstack` would raise a ``ValueError`` if the operation could produce a result with more than ``2**31 - 1`` elements. This operation now raises a :class:`errors.PerformanceWarning` instead (:issue:`26314`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:420
msgid "groupby.apply consistent transform detection"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:422
msgid ":meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` are designed to be flexible, allowing users to perform aggregations, transformations, filters, and use it with user-defined functions that might not fall into any of these categories. As part of this, apply will attempt to detect when an operation is a transform, and in such a case, the result will have the same index as the input. In order to determine if the operation is a transform, pandas compares the input's index to the result's and determines if it has been mutated. Previously in pandas 1.3, different code paths used different definitions of \"mutated\": some would use Python's ``is`` whereas others would test only up to equality."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:432
msgid "This inconsistency has been removed, pandas now tests up to equality."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:460
msgid "In the examples above, the first uses a code path where pandas uses ``is`` and determines that ``func`` is not a transform whereas the second tests up to equality and determines that ``func`` is a transform. In the first case, the result's index is not the same as the input's."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:482
msgid "Now in both cases it is determined that ``func`` is a transform. In each case, the result has the same index as the input."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:488
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:493
msgid "Increased minimum version for Python"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:495
msgid "pandas 1.4.0 supports Python 3.8 and higher."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:500
msgid "Increased minimum versions for dependencies"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:501
msgid "Some minimum supported versions of dependencies were updated. If installed, we now require:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:505
#: ../../source/whatsnew/v1.4.0.rst:530
msgid "Package"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:505
#: ../../source/whatsnew/v1.4.0.rst:530
msgid "Minimum Version"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:505
msgid "Required"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:505
#: ../../source/whatsnew/v1.4.0.rst:530
msgid "Changed"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:507
msgid "numpy"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:507
msgid "1.18.5"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:507
#: ../../source/whatsnew/v1.4.0.rst:509
#: ../../source/whatsnew/v1.4.0.rst:511
#: ../../source/whatsnew/v1.4.0.rst:513
#: ../../source/whatsnew/v1.4.0.rst:515
#: ../../source/whatsnew/v1.4.0.rst:519
#: ../../source/whatsnew/v1.4.0.rst:532
#: ../../source/whatsnew/v1.4.0.rst:540
#: ../../source/whatsnew/v1.4.0.rst:542
#: ../../source/whatsnew/v1.4.0.rst:544
#: ../../source/whatsnew/v1.4.0.rst:546
#: ../../source/whatsnew/v1.4.0.rst:548
#: ../../source/whatsnew/v1.4.0.rst:550
#: ../../source/whatsnew/v1.4.0.rst:552
#: ../../source/whatsnew/v1.4.0.rst:554
#: ../../source/whatsnew/v1.4.0.rst:558
#: ../../source/whatsnew/v1.4.0.rst:560
#: ../../source/whatsnew/v1.4.0.rst:564
#: ../../source/whatsnew/v1.4.0.rst:566
#: ../../source/whatsnew/v1.4.0.rst:568
msgid "X"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:509
msgid "pytz"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:509
msgid "2020.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:511
msgid "python-dateutil"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:511
msgid "2.8.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:513
msgid "bottleneck"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:513
msgid "1.3.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:515
msgid "numexpr"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:515
msgid "2.7.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:517
msgid "pytest (dev)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:517
msgid "6.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:519
msgid "mypy (dev)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:519
msgid "0.930"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:522
msgid "For `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version. The following table lists the lowest version per library that is currently being tested throughout the development of pandas. Optional libraries below the lowest tested version may still work, but are not considered supported."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:532
msgid "beautifulsoup4"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:532
msgid "4.8.2"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:534
msgid "fastparquet"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:534
#: ../../source/whatsnew/v1.4.0.rst:556
msgid "0.4.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:536
msgid "fsspec"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:536
msgid "0.7.4"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:538
msgid "gcsfs"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:538
msgid "0.6.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:540
msgid "lxml"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:540
msgid "4.5.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:542
msgid "matplotlib"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:542
msgid "3.3.2"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:544
msgid "numba"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:544
msgid "0.50.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:546
msgid "openpyxl"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:546
msgid "3.0.3"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:548
msgid "pandas-gbq"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:548
msgid "0.14.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:550
msgid "pyarrow"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:550
msgid "1.0.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:552
msgid "pymysql"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:552
msgid "0.10.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:554
msgid "pytables"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:554
msgid "3.6.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:556
msgid "s3fs"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:558
msgid "scipy"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:558
msgid "1.4.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:560
msgid "sqlalchemy"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:560
msgid "1.4.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:562
msgid "tabulate"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:562
msgid "0.8.7"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:564
msgid "xarray"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:564
msgid "0.15.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:566
msgid "xlrd"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:566
msgid "2.0.1"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:568
msgid "xlsxwriter"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:568
msgid "1.2.2"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:570
msgid "xlwt"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:570
msgid "1.3.0"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:573
msgid "See :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:578
msgid "Other API changes"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:579
msgid ":meth:`Index.get_indexer_for` no longer accepts keyword arguments (other than ``target``); in the past these would be silently ignored if the index was not unique (:issue:`42310`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:580
msgid "Change in the position of the ``min_rows`` argument in :meth:`DataFrame.to_string` due to change in the docstring (:issue:`44304`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:581
msgid "Reduction operations for :class:`DataFrame` or :class:`Series` now raising a ``ValueError`` when ``None`` is passed for ``skipna`` (:issue:`44178`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:582
msgid ":func:`read_csv` and :func:`read_html` no longer raising an error when one of the header rows consists only of ``Unnamed:`` columns (:issue:`13054`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:583
msgid "Changed the ``name`` attribute of several holidays in ``USFederalHolidayCalendar`` to match `official federal holiday names <https://www.opm.gov/policy-data-oversight/pay-leave/federal-holidays/>`_ specifically:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:588
msgid "\"New Year's Day\" gains the possessive apostrophe"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:589
msgid "\"Presidents Day\" becomes \"Washington's Birthday\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:590
msgid "\"Martin Luther King Jr. Day\" is now \"Birthday of Martin Luther King, Jr.\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:591
msgid "\"July 4th\" is now \"Independence Day\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:592
msgid "\"Thanksgiving\" is now \"Thanksgiving Day\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:593
msgid "\"Christmas\" is now \"Christmas Day\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:594
msgid "Added \"Juneteenth National Independence Day\""
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:601
msgid "Deprecations"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:606
msgid "Deprecated Int64Index, UInt64Index & Float64Index"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:608
msgid ":class:`Int64Index`, :class:`UInt64Index` and :class:`Float64Index` have been deprecated in favor of the base :class:`Index` class and will be removed in Pandas 2.0 (:issue:`43028`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:612
msgid "For constructing a numeric index, you can use the base :class:`Index` class instead specifying the data type (which will also work on older pandas releases):"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:623
msgid "For checking the data type of an index object, you can replace ``isinstance`` checks with checking the ``dtype``:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:633
msgid "Currently, in order to maintain backward compatibility, calls to :class:`Index` will continue to return :class:`Int64Index`, :class:`UInt64Index` and :class:`Float64Index` when given numeric data, but in the future, an :class:`Index` will be returned."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:638
msgid "*Current behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:647
msgid "*Future behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:660
msgid "Deprecated DataFrame.append and Series.append"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:662
msgid ":meth:`DataFrame.append` and :meth:`Series.append` have been deprecated and will be removed in a future version. Use :func:`pandas.concat` instead (:issue:`35407`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:665
msgid "*Deprecated syntax*"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:689
msgid "*Recommended syntax*"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:703
msgid "Other Deprecations"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:704
msgid "Deprecated :meth:`Index.is_type_compatible` (:issue:`42113`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:705
msgid "Deprecated ``method`` argument in :meth:`Index.get_loc`, use ``index.get_indexer([label], method=...)`` instead (:issue:`42269`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:706
msgid "Deprecated treating integer keys in :meth:`Series.__setitem__` as positional when the index is a :class:`Float64Index` not containing the key, a :class:`IntervalIndex` with no entries containing the key, or a :class:`MultiIndex` with leading :class:`Float64Index` level not containing the key (:issue:`33469`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:707
msgid "Deprecated treating ``numpy.datetime64`` objects as UTC times when passed to the :class:`Timestamp` constructor along with a timezone. In a future version, these will be treated as wall-times. To retain the old behavior, use ``Timestamp(dt64).tz_localize(\"UTC\").tz_convert(tz)`` (:issue:`24559`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:708
msgid "Deprecated ignoring missing labels when indexing with a sequence of labels on a level of a :class:`MultiIndex` (:issue:`42351`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:709
msgid "Creating an empty :class:`Series` without a ``dtype`` will now raise a more visible ``FutureWarning`` instead of a ``DeprecationWarning`` (:issue:`30017`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:710
msgid "Deprecated the ``kind`` argument in :meth:`Index.get_slice_bound`, :meth:`Index.slice_indexer`, and :meth:`Index.slice_locs`; in a future version passing ``kind`` will raise (:issue:`42857`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:711
msgid "Deprecated dropping of nuisance columns in :class:`Rolling`, :class:`Expanding`, and :class:`EWM` aggregations (:issue:`42738`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:712
msgid "Deprecated :meth:`Index.reindex` with a non-unique :class:`Index` (:issue:`42568`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:713
msgid "Deprecated :meth:`.Styler.render` in favor of :meth:`.Styler.to_html` (:issue:`42140`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:714
msgid "Deprecated :meth:`.Styler.hide_index` and :meth:`.Styler.hide_columns` in favor of :meth:`.Styler.hide` (:issue:`43758`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:715
msgid "Deprecated passing in a string column label into ``times`` in :meth:`DataFrame.ewm` (:issue:`43265`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:716
msgid "Deprecated the ``include_start`` and ``include_end`` arguments in :meth:`DataFrame.between_time`; in a future version passing ``include_start`` or ``include_end`` will raise (:issue:`40245`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:717
msgid "Deprecated the ``squeeze`` argument to :meth:`read_csv`, :meth:`read_table`, and :meth:`read_excel`. Users should squeeze the :class:`DataFrame` afterwards with ``.squeeze(\"columns\")`` instead (:issue:`43242`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:718
msgid "Deprecated the ``index`` argument to :class:`SparseArray` construction (:issue:`23089`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:719
msgid "Deprecated the ``closed`` argument in :meth:`date_range` and :meth:`bdate_range` in favor of ``inclusive`` argument; In a future version passing ``closed`` will raise (:issue:`40245`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:720
msgid "Deprecated :meth:`.Rolling.validate`, :meth:`.Expanding.validate`, and :meth:`.ExponentialMovingWindow.validate` (:issue:`43665`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:721
msgid "Deprecated silent dropping of columns that raised a ``TypeError`` in :class:`Series.transform` and :class:`DataFrame.transform` when used with a dictionary (:issue:`43740`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:722
msgid "Deprecated silent dropping of columns that raised a ``TypeError``, ``DataError``, and some cases of ``ValueError`` in :meth:`Series.aggregate`, :meth:`DataFrame.aggregate`, :meth:`Series.groupby.aggregate`, and :meth:`DataFrame.groupby.aggregate` when used with a list (:issue:`43740`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:723
msgid "Deprecated casting behavior when setting timezone-aware value(s) into a timezone-aware :class:`Series` or :class:`DataFrame` column when the timezones do not match. Previously this cast to object dtype. In a future version, the values being inserted will be converted to the series or column's existing timezone (:issue:`37605`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:724
msgid "Deprecated casting behavior when passing an item with mismatched-timezone to :meth:`DatetimeIndex.insert`, :meth:`DatetimeIndex.putmask`, :meth:`DatetimeIndex.where` :meth:`DatetimeIndex.fillna`, :meth:`Series.mask`, :meth:`Series.where`, :meth:`Series.fillna`, :meth:`Series.shift`, :meth:`Series.replace`, :meth:`Series.reindex` (and :class:`DataFrame` column analogues). In the past this has cast to object ``dtype``. In a future version, these will cast the passed item to the index or series's timezone (:issue:`37605`, :issue:`44940`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:725
msgid "Deprecated the ``prefix`` keyword argument in :func:`read_csv` and :func:`read_table`, in a future version the argument will be removed (:issue:`43396`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:726
msgid "Deprecated passing non boolean argument to ``sort`` in :func:`concat` (:issue:`41518`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:727
msgid "Deprecated passing arguments as positional for :func:`read_fwf` other than ``filepath_or_buffer`` (:issue:`41485`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:728
msgid "Deprecated passing arguments as positional for :func:`read_xml` other than ``path_or_buffer`` (:issue:`45133`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:729
msgid "Deprecated passing ``skipna=None`` for :meth:`DataFrame.mad` and :meth:`Series.mad`, pass ``skipna=True`` instead (:issue:`44580`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:730
msgid "Deprecated the behavior of :func:`to_datetime` with the string \"now\" with ``utc=False``; in a future version this will match ``Timestamp(\"now\")``, which in turn matches :meth:`Timestamp.now` returning the local time (:issue:`18705`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:731
msgid "Deprecated :meth:`DateOffset.apply`, use ``offset + other`` instead (:issue:`44522`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:732
msgid "Deprecated parameter ``names`` in :meth:`Index.copy` (:issue:`44916`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:733
msgid "A deprecation warning is now shown for :meth:`DataFrame.to_latex` indicating the arguments signature may change and emulate more the arguments to :meth:`.Styler.to_latex` in future versions (:issue:`44411`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:734
msgid "Deprecated behavior of :func:`concat` between objects with bool-dtype and numeric-dtypes; in a future version these will cast to object dtype instead of coercing bools to numeric values (:issue:`39817`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:735
msgid "Deprecated :meth:`Categorical.replace`, use :meth:`Series.replace` instead (:issue:`44929`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:736
msgid "Deprecated passing ``set`` or ``dict`` as indexer for :meth:`DataFrame.loc.__setitem__`, :meth:`DataFrame.loc.__getitem__`, :meth:`Series.loc.__setitem__`, :meth:`Series.loc.__getitem__`, :meth:`DataFrame.__getitem__`, :meth:`Series.__getitem__` and :meth:`Series.__setitem__` (:issue:`42825`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:737
msgid "Deprecated :meth:`Index.__getitem__` with a bool key; use ``index.values[key]`` to get the old behavior (:issue:`44051`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:738
msgid "Deprecated downcasting column-by-column in :meth:`DataFrame.where` with integer-dtypes (:issue:`44597`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:739
msgid "Deprecated :meth:`DatetimeIndex.union_many`, use :meth:`DatetimeIndex.union` instead (:issue:`44091`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:740
msgid "Deprecated :meth:`.Groupby.pad` in favor of :meth:`.Groupby.ffill` (:issue:`33396`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:741
msgid "Deprecated :meth:`.Groupby.backfill` in favor of :meth:`.Groupby.bfill` (:issue:`33396`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:742
msgid "Deprecated :meth:`.Resample.pad` in favor of :meth:`.Resample.ffill` (:issue:`33396`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:743
msgid "Deprecated :meth:`.Resample.backfill` in favor of :meth:`.Resample.bfill` (:issue:`33396`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:744
msgid "Deprecated ``numeric_only=None`` in :meth:`DataFrame.rank`; in a future version ``numeric_only`` must be either ``True`` or ``False`` (the default) (:issue:`45036`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:745
msgid "Deprecated the behavior of :meth:`Timestamp.utcfromtimestamp`, in the future it will return a timezone-aware UTC :class:`Timestamp` (:issue:`22451`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:746
msgid "Deprecated :meth:`NaT.freq` (:issue:`45071`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:747
msgid "Deprecated behavior of :class:`Series` and :class:`DataFrame` construction when passed float-dtype data containing ``NaN`` and an integer dtype ignoring the dtype argument; in a future version this will raise (:issue:`40110`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:748
msgid "Deprecated the behaviour of :meth:`Series.to_frame` and :meth:`Index.to_frame` to ignore the ``name`` argument when ``name=None``. Currently, this means to preserve the existing name, but in the future explicitly passing ``name=None`` will set ``None`` as the name of the column in the resulting DataFrame (:issue:`44212`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:755
msgid "Performance improvements"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:756
msgid "Performance improvement in :meth:`.DataFrameGroupBy.sample` and :meth:`.SeriesGroupBy.sample`, especially when ``weights`` argument provided (:issue:`34483`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:757
msgid "Performance improvement when converting non-string arrays to string arrays (:issue:`34483`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:758
msgid "Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` for user-defined functions (:issue:`41598`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:759
msgid "Performance improvement in constructing :class:`DataFrame` objects (:issue:`42631`, :issue:`43142`, :issue:`43147`, :issue:`43307`, :issue:`43144`, :issue:`44826`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:760
msgid "Performance improvement in :meth:`.DataFrameGroupBy.shift` and :meth:`.SeriesGroupBy.shift` when ``fill_value`` argument is provided (:issue:`26615`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:761
msgid "Performance improvement in :meth:`DataFrame.corr` for ``method=pearson`` on data without missing values (:issue:`40956`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:762
msgid "Performance improvement in some :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` operations (:issue:`42992`, :issue:`43578`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:763
msgid "Performance improvement in :func:`read_stata` (:issue:`43059`, :issue:`43227`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:764
msgid "Performance improvement in :func:`read_sas` (:issue:`43333`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:765
msgid "Performance improvement in :meth:`to_datetime` with ``uint`` dtypes (:issue:`42606`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:766
msgid "Performance improvement in :meth:`to_datetime` with ``infer_datetime_format`` set to ``True`` (:issue:`43901`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:767
msgid "Performance improvement in :meth:`Series.sparse.to_coo` (:issue:`42880`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:768
msgid "Performance improvement in indexing with a :class:`UInt64Index` (:issue:`43862`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:769
msgid "Performance improvement in indexing with a :class:`Float64Index` (:issue:`43705`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:770
msgid "Performance improvement in indexing with a non-unique :class:`Index` (:issue:`43792`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:771
msgid "Performance improvement in indexing with a listlike indexer on a :class:`MultiIndex` (:issue:`43370`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:772
msgid "Performance improvement in indexing with a :class:`MultiIndex` indexer on another :class:`MultiIndex` (:issue:`43370`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:773
msgid "Performance improvement in :meth:`.DataFrameGroupBy.quantile` and :meth:`.SeriesGroupBy.quantile` (:issue:`43469`, :issue:`43725`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:774
msgid "Performance improvement in :meth:`.DataFrameGroupBy.count` and :meth:`.SeriesGroupBy.count` (:issue:`43730`, :issue:`43694`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:775
msgid "Performance improvement in :meth:`.DataFrameGroupBy.any`, :meth:`.SeriesGroupBy.any`, :meth:`.DataFrameGroupBy.all`, and :meth:`.SeriesGroupBy.all` (:issue:`43675`, :issue:`42841`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:776
msgid "Performance improvement in :meth:`.DataFrameGroupBy.std` and :meth:`.SeriesGroupBy.std` (:issue:`43115`, :issue:`43576`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:777
msgid "Performance improvement in :meth:`.DataFrameGroupBy.cumsum` and :meth:`.SeriesGroupBy.cumsum` (:issue:`43309`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:778
msgid ":meth:`SparseArray.min` and :meth:`SparseArray.max` no longer require converting to a dense array (:issue:`43526`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:779
msgid "Indexing into a :class:`SparseArray` with a ``slice`` with ``step=1`` no longer requires converting to a dense array (:issue:`43777`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:780
msgid "Performance improvement in :meth:`SparseArray.take` with ``allow_fill=False`` (:issue:`43654`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:781
msgid "Performance improvement in :meth:`.Rolling.mean`, :meth:`.Expanding.mean`, :meth:`.Rolling.sum`, :meth:`.Expanding.sum`, :meth:`.Rolling.max`, :meth:`.Expanding.max`, :meth:`.Rolling.min` and :meth:`.Expanding.min` with ``engine=\"numba\"`` (:issue:`43612`, :issue:`44176`, :issue:`45170`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:782
msgid "Improved performance of :meth:`pandas.read_csv` with ``memory_map=True`` when file encoding is UTF-8 (:issue:`43787`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:783
msgid "Performance improvement in :meth:`RangeIndex.sort_values` overriding :meth:`Index.sort_values` (:issue:`43666`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:784
msgid "Performance improvement in :meth:`RangeIndex.insert` (:issue:`43988`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:785
msgid "Performance improvement in :meth:`Index.insert` (:issue:`43953`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:786
msgid "Performance improvement in :meth:`DatetimeIndex.tolist` (:issue:`43823`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:787
msgid "Performance improvement in :meth:`DatetimeIndex.union` (:issue:`42353`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:788
msgid "Performance improvement in :meth:`Series.nsmallest` (:issue:`43696`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:789
msgid "Performance improvement in :meth:`DataFrame.insert` (:issue:`42998`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:790
msgid "Performance improvement in :meth:`DataFrame.dropna` (:issue:`43683`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:791
msgid "Performance improvement in :meth:`DataFrame.fillna` (:issue:`43316`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:792
msgid "Performance improvement in :meth:`DataFrame.values` (:issue:`43160`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:793
msgid "Performance improvement in :meth:`DataFrame.select_dtypes` (:issue:`42611`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:794
msgid "Performance improvement in :class:`DataFrame` reductions (:issue:`43185`, :issue:`43243`, :issue:`43311`, :issue:`43609`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:795
msgid "Performance improvement in :meth:`Series.unstack` and :meth:`DataFrame.unstack` (:issue:`43335`, :issue:`43352`, :issue:`42704`, :issue:`43025`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:796
msgid "Performance improvement in :meth:`Series.to_frame` (:issue:`43558`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:797
msgid "Performance improvement in :meth:`Series.mad` (:issue:`43010`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:798
msgid "Performance improvement in :func:`merge` (:issue:`43332`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:799
msgid "Performance improvement in :func:`to_csv` when index column is a datetime and is formatted (:issue:`39413`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:800
msgid "Performance improvement in :func:`to_csv` when :class:`MultiIndex` contains a lot of unused levels (:issue:`37484`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:801
msgid "Performance improvement in :func:`read_csv` when ``index_col`` was set with a numeric column (:issue:`44158`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:802
msgid "Performance improvement in :func:`concat` (:issue:`43354`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:803
msgid "Performance improvement in :meth:`SparseArray.__getitem__` (:issue:`23122`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:804
msgid "Performance improvement in constructing a :class:`DataFrame` from array-like objects like a ``Pytorch`` tensor (:issue:`44616`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:811
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:814
msgid "Categorical"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:815
msgid "Bug in setting dtype-incompatible values into a :class:`Categorical` (or ``Series`` or ``DataFrame`` backed by ``Categorical``) raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:816
msgid "Bug in :meth:`Categorical.searchsorted` when passing a dtype-incompatible value raising ``KeyError`` instead of ``TypeError`` (:issue:`41919`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:817
msgid "Bug in :meth:`Categorical.astype` casting datetimes and :class:`Timestamp` to int for dtype ``object`` (:issue:`44930`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:818
msgid "Bug in :meth:`Series.where` with ``CategoricalDtype`` when passing a dtype-incompatible value raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:819
msgid "Bug in :meth:`Categorical.fillna` when passing a dtype-incompatible value raising ``ValueError`` instead of ``TypeError`` (:issue:`41919`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:820
msgid "Bug in :meth:`Categorical.fillna` with a tuple-like category raising ``ValueError`` instead of ``TypeError`` when filling with a non-category tuple (:issue:`41919`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:823
msgid "Datetimelike"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:824
msgid "Bug in :class:`DataFrame` constructor unnecessarily copying non-datetimelike 2D object arrays (:issue:`39272`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:825
msgid "Bug in :func:`to_datetime` with ``format`` and ``pandas.NA`` was raising ``ValueError`` (:issue:`42957`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:826
msgid ":func:`to_datetime` would silently swap ``MM/DD/YYYY`` and ``DD/MM/YYYY`` formats if the given ``dayfirst`` option could not be respected - now, a warning is raised in the case of delimited date strings (e.g. ``31-12-2012``) (:issue:`12585`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:827
msgid "Bug in :meth:`date_range` and :meth:`bdate_range` do not return right bound when ``start`` = ``end`` and set is closed on one side (:issue:`43394`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:828
msgid "Bug in inplace addition and subtraction of :class:`DatetimeIndex` or :class:`TimedeltaIndex` with :class:`DatetimeArray` or :class:`TimedeltaArray` (:issue:`43904`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:829
msgid "Bug in calling ``np.isnan``, ``np.isfinite``, or ``np.isinf`` on a timezone-aware :class:`DatetimeIndex` incorrectly raising ``TypeError`` (:issue:`43917`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:830
msgid "Bug in constructing a :class:`Series` from datetime-like strings with mixed timezones incorrectly partially-inferring datetime values (:issue:`40111`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:831
msgid "Bug in addition of a :class:`Tick` object and a ``np.timedelta64`` object incorrectly raising instead of returning :class:`Timedelta` (:issue:`44474`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:832
msgid "``np.maximum.reduce`` and ``np.minimum.reduce`` now correctly return :class:`Timestamp` and :class:`Timedelta` objects when operating on :class:`Series`, :class:`DataFrame`, or :class:`Index` with ``datetime64[ns]`` or ``timedelta64[ns]`` dtype (:issue:`43923`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:833
msgid "Bug in adding a ``np.timedelta64`` object to a :class:`BusinessDay` or :class:`CustomBusinessDay` object incorrectly raising (:issue:`44532`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:834
msgid "Bug in :meth:`Index.insert` for inserting ``np.datetime64``, ``np.timedelta64`` or ``tuple`` into :class:`Index` with ``dtype='object'`` with negative loc adding ``None`` and replacing existing value (:issue:`44509`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:835
msgid "Bug in :meth:`Timestamp.to_pydatetime` failing to retain the ``fold`` attribute (:issue:`45087`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:836
msgid "Bug in :meth:`Series.mode` with ``DatetimeTZDtype`` incorrectly returning timezone-naive and ``PeriodDtype`` incorrectly raising (:issue:`41927`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:837
msgid "Fixed regression in :meth:`~Series.reindex` raising an error when using an incompatible fill value with a datetime-like dtype (or not raising a deprecation warning for using a ``datetime.date`` as fill value) (:issue:`42921`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:838
msgid "Bug in :class:`DateOffset` addition with :class:`Timestamp` where ``offset.nanoseconds`` would not be included in the result (:issue:`43968`, :issue:`36589`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:839
msgid "Bug in :meth:`Timestamp.fromtimestamp` not supporting the ``tz`` argument (:issue:`45083`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:840
msgid "Bug in :class:`DataFrame` construction from dict of :class:`Series` with mismatched index dtypes sometimes raising depending on the ordering of the passed dict (:issue:`44091`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:841
msgid "Bug in :class:`Timestamp` hashing during some DST transitions caused a segmentation fault (:issue:`33931` and :issue:`40817`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:844
msgid "Timedelta"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:845
msgid "Bug in division of all-``NaT`` :class:`TimeDeltaIndex`, :class:`Series` or :class:`DataFrame` column with object-dtype array like of numbers failing to infer the result as timedelta64-dtype (:issue:`39750`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:846
msgid "Bug in floor division of ``timedelta64[ns]`` data with a scalar returning garbage values (:issue:`44466`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:847
msgid "Bug in :class:`Timedelta` now properly taking into account any nanoseconds contribution of any kwarg (:issue:`43764`, :issue:`45227`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:850
msgid "Time Zones"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:851
msgid "Bug in :func:`to_datetime` with ``infer_datetime_format=True`` failing to parse zero UTC offset (``Z``) correctly (:issue:`41047`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:852
msgid "Bug in :meth:`Series.dt.tz_convert` resetting index in a :class:`Series` with :class:`CategoricalIndex` (:issue:`43080`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:853
msgid "Bug in ``Timestamp`` and ``DatetimeIndex`` incorrectly raising a ``TypeError`` when subtracting two timezone-aware objects with mismatched timezones (:issue:`31793`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:856
msgid "Numeric"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:857
msgid "Bug in floor-dividing a list or tuple of integers by a :class:`Series` incorrectly raising (:issue:`44674`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:858
msgid "Bug in :meth:`DataFrame.rank` raising ``ValueError`` with ``object`` columns and ``method=\"first\"`` (:issue:`41931`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:859
msgid "Bug in :meth:`DataFrame.rank` treating missing values and extreme values as equal (for example ``np.nan`` and ``np.inf``), causing incorrect results when ``na_option=\"bottom\"`` or ``na_option=\"top`` used (:issue:`41931`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:860
msgid "Bug in ``numexpr`` engine still being used when the option ``compute.use_numexpr`` is set to ``False`` (:issue:`32556`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:861
msgid "Bug in :class:`DataFrame` arithmetic ops with a subclass whose :meth:`_constructor` attribute is a callable other than the subclass itself (:issue:`43201`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:862
msgid "Bug in arithmetic operations involving :class:`RangeIndex` where the result would have the incorrect ``name`` (:issue:`43962`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:863
msgid "Bug in arithmetic operations involving :class:`Series` where the result could have the incorrect ``name`` when the operands having matching NA or matching tuple names (:issue:`44459`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:864
msgid "Bug in division with ``IntegerDtype`` or ``BooleanDtype`` array and NA scalar incorrectly raising (:issue:`44685`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:865
msgid "Bug in multiplying a :class:`Series` with ``FloatingDtype`` with a timedelta-like scalar incorrectly raising (:issue:`44772`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:868
msgid "Conversion"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:869
msgid "Bug in :class:`UInt64Index` constructor when passing a list containing both positive integers small enough to cast to int64 and integers too large to hold in int64 (:issue:`42201`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:870
msgid "Bug in :class:`Series` constructor returning 0 for missing values with dtype ``int64`` and ``False`` for dtype ``bool`` (:issue:`43017`, :issue:`43018`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:871
msgid "Bug in constructing a :class:`DataFrame` from a :class:`PandasArray` containing :class:`Series` objects behaving differently than an equivalent ``np.ndarray`` (:issue:`43986`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:872
msgid "Bug in :class:`IntegerDtype` not allowing coercion from string dtype (:issue:`25472`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:873
msgid "Bug in :func:`to_datetime` with ``arg:xr.DataArray`` and ``unit=\"ns\"`` specified raises ``TypeError`` (:issue:`44053`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:874
msgid "Bug in :meth:`DataFrame.convert_dtypes` not returning the correct type when a subclass does not overload :meth:`_constructor_sliced` (:issue:`43201`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:875
msgid "Bug in :meth:`DataFrame.astype` not propagating ``attrs`` from the original :class:`DataFrame` (:issue:`44414`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:876
msgid "Bug in :meth:`DataFrame.convert_dtypes` result losing ``columns.names`` (:issue:`41435`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:877
msgid "Bug in constructing a ``IntegerArray`` from pyarrow data failing to validate dtypes (:issue:`44891`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:878
msgid "Bug in :meth:`Series.astype` not allowing converting from a ``PeriodDtype`` to ``datetime64`` dtype, inconsistent with the :class:`PeriodIndex` behavior (:issue:`45038`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:881
msgid "Strings"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:882
msgid "Bug in checking for ``string[pyarrow]`` dtype incorrectly raising an ``ImportError`` when pyarrow is not installed (:issue:`44276`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:885
msgid "Interval"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:886
msgid "Bug in :meth:`Series.where` with ``IntervalDtype`` incorrectly raising when the ``where`` call should not replace anything (:issue:`44181`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:889
msgid "Indexing"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:890
msgid "Bug in :meth:`Series.rename` with :class:`MultiIndex` and ``level`` is provided (:issue:`43659`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:891
msgid "Bug in :meth:`DataFrame.truncate` and :meth:`Series.truncate` when the object's :class:`Index` has a length greater than one but only one unique value (:issue:`42365`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:892
msgid "Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` with a :class:`MultiIndex` when indexing with a tuple in which one of the levels is also a tuple (:issue:`27591`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:893
msgid "Bug in :meth:`Series.loc` with a :class:`MultiIndex` whose first level contains only ``np.nan`` values (:issue:`42055`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:894
msgid "Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`DatetimeIndex` when passing a string, the return type depended on whether the index was monotonic (:issue:`24892`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:895
msgid "Bug in indexing on a :class:`MultiIndex` failing to drop scalar levels when the indexer is a tuple containing a datetime-like string (:issue:`42476`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:896
msgid "Bug in :meth:`DataFrame.sort_values` and :meth:`Series.sort_values` when passing an ascending value, failed to raise or incorrectly raising ``ValueError`` (:issue:`41634`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:897
msgid "Bug in updating values of :class:`pandas.Series` using boolean index, created by using :meth:`pandas.DataFrame.pop` (:issue:`42530`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:898
msgid "Bug in :meth:`Index.get_indexer_non_unique` when index contains multiple ``np.nan`` (:issue:`35392`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:899
msgid "Bug in :meth:`DataFrame.query` did not handle the degree sign in a backticked column name, such as \\`Temp(°C)\\`, used in an expression to query a :class:`DataFrame` (:issue:`42826`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:900
msgid "Bug in :meth:`DataFrame.drop` where the error message did not show missing labels with commas when raising ``KeyError`` (:issue:`42881`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:901
msgid "Bug in :meth:`DataFrame.query` where method calls in query strings led to errors when the ``numexpr`` package was installed (:issue:`22435`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:902
msgid "Bug in :meth:`DataFrame.nlargest` and :meth:`Series.nlargest` where sorted result did not count indexes containing ``np.nan`` (:issue:`28984`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:903
msgid "Bug in indexing on a non-unique object-dtype :class:`Index` with an NA scalar (e.g. ``np.nan``) (:issue:`43711`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:904
msgid "Bug in :meth:`DataFrame.__setitem__` incorrectly writing into an existing column's array rather than setting a new array when the new dtype and the old dtype match (:issue:`43406`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:905
msgid "Bug in setting floating-dtype values into a :class:`Series` with integer dtype failing to set inplace when those values can be losslessly converted to integers (:issue:`44316`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:906
msgid "Bug in :meth:`Series.__setitem__` with object dtype when setting an array with matching size and dtype='datetime64[ns]' or dtype='timedelta64[ns]' incorrectly converting the datetime/timedeltas to integers (:issue:`43868`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:907
msgid "Bug in :meth:`DataFrame.sort_index` where ``ignore_index=True`` was not being respected when the index was already sorted (:issue:`43591`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:908
msgid "Bug in :meth:`Index.get_indexer_non_unique` when index contains multiple ``np.datetime64(\"NaT\")`` and ``np.timedelta64(\"NaT\")`` (:issue:`43869`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:909
msgid "Bug in setting a scalar :class:`Interval` value into a :class:`Series` with ``IntervalDtype`` when the scalar's sides are floats and the values' sides are integers (:issue:`44201`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:910
msgid "Bug when setting string-backed :class:`Categorical` values that can be parsed to datetimes into a :class:`DatetimeArray` or :class:`Series` or :class:`DataFrame` column backed by :class:`DatetimeArray` failing to parse these strings (:issue:`44236`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:911
msgid "Bug in :meth:`Series.__setitem__` with an integer dtype other than ``int64`` setting with a ``range`` object unnecessarily upcasting to ``int64`` (:issue:`44261`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:912
msgid "Bug in :meth:`Series.__setitem__` with a boolean mask indexer setting a listlike value of length 1 incorrectly broadcasting that value (:issue:`44265`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:913
msgid "Bug in :meth:`Series.reset_index` not ignoring ``name`` argument when ``drop`` and ``inplace`` are set to ``True`` (:issue:`44575`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:914
msgid "Bug in :meth:`DataFrame.loc.__setitem__` and :meth:`DataFrame.iloc.__setitem__` with mixed dtypes sometimes failing to operate in-place (:issue:`44345`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:915
msgid "Bug in :meth:`DataFrame.loc.__getitem__` incorrectly raising ``KeyError`` when selecting a single column with a boolean key (:issue:`44322`)."
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:916
msgid "Bug in setting :meth:`DataFrame.iloc` with a single ``ExtensionDtype`` column and setting 2D values e.g. ``df.iloc[:] = df.values`` incorrectly raising (:issue:`44514`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:917
msgid "Bug in setting values with :meth:`DataFrame.iloc` with a single ``ExtensionDtype`` column and a tuple of arrays as the indexer (:issue:`44703`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:918
msgid "Bug in indexing on columns with ``loc`` or ``iloc`` using a slice with a negative step with ``ExtensionDtype`` columns incorrectly raising (:issue:`44551`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:919
msgid "Bug in :meth:`DataFrame.loc.__setitem__` changing dtype when indexer was completely ``False`` (:issue:`37550`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:920
msgid "Bug in :meth:`IntervalIndex.get_indexer_non_unique` returning boolean mask instead of array of integers for a non unique and non monotonic index (:issue:`44084`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:921
msgid "Bug in :meth:`IntervalIndex.get_indexer_non_unique` not handling targets of ``dtype`` 'object' with NaNs correctly (:issue:`44482`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:922
msgid "Fixed regression where a single column ``np.matrix`` was no longer coerced to a 1d ``np.ndarray`` when added to a :class:`DataFrame` (:issue:`42376`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:923
msgid "Bug in :meth:`Series.__getitem__` with a :class:`CategoricalIndex` of integers treating lists of integers as positional indexers, inconsistent with the behavior with a single scalar integer (:issue:`15470`, :issue:`14865`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:924
msgid "Bug in :meth:`Series.__setitem__` when setting floats or integers into integer-dtype :class:`Series` failing to upcast when necessary to retain precision (:issue:`45121`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:925
msgid "Bug in :meth:`DataFrame.iloc.__setitem__` ignores axis argument (:issue:`45032`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:928
msgid "Missing"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:929
msgid "Bug in :meth:`DataFrame.fillna` with ``limit`` and no ``method`` ignores ``axis='columns'`` or ``axis = 1`` (:issue:`40989`, :issue:`17399`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:930
msgid "Bug in :meth:`DataFrame.fillna` not replacing missing values when using a dict-like ``value`` and duplicate column names (:issue:`43476`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:931
msgid "Bug in constructing a :class:`DataFrame` with a dictionary ``np.datetime64`` as a value and ``dtype='timedelta64[ns]'``, or vice-versa, incorrectly casting instead of raising (:issue:`44428`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:932
msgid "Bug in :meth:`Series.interpolate` and :meth:`DataFrame.interpolate` with ``inplace=True`` not writing to the underlying array(s) in-place (:issue:`44749`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:933
msgid "Bug in :meth:`Index.fillna` incorrectly returning an unfilled :class:`Index` when NA values are present and ``downcast`` argument is specified. This now raises ``NotImplementedError`` instead; do not pass ``downcast`` argument (:issue:`44873`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:934
msgid "Bug in :meth:`DataFrame.dropna` changing :class:`Index` even if no entries were dropped (:issue:`41965`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:935
msgid "Bug in :meth:`Series.fillna` with an object-dtype incorrectly ignoring ``downcast=\"infer\"`` (:issue:`44241`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:938
msgid "MultiIndex"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:939
msgid "Bug in :meth:`MultiIndex.get_loc` where the first level is a :class:`DatetimeIndex` and a string key is passed (:issue:`42465`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:940
msgid "Bug in :meth:`MultiIndex.reindex` when passing a ``level`` that corresponds to an ``ExtensionDtype`` level (:issue:`42043`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:941
msgid "Bug in :meth:`MultiIndex.get_loc` raising ``TypeError`` instead of ``KeyError`` on nested tuple (:issue:`42440`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:942
msgid "Bug in :meth:`MultiIndex.union` setting wrong ``sortorder`` causing errors in subsequent indexing operations with slices (:issue:`44752`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:943
msgid "Bug in :meth:`MultiIndex.putmask` where the other value was also a :class:`MultiIndex` (:issue:`43212`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:944
msgid "Bug in :meth:`MultiIndex.dtypes` duplicate level names returned only one dtype per name (:issue:`45174`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:947
msgid "I/O"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:948
msgid "Bug in :func:`read_excel` attempting to read chart sheets from .xlsx files (:issue:`41448`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:949
msgid "Bug in :func:`json_normalize` where ``errors=ignore`` could fail to ignore missing values of ``meta`` when ``record_path`` has a length greater than one (:issue:`41876`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:950
msgid "Bug in :func:`read_csv` with multi-header input and arguments referencing column names as tuples (:issue:`42446`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:951
msgid "Bug in :func:`read_fwf`, where difference in lengths of ``colspecs`` and ``names`` was not raising ``ValueError`` (:issue:`40830`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:952
msgid "Bug in :func:`Series.to_json` and :func:`DataFrame.to_json` where some attributes were skipped when serializing plain Python objects to JSON (:issue:`42768`, :issue:`33043`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:953
msgid "Column headers are dropped when constructing a :class:`DataFrame` from a sqlalchemy's ``Row`` object (:issue:`40682`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:954
msgid "Bug in unpickling an :class:`Index` with object dtype incorrectly inferring numeric dtypes (:issue:`43188`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:955
msgid "Bug in :func:`read_csv` where reading multi-header input with unequal lengths incorrectly raised ``IndexError`` (:issue:`43102`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:956
msgid "Bug in :func:`read_csv` raising ``ParserError`` when reading file in chunks and some chunk blocks have fewer columns than header for ``engine=\"c\"`` (:issue:`21211`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:957
msgid "Bug in :func:`read_csv`, changed exception class when expecting a file path name or file-like object from ``OSError`` to ``TypeError`` (:issue:`43366`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:958
msgid "Bug in :func:`read_csv` and :func:`read_fwf` ignoring all ``skiprows`` except first when ``nrows`` is specified for ``engine='python'`` (:issue:`44021`, :issue:`10261`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:959
msgid "Bug in :func:`read_csv` keeping the original column in object format when ``keep_date_col=True`` is set (:issue:`13378`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:960
msgid "Bug in :func:`read_json` not handling non-numpy dtypes correctly (especially ``category``) (:issue:`21892`, :issue:`33205`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:961
msgid "Bug in :func:`json_normalize` where multi-character ``sep`` parameter is incorrectly prefixed to every key (:issue:`43831`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:962
msgid "Bug in :func:`json_normalize` where reading data with missing multi-level metadata would not respect ``errors=\"ignore\"`` (:issue:`44312`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:963
msgid "Bug in :func:`read_csv` used second row to guess implicit index if ``header`` was set to ``None`` for ``engine=\"python\"`` (:issue:`22144`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:964
msgid "Bug in :func:`read_csv` not recognizing bad lines when ``names`` were given for ``engine=\"c\"`` (:issue:`22144`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:965
msgid "Bug in :func:`read_csv` with :code:`float_precision=\"round_trip\"` which did not skip initial/trailing whitespace (:issue:`43713`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:966
msgid "Bug when Python is built without the lzma module: a warning was raised at the pandas import time, even if the lzma capability isn't used (:issue:`43495`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:967
msgid "Bug in :func:`read_csv` not applying dtype for ``index_col`` (:issue:`9435`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:968
msgid "Bug in dumping/loading a :class:`DataFrame` with ``yaml.dump(frame)`` (:issue:`42748`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:969
msgid "Bug in :func:`read_csv` raising ``ValueError`` when ``names`` was longer than ``header`` but equal to data rows for ``engine=\"python\"`` (:issue:`38453`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:970
msgid "Bug in :class:`ExcelWriter`, where ``engine_kwargs`` were not passed through to all engines (:issue:`43442`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:971
msgid "Bug in :func:`read_csv` raising ``ValueError`` when ``parse_dates`` was used with :class:`MultiIndex` columns (:issue:`8991`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:972
msgid "Bug in :func:`read_csv` not raising an ``ValueError`` when ``\\n`` was specified as ``delimiter`` or ``sep`` which conflicts with ``lineterminator`` (:issue:`43528`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:973
msgid "Bug in :func:`to_csv` converting datetimes in categorical :class:`Series` to integers (:issue:`40754`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:974
msgid "Bug in :func:`read_csv` converting columns to numeric after date parsing failed (:issue:`11019`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:975
msgid "Bug in :func:`read_csv` not replacing ``NaN`` values with ``np.nan`` before attempting date conversion (:issue:`26203`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:976
msgid "Bug in :func:`read_csv` raising ``AttributeError`` when attempting to read a .csv file and infer index column dtype from an nullable integer type (:issue:`44079`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:977
msgid "Bug in :func:`to_csv` always coercing datetime columns with different formats to the same format (:issue:`21734`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:978
msgid ":meth:`DataFrame.to_csv` and :meth:`Series.to_csv` with ``compression`` set to ``'zip'`` no longer create a zip file containing a file ending with \".zip\". Instead, they try to infer the inner file name more smartly (:issue:`39465`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:979
msgid "Bug in :func:`read_csv` where reading a mixed column of booleans and missing values to a float type results in the missing values becoming 1.0 rather than NaN (:issue:`42808`, :issue:`34120`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:980
msgid "Bug in :func:`to_xml` raising error for ``pd.NA`` with extension array dtype (:issue:`43903`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:981
msgid "Bug in :func:`read_csv` when passing simultaneously a parser in ``date_parser`` and ``parse_dates=False``, the parsing was still called (:issue:`44366`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:982
msgid "Bug in :func:`read_csv` not setting name of :class:`MultiIndex` columns correctly when ``index_col`` is not the first column (:issue:`38549`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:983
msgid "Bug in :func:`read_csv` silently ignoring errors when failing to create a memory-mapped file (:issue:`44766`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:984
msgid "Bug in :func:`read_csv` when passing a ``tempfile.SpooledTemporaryFile`` opened in binary mode (:issue:`44748`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:985
msgid "Bug in :func:`read_json` raising ``ValueError`` when attempting to parse json strings containing \"://\" (:issue:`36271`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:986
msgid "Bug in :func:`read_csv` when ``engine=\"c\"`` and ``encoding_errors=None`` which caused a segfault (:issue:`45180`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:987
msgid "Bug in :func:`read_csv` an invalid value of ``usecols`` leading to an unclosed file handle (:issue:`45384`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:988
msgid "Bug in :meth:`DataFrame.to_json` fix memory leak (:issue:`43877`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:991
msgid "Period"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:992
msgid "Bug in adding a :class:`Period` object to a ``np.timedelta64`` object incorrectly raising ``TypeError`` (:issue:`44182`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:993
msgid "Bug in :meth:`PeriodIndex.to_timestamp` when the index has ``freq=\"B\"`` inferring ``freq=\"D\"`` for its result instead of ``freq=\"B\"`` (:issue:`44105`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:994
msgid "Bug in :class:`Period` constructor incorrectly allowing ``np.timedelta64(\"NaT\")`` (:issue:`44507`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:995
msgid "Bug in :meth:`PeriodIndex.to_timestamp` giving incorrect values for indexes with non-contiguous data (:issue:`44100`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:996
msgid "Bug in :meth:`Series.where` with ``PeriodDtype`` incorrectly raising when the ``where`` call should not replace anything (:issue:`45135`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:999
msgid "Plotting"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1000
msgid "When given non-numeric data, :meth:`DataFrame.boxplot` now raises a ``ValueError`` rather than a cryptic ``KeyError`` or ``ZeroDivisionError``, in line with other plotting functions like :meth:`DataFrame.hist` (:issue:`43480`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1003
msgid "Groupby/resample/rolling"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1004
msgid "Bug in :meth:`SeriesGroupBy.apply` where passing an unrecognized string argument failed to raise ``TypeError`` when the underlying ``Series`` is empty (:issue:`42021`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1005
msgid "Bug in :meth:`Series.rolling.apply`, :meth:`DataFrame.rolling.apply`, :meth:`Series.expanding.apply` and :meth:`DataFrame.expanding.apply` with ``engine=\"numba\"`` where ``*args`` were being cached with the user passed function (:issue:`42287`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1006
msgid "Bug in :meth:`.DataFrameGroupBy.max`, :meth:`.SeriesGroupBy.max`, :meth:`.DataFrameGroupBy.min`, and :meth:`.SeriesGroupBy.min` with nullable integer dtypes losing precision (:issue:`41743`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1007
msgid "Bug in :meth:`DataFrame.groupby.rolling.var` would calculate the rolling variance only on the first group (:issue:`42442`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1008
msgid "Bug in :meth:`.DataFrameGroupBy.shift` and :meth:`.SeriesGroupBy.shift` that would return the grouping columns if ``fill_value`` was not ``None`` (:issue:`41556`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1009
msgid "Bug in :meth:`SeriesGroupBy.nlargest` and :meth:`SeriesGroupBy.nsmallest` would have an inconsistent index when the input :class:`Series` was sorted and ``n`` was greater than or equal to all group sizes (:issue:`15272`, :issue:`16345`, :issue:`29129`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1010
msgid "Bug in :meth:`pandas.DataFrame.ewm`, where non-float64 dtypes were silently failing (:issue:`42452`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1011
msgid "Bug in :meth:`pandas.DataFrame.rolling` operation along rows (``axis=1``) incorrectly omits columns containing ``float16`` and ``float32`` (:issue:`41779`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1012
msgid "Bug in :meth:`Resampler.aggregate` did not allow the use of Named Aggregation (:issue:`32803`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1013
msgid "Bug in :meth:`Series.rolling` when the :class:`Series` ``dtype`` was ``Int64`` (:issue:`43016`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1014
msgid "Bug in :meth:`DataFrame.rolling.corr` when the :class:`DataFrame` columns was a :class:`MultiIndex` (:issue:`21157`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1015
msgid "Bug in :meth:`DataFrame.groupby.rolling` when specifying ``on`` and calling ``__getitem__`` would subsequently return incorrect results (:issue:`43355`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1016
msgid "Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` with time-based :class:`Grouper` objects incorrectly raising ``ValueError`` in corner cases where the grouping vector contains a ``NaT`` (:issue:`43500`, :issue:`43515`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1017
msgid "Bug in :meth:`.DataFrameGroupBy.mean` and :meth:`.SeriesGroupBy.mean` failing with ``complex`` dtype (:issue:`43701`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1018
msgid "Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not calculating window bounds correctly for the first row when ``center=True`` and index is decreasing (:issue:`43927`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1019
msgid "Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` for centered datetimelike windows with uneven nanosecond (:issue:`43997`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1020
msgid "Bug in :meth:`.DataFrameGroupBy.mean` and :meth:`.SeriesGroupBy.mean` raising ``KeyError`` when column was selected at least twice (:issue:`44924`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1021
msgid "Bug in :meth:`.DataFrameGroupBy.nth` and :meth:`.SeriesGroupBy.nth` failing on ``axis=1`` (:issue:`43926`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1022
msgid "Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` not respecting right bound on centered datetime-like windows, if the index contain duplicates (:issue:`3944`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1023
msgid "Bug in :meth:`Series.rolling` and :meth:`DataFrame.rolling` when using a :class:`pandas.api.indexers.BaseIndexer` subclass that returned unequal start and end arrays would segfault instead of raising a ``ValueError`` (:issue:`44470`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1024
msgid "Bug in :meth:`Groupby.nunique` not respecting ``observed=True`` for ``categorical`` grouping columns (:issue:`45128`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1025
msgid "Bug in :meth:`.DataFrameGroupBy.head`, :meth:`.SeriesGroupBy.head`, :meth:`.DataFrameGroupBy.tail`, and :meth:`.SeriesGroupBy.tail` not dropping groups with ``NaN`` when ``dropna=True`` (:issue:`45089`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1026
msgid "Bug in :meth:`GroupBy.__iter__` after selecting a subset of columns in a :class:`GroupBy` object, which returned all columns instead of the chosen subset (:issue:`44821`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1027
msgid "Bug in :meth:`Groupby.rolling` when non-monotonic data passed, fails to correctly raise ``ValueError`` (:issue:`43909`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1028
msgid "Bug where grouping by a :class:`Series` that has a ``categorical`` data type and length unequal to the axis of grouping raised ``ValueError`` (:issue:`44179`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1031
msgid "Reshaping"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1032
msgid "Improved error message when creating a :class:`DataFrame` column from a multi-dimensional :class:`numpy.ndarray` (:issue:`42463`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1033
msgid "Bug in :func:`concat` creating :class:`MultiIndex` with duplicate level entries when concatenating a :class:`DataFrame` with duplicates in :class:`Index` and multiple keys (:issue:`42651`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1034
msgid "Bug in :meth:`pandas.cut` on :class:`Series` with duplicate indices and non-exact :meth:`pandas.CategoricalIndex` (:issue:`42185`, :issue:`42425`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1035
msgid "Bug in :meth:`DataFrame.append` failing to retain dtypes when appended columns do not match (:issue:`43392`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1036
msgid "Bug in :func:`concat` of ``bool`` and ``boolean`` dtypes resulting in ``object`` dtype instead of ``boolean`` dtype (:issue:`42800`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1037
msgid "Bug in :func:`crosstab` when inputs are categorical :class:`Series`, there are categories that are not present in one or both of the :class:`Series`, and ``margins=True``. Previously the margin value for missing categories was ``NaN``. It is now correctly reported as 0 (:issue:`43505`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1038
msgid "Bug in :func:`concat` would fail when the ``objs`` argument all had the same index and the ``keys`` argument contained duplicates (:issue:`43595`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1039
msgid "Bug in :func:`concat` which ignored the ``sort`` parameter (:issue:`43375`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1040
msgid "Bug in :func:`merge` with :class:`MultiIndex` as column index for the ``on`` argument returning an error when assigning a column internally (:issue:`43734`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1041
msgid "Bug in :func:`crosstab` would fail when inputs are lists or tuples (:issue:`44076`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1042
msgid "Bug in :meth:`DataFrame.append` failing to retain ``index.name`` when appending a list of :class:`Series` objects (:issue:`44109`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1043
msgid "Fixed metadata propagation in :meth:`Dataframe.apply` method, consequently fixing the same issue for :meth:`Dataframe.transform`, :meth:`Dataframe.nunique` and :meth:`Dataframe.mode` (:issue:`28283`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1044
msgid "Bug in :func:`concat` casting levels of :class:`MultiIndex` to float if all levels only consist of missing values (:issue:`44900`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1045
msgid "Bug in :meth:`DataFrame.stack` with ``ExtensionDtype`` columns incorrectly raising (:issue:`43561`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1046
msgid "Bug in :func:`merge` raising ``KeyError`` when joining over differently named indexes with on keywords (:issue:`45094`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1047
msgid "Bug in :meth:`Series.unstack` with object doing unwanted type inference on resulting columns (:issue:`44595`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1048
msgid "Bug in :meth:`MultiIndex.join()` with overlapping ``IntervalIndex`` levels (:issue:`44096`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1049
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` results is different ``dtype`` based on ``regex`` parameter (:issue:`44864`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1050
msgid "Bug in :meth:`DataFrame.pivot` with ``index=None`` when the :class:`DataFrame` index was a :class:`MultiIndex` (:issue:`23955`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1053
msgid "Sparse"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1054
msgid "Bug in :meth:`DataFrame.sparse.to_coo` raising ``AttributeError`` when column names are not unique (:issue:`29564`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1055
msgid "Bug in :meth:`SparseArray.max` and :meth:`SparseArray.min` raising ``ValueError`` for arrays with 0 non-null elements (:issue:`43527`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1056
msgid "Bug in :meth:`DataFrame.sparse.to_coo` silently converting non-zero fill values to zero (:issue:`24817`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1057
msgid "Bug in :class:`SparseArray` comparison methods with an array-like operand of mismatched length raising ``AssertionError`` or unclear ``ValueError`` depending on the input (:issue:`43863`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1058
msgid "Bug in :class:`SparseArray` arithmetic methods ``floordiv`` and ``mod`` behaviors when dividing by zero not matching the non-sparse :class:`Series` behavior (:issue:`38172`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1059
msgid "Bug in :class:`SparseArray` unary methods as well as :meth:`SparseArray.isna` doesn't recalculate indexes (:issue:`44955`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1062
msgid "ExtensionArray"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1063
msgid "Bug in :func:`array` failing to preserve :class:`PandasArray` (:issue:`43887`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1064
msgid "NumPy ufuncs ``np.abs``, ``np.positive``, ``np.negative`` now correctly preserve dtype when called on ExtensionArrays that implement ``__abs__, __pos__, __neg__``, respectively. In particular this is fixed for :class:`TimedeltaArray` (:issue:`43899`, :issue:`23316`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1065
msgid "NumPy ufuncs ``np.minimum.reduce`` ``np.maximum.reduce``, ``np.add.reduce``, and ``np.prod.reduce`` now work correctly instead of raising ``NotImplementedError`` on :class:`Series` with ``IntegerDtype`` or ``FloatDtype`` (:issue:`43923`, :issue:`44793`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1066
msgid "NumPy ufuncs with ``out`` keyword are now supported by arrays with ``IntegerDtype`` and ``FloatingDtype`` (:issue:`45122`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1067
msgid "Avoid raising ``PerformanceWarning`` about fragmented :class:`DataFrame` when using many columns with an extension dtype (:issue:`44098`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1068
msgid "Bug in :class:`IntegerArray` and :class:`FloatingArray` construction incorrectly coercing mismatched NA values (e.g. ``np.timedelta64(\"NaT\")``) to numeric NA (:issue:`44514`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1069
msgid "Bug in :meth:`BooleanArray.__eq__` and :meth:`BooleanArray.__ne__` raising ``TypeError`` on comparison with an incompatible type (like a string). This caused :meth:`DataFrame.replace` to sometimes raise a ``TypeError`` if a nullable boolean column was included (:issue:`44499`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1070
msgid "Bug in :func:`array` incorrectly raising when passed a ``ndarray`` with ``float16`` dtype (:issue:`44715`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1071
msgid "Bug in calling ``np.sqrt`` on :class:`BooleanArray` returning a malformed :class:`FloatingArray` (:issue:`44715`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1072
msgid "Bug in :meth:`Series.where` with ``ExtensionDtype`` when ``other`` is a NA scalar incompatible with the :class:`Series` dtype (e.g. ``NaT`` with a numeric dtype) incorrectly casting to a compatible NA value (:issue:`44697`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1073
msgid "Bug in :meth:`Series.replace` where explicitly passing ``value=None`` is treated as if no ``value`` was passed, and ``None`` not being in the result (:issue:`36984`, :issue:`19998`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1074
msgid "Bug in :meth:`Series.replace` with unwanted downcasting being done in no-op replacements (:issue:`44498`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1075
msgid "Bug in :meth:`Series.replace` with ``FloatDtype``, ``string[python]``, or ``string[pyarrow]`` dtype not being preserved when possible (:issue:`33484`, :issue:`40732`, :issue:`31644`, :issue:`41215`, :issue:`25438`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1079
msgid "Bug in :class:`.Styler` where the ``uuid`` at initialization maintained a floating underscore (:issue:`43037`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1080
msgid "Bug in :meth:`.Styler.to_html` where the ``Styler`` object was updated if the ``to_html`` method was called with some args (:issue:`43034`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1081
msgid "Bug in :meth:`.Styler.copy` where ``uuid`` was not previously copied (:issue:`40675`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1082
msgid "Bug in :meth:`Styler.apply` where functions which returned :class:`Series` objects were not correctly handled in terms of aligning their index labels (:issue:`13657`, :issue:`42014`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1083
msgid "Bug when rendering an empty :class:`DataFrame` with a named :class:`Index` (:issue:`43305`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1084
msgid "Bug when rendering a single level :class:`MultiIndex` (:issue:`43383`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1085
msgid "Bug when combining non-sparse rendering and :meth:`.Styler.hide_columns` or :meth:`.Styler.hide_index` (:issue:`43464`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1086
msgid "Bug setting a table style when using multiple selectors in :class:`.Styler` (:issue:`44011`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1087
msgid "Bugs where row trimming and column trimming failed to reflect hidden rows (:issue:`43703`, :issue:`44247`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1090
msgid "Other"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1091
msgid "Bug in :meth:`DataFrame.astype` with non-unique columns and a :class:`Series` ``dtype`` argument (:issue:`44417`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1092
msgid "Bug in :meth:`CustomBusinessMonthBegin.__add__` (:meth:`CustomBusinessMonthEnd.__add__`) not applying the extra ``offset`` parameter when beginning (end) of the target month is already a business day (:issue:`41356`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1093
msgid "Bug in :meth:`RangeIndex.union` with another ``RangeIndex`` with matching (even) ``step`` and starts differing by strictly less than ``step / 2`` (:issue:`44019`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1094
msgid "Bug in :meth:`RangeIndex.difference` with ``sort=None`` and ``step<0`` failing to sort (:issue:`44085`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1095
msgid "Bug in :meth:`Series.replace` and :meth:`DataFrame.replace` with ``value=None`` and ExtensionDtypes (:issue:`44270`, :issue:`37899`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1096
msgid "Bug in :meth:`FloatingArray.equals` failing to consider two arrays equal if they contain ``np.nan`` values (:issue:`44382`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1097
msgid "Bug in :meth:`DataFrame.shift` with ``axis=1`` and ``ExtensionDtype`` columns incorrectly raising when an incompatible ``fill_value`` is passed (:issue:`44564`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1098
msgid "Bug in :meth:`DataFrame.shift` with ``axis=1`` and ``periods`` larger than ``len(frame.columns)`` producing an invalid :class:`DataFrame` (:issue:`44978`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1099
msgid "Bug in :meth:`DataFrame.diff` when passing a NumPy integer object instead of an ``int`` object (:issue:`44572`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1100
msgid "Bug in :meth:`Series.replace` raising ``ValueError`` when using ``regex=True`` with a :class:`Series` containing ``np.nan`` values (:issue:`43344`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1101
msgid "Bug in :meth:`DataFrame.to_records` where an incorrect ``n`` was used when missing names were replaced by ``level_n`` (:issue:`44818`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1102
msgid "Bug in :meth:`DataFrame.eval` where ``resolvers`` argument was overriding the default resolvers (:issue:`34966`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1103
msgid ":meth:`Series.__repr__` and :meth:`DataFrame.__repr__` no longer replace all null-values in indexes with \"NaN\" but use their real string-representations. \"NaN\" is used only for ``float(\"nan\")`` (:issue:`45263`)"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1110
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v1.4.0.rst:1112
msgid "A total of 275 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
