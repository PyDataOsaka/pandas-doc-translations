# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v0.25.0.rst:4
msgid "What's new in 0.25.0 (July 18, 2019)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:8
msgid "Starting with the 0.25.x series of releases, pandas only supports Python 3.5.3 and higher. See `Dropping Python 2.7 <https://pandas.pydata.org/pandas-docs/version/0.24/install.html#install-dropping-27>`_ for more details."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:13
msgid "The minimum supported Python version will be bumped to 3.6 in a future release."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:17
msgid "``Panel`` has been fully removed. For N-D labeled data structures, please use `xarray <https://xarray.pydata.org/en/stable/>`_"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:22
msgid ":func:`read_pickle` and :func:`read_msgpack` are only guaranteed backwards compatible back to pandas version 0.20.3 (:issue:`27082`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:25
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:27
msgid "These are the changes in pandas 0.25.0. See :ref:`release` for a full changelog including other versions of pandas."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:32
msgid "Enhancements"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:37
msgid "GroupBy aggregation with relabeling"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:39
msgid "pandas has added special groupby behavior, known as \"named aggregation\", for naming the output columns when applying multiple aggregation functions to specific columns (:issue:`18366`, :issue:`26512`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:54
msgid "Pass the desired columns names as the ``**kwargs`` to ``.agg``. The values of ``**kwargs`` should be tuples where the first element is the column selection, and the second element is the aggregation function to apply. pandas provides the ``pandas.NamedAgg`` namedtuple to make it clearer what the arguments to the function are, but plain tuples are accepted as well."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:67
msgid "Named aggregation is the recommended replacement for the deprecated \"dict-of-dicts\" approach to naming the output of column-specific aggregations (:ref:`whatsnew_0200.api_breaking.deprecate_group_agg_dict`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:70
msgid "A similar approach is now available for Series groupby objects as well. Because there's no need for column selection, the values can just be the functions to apply"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:81
msgid "This type of aggregation is the recommended alternative to the deprecated behavior when passing a dict to a Series groupby aggregation (:ref:`whatsnew_0200.api_breaking.deprecate_group_agg_dict`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:84
msgid "See :ref:`groupby.aggregate.named` for more."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:89
msgid "GroupBy aggregation with multiple lambdas"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:91
msgid "You can now provide multiple lambda functions to a list-like aggregation in :class:`pandas.core.groupby.GroupBy.agg` (:issue:`26430`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:105
msgid "Previously, these raised a ``SpecificationError``."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:110
msgid "Better repr for MultiIndex"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:112
msgid "Printing of :class:`MultiIndex` instances now shows tuples of each row and ensures that the tuple items are vertically aligned, so it's now easier to understand the structure of the ``MultiIndex``. (:issue:`13480`):"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:116
#: ../../source/whatsnew/v0.25.0.rst:171
msgid "The repr now looks like this:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:122
msgid "Previously, outputting a :class:`MultiIndex` printed all the ``levels`` and ``codes`` of the ``MultiIndex``, which was visually unappealing and made the output more difficult to navigate. For example (limiting the range to 5):"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:132
msgid "In the new repr, all values will be shown, if the number of rows is smaller than :attr:`options.display.max_seq_items` (default: 100 items). Horizontally, the output will truncate, if it's wider than :attr:`options.display.width` (default: 80 characters)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:140
msgid "Shorter truncated repr for Series and DataFrame"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:142
msgid "Currently, the default display options of pandas ensure that when a Series or DataFrame has more than 60 rows, its repr gets truncated to this maximum of 60 rows (the ``display.max_rows`` option). However, this still gives a repr that takes up a large part of the vertical screen estate. Therefore, a new option ``display.min_rows`` is introduced with a default of 10 which determines the number of rows showed in the truncated repr:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:149
msgid "For small Series or DataFrames, up to ``max_rows`` number of rows is shown (default: 60)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:151
msgid "For larger Series of DataFrame with a length above ``max_rows``, only ``min_rows`` number of rows is shown (default: 10, i.e. the first and last 5 rows)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:155
msgid "This dual option allows to still see the full content of relatively small objects (e.g. ``df.head(20)`` shows all 20 rows), while giving a brief repr for large objects."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:159
msgid "To restore the previous behaviour of a single threshold, set ``pd.options.display.min_rows = None``."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:165
msgid "JSON normalize with max_level param support"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:167
msgid ":func:`json_normalize` normalizes the provided input dict to all nested levels. The new max_level parameter provides more control over which level to end normalization (:issue:`23843`):"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:188
msgid "Series.explode to split list-like values to rows"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:190
msgid ":class:`Series` and :class:`DataFrame` have gained the :meth:`DataFrame.explode` methods to transform list-likes to individual rows. See :ref:`section on Exploding list-like column <reshaping.explode>` in docs for more information (:issue:`16538`, :issue:`10511`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:193
msgid "Here is a typical usecase. You have comma separated string in a column."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:201
msgid "Creating a long form ``DataFrame`` is now straightforward using chained operations"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:210
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:211
msgid ":func:`DataFrame.plot` keywords ``logy``, ``logx`` and ``loglog`` can now accept the value ``'sym'`` for symlog scaling. (:issue:`24867`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:212
msgid "Added support for ISO week year format ('%G-%V-%u') when parsing datetimes using :meth:`to_datetime` (:issue:`16607`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:213
msgid "Indexing of ``DataFrame`` and ``Series`` now accepts zerodim ``np.ndarray`` (:issue:`24919`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:214
msgid ":meth:`Timestamp.replace` now supports the ``fold`` argument to disambiguate DST transition times (:issue:`25017`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:215
msgid ":meth:`DataFrame.at_time` and :meth:`Series.at_time` now support :class:`datetime.time` objects with timezones (:issue:`24043`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:216
msgid ":meth:`DataFrame.pivot_table` now accepts an ``observed`` parameter which is passed to underlying calls to :meth:`DataFrame.groupby` to speed up grouping categorical data. (:issue:`24923`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:217
msgid "``Series.str`` has gained :meth:`Series.str.casefold` method to removes all case distinctions present in a string (:issue:`25405`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:218
msgid ":meth:`DataFrame.set_index` now works for instances of ``abc.Iterator``, provided their output is of the same length as the calling frame (:issue:`22484`, :issue:`24984`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:219
msgid ":meth:`DatetimeIndex.union` now supports the ``sort`` argument. The behavior of the sort parameter matches that of :meth:`Index.union` (:issue:`24994`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:220
msgid ":meth:`RangeIndex.union` now supports the ``sort`` argument. If ``sort=False`` an unsorted ``Int64Index`` is always returned. ``sort=None`` is the default and returns a monotonically increasing ``RangeIndex`` if possible or a sorted ``Int64Index`` if not (:issue:`24471`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:221
msgid ":meth:`TimedeltaIndex.intersection` now also supports the ``sort`` keyword (:issue:`24471`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:222
msgid ":meth:`DataFrame.rename` now supports the ``errors`` argument to raise errors when attempting to rename nonexistent keys (:issue:`13473`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:223
msgid "Added :ref:`api.frame.sparse` for working with a ``DataFrame`` whose values are sparse (:issue:`25681`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:224
msgid ":class:`RangeIndex` has gained :attr:`~RangeIndex.start`, :attr:`~RangeIndex.stop`, and :attr:`~RangeIndex.step` attributes (:issue:`25710`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:225
msgid ":class:`datetime.timezone` objects are now supported as arguments to timezone methods and constructors (:issue:`25065`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:226
msgid ":meth:`DataFrame.query` and :meth:`DataFrame.eval` now supports quoting column names with backticks to refer to names with spaces (:issue:`6508`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:227
msgid ":func:`merge_asof` now gives a more clear error message when merge keys are categoricals that are not equal (:issue:`26136`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:228
msgid ":meth:`pandas.core.window.Rolling` supports exponential (or Poisson) window type (:issue:`21303`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:229
msgid "Error message for missing required imports now includes the original import error's text (:issue:`23868`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:230
msgid ":class:`DatetimeIndex` and :class:`TimedeltaIndex` now have a ``mean`` method (:issue:`24757`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:231
msgid ":meth:`DataFrame.describe` now formats integer percentiles without decimal point (:issue:`26660`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:232
msgid "Added support for reading SPSS .sav files using :func:`read_spss` (:issue:`26537`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:233
msgid "Added new option ``plotting.backend`` to be able to select a plotting backend different than the existing ``matplotlib`` one. Use ``pandas.set_option('plotting.backend', '<backend-module>')`` where ``<backend-module`` is a library implementing the pandas plotting API (:issue:`14130`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:234
msgid ":class:`pandas.offsets.BusinessHour` supports multiple opening hours intervals (:issue:`15481`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:235
msgid ":func:`read_excel` can now use ``openpyxl`` to read Excel files via the ``engine='openpyxl'`` argument. This will become the default in a future release (:issue:`11499`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:236
msgid ":func:`pandas.io.excel.read_excel` supports reading OpenDocument tables. Specify ``engine='odf'`` to enable. Consult the :ref:`IO User Guide <io.ods>` for more details (:issue:`9070`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:237
msgid ":class:`Interval`, :class:`IntervalIndex`, and :class:`~arrays.IntervalArray` have gained an :attr:`~Interval.is_empty` attribute denoting if the given interval(s) are empty (:issue:`27219`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:242
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:248
msgid "Indexing with date strings with UTC offsets"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:250
msgid "Indexing a :class:`DataFrame` or :class:`Series` with a :class:`DatetimeIndex` with a date string with a UTC offset would previously ignore the UTC offset. Now, the UTC offset is respected in indexing. (:issue:`24076`, :issue:`16785`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:259
#: ../../source/whatsnew/v0.25.0.rst:285
#: ../../source/whatsnew/v0.25.0.rst:330
#: ../../source/whatsnew/v0.25.0.rst:365
#: ../../source/whatsnew/v0.25.0.rst:398
#: ../../source/whatsnew/v0.25.0.rst:467
#: ../../source/whatsnew/v0.25.0.rst:506
#: ../../source/whatsnew/v0.25.0.rst:535
#: ../../source/whatsnew/v0.25.0.rst:582
#: ../../source/whatsnew/v0.25.0.rst:602
#: ../../source/whatsnew/v0.25.0.rst:635
#: ../../source/whatsnew/v0.25.0.rst:660
msgid "*Previous behavior*:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:268
#: ../../source/whatsnew/v0.25.0.rst:299
#: ../../source/whatsnew/v0.25.0.rst:343
#: ../../source/whatsnew/v0.25.0.rst:372
#: ../../source/whatsnew/v0.25.0.rst:418
#: ../../source/whatsnew/v0.25.0.rst:478
#: ../../source/whatsnew/v0.25.0.rst:516
#: ../../source/whatsnew/v0.25.0.rst:545
#: ../../source/whatsnew/v0.25.0.rst:592
#: ../../source/whatsnew/v0.25.0.rst:612
#: ../../source/whatsnew/v0.25.0.rst:651
#: ../../source/whatsnew/v0.25.0.rst:676
#: ../../source/whatsnew/v0.25.0.rst:691
msgid "*New behavior*:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:279
msgid "``MultiIndex`` constructed from levels and codes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:281
msgid "Constructing a :class:`MultiIndex` with ``NaN`` levels or codes value < -1 was allowed previously. Now, construction with codes value < -1 is not allowed and ``NaN`` levels' corresponding codes would be reassigned as -1. (:issue:`19387`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:312
msgid "``GroupBy.apply`` on ``DataFrame`` evaluates first group only once"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:314
msgid "The implementation of :meth:`DataFrameGroupBy.apply() <pandas.core.groupby.DataFrameGroupBy.apply>` previously evaluated the supplied function consistently twice on the first group to infer if it is safe to use a fast code path. Particularly for functions with side effects, this was an undesired behavior and may have led to surprises. (:issue:`2936`, :issue:`2656`, :issue:`7739`, :issue:`10519`, :issue:`12155`, :issue:`20084`, :issue:`21417`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:319
msgid "Now every group is evaluated only a single time."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:356
msgid "Concatenating sparse values"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:358
msgid "When passed DataFrames whose values are sparse, :func:`concat` will now return a :class:`Series` or :class:`DataFrame` with sparse values, rather than a :class:`SparseDataFrame` (:issue:`25702`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:379
msgid "This now matches the existing behavior of :class:`concat` on ``Series`` with sparse values. :func:`concat` will continue to return a ``SparseDataFrame`` when all the values are instances of ``SparseDataFrame``."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:383
msgid "This change also affects routines using :func:`concat` internally, like :func:`get_dummies`, which now returns a :class:`DataFrame` in all cases (previously a ``SparseDataFrame`` was returned if all the columns were dummy encoded, and a :class:`DataFrame` otherwise)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:387
msgid "Providing any ``SparseSeries`` or ``SparseDataFrame`` to :func:`concat` will cause a ``SparseSeries`` or ``SparseDataFrame`` to be returned, as before."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:391
msgid "The ``.str``-accessor performs stricter type checks"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:393
msgid "Due to the lack of more fine-grained dtypes, :attr:`Series.str` so far only checked whether the data was of ``object`` dtype. :attr:`Series.str` will now infer the dtype data *within* the Series; in particular, ``'bytes'``-only data will raise an exception (except for :meth:`Series.str.decode`, :meth:`Series.str.get`, :meth:`Series.str.len`, :meth:`Series.str.slice`), see :issue:`23163`, :issue:`23011`, :issue:`23551`."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:430
msgid "Categorical dtypes are preserved during GroupBy"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:432
msgid "Previously, columns that were categorical, but not the groupby key(s) would be converted to ``object`` dtype during groupby operations. pandas now will preserve these dtypes. (:issue:`18502`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:441
#: ../../source/whatsnew/v0.25.0.rst:790
msgid "*Previous Behavior*:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:448
#: ../../source/whatsnew/v0.25.0.rst:803
msgid "*New Behavior*:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:458
msgid "Incompatible Index type unions"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:460
msgid "When performing :func:`Index.union` operations between objects of incompatible dtypes, the result will be a base :class:`Index` of dtype ``object``. This behavior holds true for unions between :class:`Index` objects that previously would have been prohibited. The dtype of empty :class:`Index` objects will now be evaluated before performing union operations rather than simply returning the other :class:`Index` object. :func:`Index.union` can now be considered commutative, such that ``A.union(B) == B.union(A)`` (:issue:`23525`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:487
msgid "Note that integer- and floating-dtype indexes are considered \"compatible\". The integer values are coerced to floating point, which may result in loss of precision. See :ref:`indexing.set_ops` for more."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:493
msgid "``DataFrame`` GroupBy ffill/bfill no longer return group labels"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:495
msgid "The methods ``ffill``, ``bfill``, ``pad`` and ``backfill`` of :class:`DataFrameGroupBy <pandas.core.groupby.DataFrameGroupBy>` previously included the group labels in the return value, which was inconsistent with other groupby transforms. Now only the filled values are returned. (:issue:`21521`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:523
msgid "``DataFrame`` describe on an empty Categorical / object column will return top and freq"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:525
msgid "When calling :meth:`DataFrame.describe` with an empty categorical / object column, the 'top' and 'freq' columns were previously omitted, which was inconsistent with the output for non-empty columns. Now the 'top' and 'freq' columns will always be included, with :attr:`numpy.nan` in the case of an empty :class:`DataFrame` (:issue:`26397`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:552
msgid "``__str__`` methods now call ``__repr__`` rather than vice versa"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:554
msgid "pandas has until now mostly defined string representations in a pandas objects' ``__str__``/``__unicode__``/``__bytes__`` methods, and called ``__str__`` from the ``__repr__`` method, if a specific ``__repr__`` method is not found. This is not needed for Python3. In pandas 0.25, the string representations of pandas objects are now generally defined in ``__repr__``, and calls to ``__str__`` in general now pass the call on to the ``__repr__``, if a specific ``__str__`` method doesn't exist, as is standard for Python. This change is backward compatible for direct usage of pandas, but if you subclass pandas objects *and* give your subclasses specific ``__str__``/``__repr__`` methods, you may have to adjust your ``__str__``/``__repr__`` methods (:issue:`26495`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:568
msgid "Indexing an ``IntervalIndex`` with ``Interval`` objects"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:570
msgid "Indexing methods for :class:`IntervalIndex` have been modified to require exact matches only for :class:`Interval` queries. ``IntervalIndex`` methods previously matched on any overlapping ``Interval``.  Behavior with scalar points, e.g. querying with an integer, is unchanged (:issue:`16316`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:579
msgid "The ``in`` operator (``__contains__``) now only returns ``True`` for exact matches to ``Intervals`` in the ``IntervalIndex``, whereas this would previously return ``True`` for any ``Interval`` overlapping an ``Interval`` in the ``IntervalIndex``."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:599
msgid "The :meth:`~IntervalIndex.get_loc` method now only returns locations for exact matches to ``Interval`` queries, as opposed to the previous behavior of returning locations for overlapping matches.  A ``KeyError`` will be raised if an exact match is not found."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:623
msgid "Likewise, :meth:`~IntervalIndex.get_indexer` and :meth:`~IntervalIndex.get_indexer_non_unique` will also only return locations for exact matches to ``Interval`` queries, with ``-1`` denoting that an exact match was not found."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:626
msgid "These indexing changes extend to querying a :class:`Series` or :class:`DataFrame` with an ``IntervalIndex`` index."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:633
msgid "Selecting from a ``Series`` or ``DataFrame`` using ``[]`` (``__getitem__``) or ``loc`` now only returns exact matches for ``Interval`` queries."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:658
msgid "Similarly, a ``KeyError`` will be raised for non-exact matches instead of returning overlapping matches."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:688
msgid "The :meth:`~IntervalIndex.overlaps` method can be used to create a boolean indexer that replicates the previous behavior of returning overlapping matches."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:704
msgid "Binary ufuncs on Series now align"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:706
msgid "Applying a binary ufunc like :func:`numpy.power` now aligns the inputs when both are :class:`Series` (:issue:`23293`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:716
#: ../../source/whatsnew/v0.25.0.rst:751
msgid "*Previous behavior*"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:727
#: ../../source/whatsnew/v0.25.0.rst:765
msgid "*New behavior*"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:733
msgid "This matches the behavior of other binary operations in pandas, like :meth:`Series.add`. To retain the previous behavior, convert the other ``Series`` to an array before applying the ufunc."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:742
msgid "Categorical.argsort now places missing values at the end"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:744
msgid ":meth:`Categorical.argsort` now places missing values at the end of the array, making it consistent with NumPy and the rest of pandas (:issue:`21801`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:775
msgid "Column order is preserved when passing a list of dicts to DataFrame"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:777
msgid "Starting with Python 3.7 the key-order of ``dict`` is `guaranteed <https://mail.python.org/pipermail/python-dev/2017-December/151283.html>`_. In practice, this has been true since Python 3.6. The :class:`DataFrame` constructor now treats a list of dicts in the same way as it does a list of ``OrderedDict``, i.e. preserving the order of the dicts. This change applies only when pandas is running on Python>=3.6 (:issue:`27309`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:792
msgid "The columns were lexicographically sorted previously,"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:805
msgid "The column order now matches the insertion-order of the keys in the ``dict``, considering all the records from top to bottom. As a consequence, the column order of the resulting DataFrame has changed compared to previous pandas versions."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:816
msgid "Increased minimum versions for dependencies"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:818
msgid "Due to dropping support for Python 2.7, a number of optional dependencies have updated minimum versions (:issue:`25725`, :issue:`24942`, :issue:`25752`). Independently, some minimum supported versions of dependencies were updated (:issue:`23519`, :issue:`25554`). If installed, we now require:"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:823
#: ../../source/whatsnew/v0.25.0.rst:843
msgid "Package"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:823
#: ../../source/whatsnew/v0.25.0.rst:843
msgid "Minimum Version"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:823
msgid "Required"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:825
msgid "numpy"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:825
msgid "1.13.3"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:825
#: ../../source/whatsnew/v0.25.0.rst:827
#: ../../source/whatsnew/v0.25.0.rst:829
msgid "X"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:827
msgid "pytz"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:827
msgid "2015.4"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:829
msgid "python-dateutil"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:829
msgid "2.6.1"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:831
msgid "bottleneck"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:831
msgid "1.2.1"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:833
msgid "numexpr"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:833
msgid "2.6.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:835
msgid "pytest (dev)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:835
msgid "4.0.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:838
msgid "For `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version. The following table lists the lowest version per library that is currently being tested throughout the development of pandas. Optional libraries below the lowest tested version may still work, but are not considered supported."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:845
msgid "beautifulsoup4"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:845
msgid "4.6.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:847
msgid "fastparquet"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:847
msgid "0.2.1"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:849
msgid "gcsfs"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:849
msgid "0.2.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:851
msgid "lxml"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:851
msgid "3.8.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:853
msgid "matplotlib"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:853
msgid "2.2.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:855
msgid "openpyxl"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:855
msgid "2.4.8"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:857
msgid "pyarrow"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:857
msgid "0.9.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:859
msgid "pymysql"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:859
msgid "0.7.1"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:861
msgid "pytables"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:861
msgid "3.4.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:863
msgid "scipy"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:863
msgid "0.19.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:865
msgid "sqlalchemy"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:865
msgid "1.1.4"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:867
msgid "xarray"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:867
msgid "0.8.2"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:869
msgid "xlrd"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:869
msgid "1.1.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:871
msgid "xlsxwriter"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:871
msgid "0.9.8"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:873
msgid "xlwt"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:873
msgid "1.2.0"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:876
msgid "See :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:881
msgid "Other API changes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:883
msgid ":class:`DatetimeTZDtype` will now standardize pytz timezones to a common timezone instance (:issue:`24713`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:884
msgid ":class:`Timestamp` and :class:`Timedelta` scalars now implement the :meth:`to_numpy` method as aliases to :meth:`Timestamp.to_datetime64` and :meth:`Timedelta.to_timedelta64`, respectively. (:issue:`24653`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:885
msgid ":meth:`Timestamp.strptime` will now rise a ``NotImplementedError`` (:issue:`25016`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:886
msgid "Comparing :class:`Timestamp` with unsupported objects now returns :py:obj:`NotImplemented` instead of raising ``TypeError``. This implies that unsupported rich comparisons are delegated to the other object, and are now consistent with Python 3 behavior for ``datetime`` objects (:issue:`24011`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:887
msgid "Bug in :meth:`DatetimeIndex.snap` which didn't preserving the ``name`` of the input :class:`Index` (:issue:`25575`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:888
msgid "The ``arg`` argument in :meth:`pandas.core.groupby.DataFrameGroupBy.agg` has been renamed to ``func`` (:issue:`26089`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:889
msgid "The ``arg`` argument in :meth:`pandas.core.window._Window.aggregate` has been renamed to ``func`` (:issue:`26372`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:890
msgid "Most pandas classes had a ``__bytes__`` method, which was used for getting a python2-style bytestring representation of the object. This method has been removed as a part of dropping Python2 (:issue:`26447`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:891
msgid "The ``.str``-accessor has been disabled for 1-level :class:`MultiIndex`, use :meth:`MultiIndex.to_flat_index` if necessary (:issue:`23679`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:892
msgid "Removed support of gtk package for clipboards (:issue:`26563`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:893
msgid "Using an unsupported version of Beautiful Soup 4 will now raise an ``ImportError`` instead of a ``ValueError`` (:issue:`27063`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:894
msgid ":meth:`Series.to_excel` and :meth:`DataFrame.to_excel` will now raise a ``ValueError`` when saving timezone aware data. (:issue:`27008`, :issue:`7056`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:895
msgid ":meth:`ExtensionArray.argsort` places NA values at the end of the sorted array. (:issue:`21801`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:896
msgid ":meth:`DataFrame.to_hdf` and :meth:`Series.to_hdf` will now raise a ``NotImplementedError`` when saving a :class:`MultiIndex` with extension data types for a ``fixed`` format. (:issue:`7775`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:897
msgid "Passing duplicate ``names`` in :meth:`read_csv` will now raise a ``ValueError`` (:issue:`17346`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:902
msgid "Deprecations"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:905
msgid "Sparse subclasses"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:907
msgid "The ``SparseSeries`` and ``SparseDataFrame`` subclasses are deprecated. Their functionality is better-provided by a ``Series`` or ``DataFrame`` with sparse values."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:910
msgid "**Previous way**"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:917
msgid "**New way**"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:924
msgid "The memory usage of the two approaches is identical (:issue:`19239`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:927
msgid "msgpack format"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:929
msgid "The msgpack format is deprecated as of 0.25 and will be removed in a future version. It is recommended to use pyarrow for on-the-wire transmission of pandas objects. (:issue:`27084`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:933
msgid "Other deprecations"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:935
msgid "The deprecated ``.ix[]`` indexer now raises a more visible ``FutureWarning`` instead of ``DeprecationWarning`` (:issue:`26438`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:936
msgid "Deprecated the ``units=M`` (months) and ``units=Y`` (year) parameters for ``units`` of :func:`pandas.to_timedelta`, :func:`pandas.Timedelta` and :func:`pandas.TimedeltaIndex` (:issue:`16344`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:937
msgid ":meth:`pandas.concat` has deprecated the ``join_axes``-keyword. Instead, use :meth:`DataFrame.reindex` or :meth:`DataFrame.reindex_like` on the result or on the inputs (:issue:`21951`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:938
msgid "The :attr:`SparseArray.values` attribute is deprecated. You can use ``np.asarray(...)`` or the :meth:`SparseArray.to_dense` method instead (:issue:`26421`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:940
msgid "The functions :func:`pandas.to_datetime` and :func:`pandas.to_timedelta` have deprecated the ``box`` keyword. Instead, use :meth:`to_numpy` or :meth:`Timestamp.to_datetime64` or :meth:`Timedelta.to_timedelta64`. (:issue:`24416`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:941
msgid "The :meth:`DataFrame.compound` and :meth:`Series.compound` methods are deprecated and will be removed in a future version (:issue:`26405`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:942
msgid "The internal attributes ``_start``, ``_stop`` and ``_step`` attributes of :class:`RangeIndex` have been deprecated. Use the public attributes :attr:`~RangeIndex.start`, :attr:`~RangeIndex.stop` and :attr:`~RangeIndex.step` instead (:issue:`26581`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:944
msgid "The :meth:`Series.ftype`, :meth:`Series.ftypes` and :meth:`DataFrame.ftypes` methods are deprecated and will be removed in a future version. Instead, use :meth:`Series.dtype` and :meth:`DataFrame.dtypes` (:issue:`26705`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:946
msgid "The :meth:`Series.get_values`, :meth:`DataFrame.get_values`, :meth:`Index.get_values`, :meth:`SparseArray.get_values` and :meth:`Categorical.get_values` methods are deprecated. One of ``np.asarray(..)`` or :meth:`~Series.to_numpy` can be used instead (:issue:`19617`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:949
msgid "The 'outer' method on NumPy ufuncs, e.g. ``np.subtract.outer`` has been deprecated on :class:`Series` objects. Convert the input to an array with :attr:`Series.array` first (:issue:`27186`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:950
msgid ":meth:`Timedelta.resolution` is deprecated and replaced with :meth:`Timedelta.resolution_string`.  In a future version, :meth:`Timedelta.resolution` will be changed to behave like the standard library :attr:`datetime.timedelta.resolution` (:issue:`21344`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:951
msgid ":func:`read_table` has been undeprecated. (:issue:`25220`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:952
msgid ":attr:`Index.dtype_str` is deprecated. (:issue:`18262`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:953
msgid ":attr:`Series.imag` and :attr:`Series.real` are deprecated. (:issue:`18262`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:954
msgid ":meth:`Series.put` is deprecated. (:issue:`18262`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:955
msgid ":meth:`Index.item` and :meth:`Series.item` is deprecated. (:issue:`18262`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:956
msgid "The default value ``ordered=None`` in :class:`~pandas.api.types.CategoricalDtype` has been deprecated in favor of ``ordered=False``. When converting between categorical types ``ordered=True`` must be explicitly passed in order to be preserved. (:issue:`26336`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:957
msgid ":meth:`Index.contains` is deprecated. Use ``key in index`` (``__contains__``) instead (:issue:`17753`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:958
msgid ":meth:`DataFrame.get_dtype_counts` is deprecated. (:issue:`18262`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:959
msgid ":meth:`Categorical.ravel` will return a :class:`Categorical` instead of a ``np.ndarray`` (:issue:`27199`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:965
msgid "Removal of prior version deprecations/changes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:966
msgid "Removed ``Panel`` (:issue:`25047`, :issue:`25191`, :issue:`25231`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:967
msgid "Removed the previously deprecated ``sheetname`` keyword in :func:`read_excel` (:issue:`16442`, :issue:`20938`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:968
msgid "Removed the previously deprecated ``TimeGrouper`` (:issue:`16942`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:969
msgid "Removed the previously deprecated ``parse_cols`` keyword in :func:`read_excel` (:issue:`16488`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:970
msgid "Removed the previously deprecated ``pd.options.html.border`` (:issue:`16970`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:971
msgid "Removed the previously deprecated ``convert_objects`` (:issue:`11221`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:972
msgid "Removed the previously deprecated ``select`` method of ``DataFrame`` and ``Series`` (:issue:`17633`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:973
msgid "Removed the previously deprecated behavior of :class:`Series` treated as list-like in :meth:`~Series.cat.rename_categories` (:issue:`17982`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:974
msgid "Removed the previously deprecated ``DataFrame.reindex_axis`` and ``Series.reindex_axis`` (:issue:`17842`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:975
msgid "Removed the previously deprecated behavior of altering column or index labels with :meth:`Series.rename_axis` or :meth:`DataFrame.rename_axis` (:issue:`17842`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:976
msgid "Removed the previously deprecated ``tupleize_cols`` keyword argument in :meth:`read_html`, :meth:`read_csv`, and :meth:`DataFrame.to_csv` (:issue:`17877`, :issue:`17820`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:977
msgid "Removed the previously deprecated ``DataFrame.from.csv`` and ``Series.from_csv`` (:issue:`17812`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:978
msgid "Removed the previously deprecated ``raise_on_error`` keyword argument in :meth:`DataFrame.where` and :meth:`DataFrame.mask` (:issue:`17744`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:979
msgid "Removed the previously deprecated ``ordered`` and ``categories`` keyword arguments in ``astype`` (:issue:`17742`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:980
msgid "Removed the previously deprecated ``cdate_range`` (:issue:`17691`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:981
msgid "Removed the previously deprecated ``True`` option for the ``dropna`` keyword argument in :func:`SeriesGroupBy.nth` (:issue:`17493`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:982
msgid "Removed the previously deprecated ``convert`` keyword argument in :meth:`Series.take` and :meth:`DataFrame.take` (:issue:`17352`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:983
msgid "Removed the previously deprecated behavior of arithmetic operations with ``datetime.date`` objects (:issue:`21152`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:988
msgid "Performance improvements"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:990
#: ../../source/whatsnew/v0.25.0.rst:1242
msgid "Significant speedup in :class:`SparseArray` initialization that benefits most operations, fixing performance regression introduced in v0.20.0 (:issue:`24985`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:991
msgid ":meth:`DataFrame.to_stata()` is now faster when outputting data with any string or non-native endian columns (:issue:`25045`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:992
msgid "Improved performance of :meth:`Series.searchsorted`. The speedup is especially large when the dtype is int8/int16/int32 and the searched key is within the integer bounds for the dtype (:issue:`22034`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:994
msgid "Improved performance of :meth:`pandas.core.groupby.GroupBy.quantile` (:issue:`20405`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:995
msgid "Improved performance of slicing and other selected operation on a :class:`RangeIndex` (:issue:`26565`, :issue:`26617`, :issue:`26722`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:996
msgid ":class:`RangeIndex` now performs standard lookup without instantiating an actual hashtable, hence saving memory (:issue:`16685`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:997
msgid "Improved performance of :meth:`read_csv` by faster tokenizing and faster parsing of small float numbers (:issue:`25784`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:998
msgid "Improved performance of :meth:`read_csv` by faster parsing of N/A and boolean values (:issue:`25804`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:999
msgid "Improved performance of :attr:`IntervalIndex.is_monotonic`, :attr:`IntervalIndex.is_monotonic_increasing` and :attr:`IntervalIndex.is_monotonic_decreasing` by removing conversion to :class:`MultiIndex` (:issue:`24813`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1000
msgid "Improved performance of :meth:`DataFrame.to_csv` when writing datetime dtypes (:issue:`25708`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1001
msgid "Improved performance of :meth:`read_csv` by much faster parsing of ``MM/YYYY`` and ``DD/MM/YYYY`` datetime formats (:issue:`25922`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1002
msgid "Improved performance of nanops for dtypes that cannot store NaNs. Speedup is particularly prominent for :meth:`Series.all` and :meth:`Series.any` (:issue:`25070`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1003
msgid "Improved performance of :meth:`Series.map` for dictionary mappers on categorical series by mapping the categories instead of mapping all values (:issue:`23785`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1004
msgid "Improved performance of :meth:`IntervalIndex.intersection` (:issue:`24813`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1005
msgid "Improved performance of :meth:`read_csv` by faster concatenating date columns without extra conversion to string for integer/float zero and float ``NaN``; by faster checking the string for the possibility of being a date (:issue:`25754`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1006
msgid "Improved performance of :attr:`IntervalIndex.is_unique` by removing conversion to ``MultiIndex`` (:issue:`24813`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1007
msgid "Restored performance of :meth:`DatetimeIndex.__iter__` by re-enabling specialized code path (:issue:`26702`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1008
msgid "Improved performance when building :class:`MultiIndex` with at least one :class:`CategoricalIndex` level (:issue:`22044`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1009
msgid "Improved performance by removing the need for a garbage collect when checking for ``SettingWithCopyWarning`` (:issue:`27031`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1010
msgid "For :meth:`to_datetime` changed default value of cache parameter to ``True`` (:issue:`26043`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1011
msgid "Improved performance of :class:`DatetimeIndex` and :class:`PeriodIndex` slicing given non-unique, monotonic data (:issue:`27136`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1012
msgid "Improved performance of :meth:`pd.read_json` for index-oriented data. (:issue:`26773`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1013
msgid "Improved performance of :meth:`MultiIndex.shape` (:issue:`27384`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1018
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1022
msgid "Categorical"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1024
msgid "Bug in :func:`DataFrame.at` and :func:`Series.at` that would raise exception if the index was a :class:`CategoricalIndex` (:issue:`20629`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1025
msgid "Fixed bug in comparison of ordered :class:`Categorical` that contained missing values with a scalar which sometimes incorrectly resulted in ``True`` (:issue:`26504`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1026
msgid "Bug in :meth:`DataFrame.dropna` when the :class:`DataFrame` has a :class:`CategoricalIndex` containing :class:`Interval` objects incorrectly raised a ``TypeError`` (:issue:`25087`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1029
msgid "Datetimelike"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1031
msgid "Bug in :func:`to_datetime` which would raise an (incorrect) ``ValueError`` when called with a date far into the future and the ``format`` argument specified instead of raising ``OutOfBoundsDatetime`` (:issue:`23830`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1032
msgid "Bug in :func:`to_datetime` which would raise ``InvalidIndexError: Reindexing only valid with uniquely valued Index objects`` when called with ``cache=True``, with ``arg`` including at least two different elements from the set ``{None, numpy.nan, pandas.NaT}`` (:issue:`22305`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1033
msgid "Bug in :class:`DataFrame` and :class:`Series` where timezone aware data with ``dtype='datetime64[ns]`` was not cast to naive (:issue:`25843`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1034
msgid "Improved :class:`Timestamp` type checking in various datetime functions to prevent exceptions when using a subclassed ``datetime`` (:issue:`25851`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1035
msgid "Bug in :class:`Series` and :class:`DataFrame` repr where ``np.datetime64('NaT')`` and ``np.timedelta64('NaT')`` with ``dtype=object`` would be represented as ``NaN`` (:issue:`25445`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1036
msgid "Bug in :func:`to_datetime` which does not replace the invalid argument with ``NaT`` when error is set to coerce (:issue:`26122`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1037
msgid "Bug in adding :class:`DateOffset` with nonzero month to :class:`DatetimeIndex` would raise ``ValueError`` (:issue:`26258`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1038
msgid "Bug in :func:`to_datetime` which raises unhandled ``OverflowError`` when called with mix of invalid dates and ``NaN`` values with ``format='%Y%m%d'`` and ``error='coerce'`` (:issue:`25512`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1039
msgid "Bug in :meth:`isin` for datetimelike indexes; :class:`DatetimeIndex`, :class:`TimedeltaIndex` and :class:`PeriodIndex` where the ``levels`` parameter was ignored. (:issue:`26675`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1040
msgid "Bug in :func:`to_datetime` which raises ``TypeError`` for ``format='%Y%m%d'`` when called for invalid integer dates with length >= 6 digits with ``errors='ignore'``"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1041
msgid "Bug when comparing a :class:`PeriodIndex` against a zero-dimensional numpy array (:issue:`26689`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1042
msgid "Bug in constructing a ``Series`` or ``DataFrame`` from a numpy ``datetime64`` array with a non-ns unit and out-of-bound timestamps generating rubbish data, which will now correctly raise an ``OutOfBoundsDatetime`` error (:issue:`26206`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1043
msgid "Bug in :func:`date_range` with unnecessary ``OverflowError`` being raised for very large or very small dates (:issue:`26651`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1044
msgid "Bug where adding :class:`Timestamp` to a ``np.timedelta64`` object would raise instead of returning a :class:`Timestamp` (:issue:`24775`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1045
msgid "Bug where comparing a zero-dimensional numpy array containing a ``np.datetime64`` object to a :class:`Timestamp` would incorrect raise ``TypeError`` (:issue:`26916`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1046
msgid "Bug in :func:`to_datetime` which would raise ``ValueError: Tz-aware datetime.datetime cannot be converted to datetime64 unless utc=True`` when called with ``cache=True``, with ``arg`` including datetime strings with different offset (:issue:`26097`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1050
msgid "Timedelta"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1052
msgid "Bug in :func:`TimedeltaIndex.intersection` where for non-monotonic indices in some cases an empty ``Index`` was returned when in fact an intersection existed (:issue:`25913`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1053
msgid "Bug with comparisons between :class:`Timedelta` and ``NaT`` raising ``TypeError`` (:issue:`26039`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1054
msgid "Bug when adding or subtracting a :class:`BusinessHour` to a :class:`Timestamp` with the resulting time landing in a following or prior day respectively (:issue:`26381`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1055
msgid "Bug when comparing a :class:`TimedeltaIndex` against a zero-dimensional numpy array (:issue:`26689`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1058
msgid "Timezones"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1060
msgid "Bug in :func:`DatetimeIndex.to_frame` where timezone aware data would be converted to timezone naive data (:issue:`25809`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1061
msgid "Bug in :func:`to_datetime` with ``utc=True`` and datetime strings that would apply previously parsed UTC offsets to subsequent arguments (:issue:`24992`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1062
msgid "Bug in :func:`Timestamp.tz_localize` and :func:`Timestamp.tz_convert` does not propagate ``freq`` (:issue:`25241`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1063
msgid "Bug in :func:`Series.at` where setting :class:`Timestamp` with timezone raises ``TypeError`` (:issue:`25506`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1064
msgid "Bug in :func:`DataFrame.update` when updating with timezone aware data would return timezone naive data (:issue:`25807`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1065
msgid "Bug in :func:`to_datetime` where an uninformative ``RuntimeError`` was raised when passing a naive :class:`Timestamp` with datetime strings with mixed UTC offsets (:issue:`25978`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1066
msgid "Bug in :func:`to_datetime` with ``unit='ns'`` would drop timezone information from the parsed argument (:issue:`26168`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1067
msgid "Bug in :func:`DataFrame.join` where joining a timezone aware index with a timezone aware column would result in a column of ``NaN`` (:issue:`26335`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1068
msgid "Bug in :func:`date_range` where ambiguous or nonexistent start or end times were not handled by the ``ambiguous`` or ``nonexistent`` keywords respectively (:issue:`27088`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1069
msgid "Bug in :meth:`DatetimeIndex.union` when combining a timezone aware and timezone unaware :class:`DatetimeIndex` (:issue:`21671`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1070
msgid "Bug when applying a numpy reduction function (e.g. :meth:`numpy.minimum`) to a timezone aware :class:`Series` (:issue:`15552`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1073
msgid "Numeric"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1075
msgid "Bug in :meth:`to_numeric` in which large negative numbers were being improperly handled (:issue:`24910`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1076
msgid "Bug in :meth:`to_numeric` in which numbers were being coerced to float, even though ``errors`` was not ``coerce`` (:issue:`24910`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1077
msgid "Bug in :meth:`to_numeric` in which invalid values for ``errors`` were being allowed (:issue:`26466`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1078
msgid "Bug in :class:`format` in which floating point complex numbers were not being formatted to proper display precision and trimming (:issue:`25514`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1079
msgid "Bug in error messages in :meth:`DataFrame.corr` and :meth:`Series.corr`. Added the possibility of using a callable. (:issue:`25729`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1080
msgid "Bug in :meth:`Series.divmod` and :meth:`Series.rdivmod` which would raise an (incorrect) ``ValueError`` rather than return a pair of :class:`Series` objects as result (:issue:`25557`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1081
msgid "Raises a helpful exception when a non-numeric index is sent to :meth:`interpolate` with methods which require numeric index. (:issue:`21662`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1082
msgid "Bug in :meth:`~pandas.eval` when comparing floats with scalar operators, for example: ``x < -0.1`` (:issue:`25928`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1083
msgid "Fixed bug where casting all-boolean array to integer extension array failed (:issue:`25211`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1084
msgid "Bug in ``divmod`` with a :class:`Series` object containing zeros incorrectly raising ``AttributeError`` (:issue:`26987`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1085
msgid "Inconsistency in :class:`Series` floor-division (`//`) and ``divmod`` filling positive//zero with ``NaN`` instead of ``Inf`` (:issue:`27321`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1089
msgid "Conversion"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1091
msgid "Bug in :func:`DataFrame.astype()` when passing a dict of columns and types the ``errors`` parameter was ignored. (:issue:`25905`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1095
msgid "Strings"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1097
msgid "Bug in the ``__name__`` attribute of several methods of :class:`Series.str`, which were set incorrectly (:issue:`23551`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1098
msgid "Improved error message when passing :class:`Series` of wrong dtype to :meth:`Series.str.cat` (:issue:`22722`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1103
msgid "Interval"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1105
msgid "Construction of :class:`Interval` is restricted to numeric, :class:`Timestamp` and :class:`Timedelta` endpoints (:issue:`23013`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1106
msgid "Fixed bug in :class:`Series`/:class:`DataFrame` not displaying ``NaN`` in :class:`IntervalIndex` with missing values (:issue:`25984`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1107
msgid "Bug in :meth:`IntervalIndex.get_loc` where a ``KeyError`` would be incorrectly raised for a decreasing :class:`IntervalIndex` (:issue:`25860`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1108
msgid "Bug in :class:`Index` constructor where passing mixed closed :class:`Interval` objects would result in a ``ValueError`` instead of an ``object`` dtype ``Index`` (:issue:`27172`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1111
msgid "Indexing"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1113
msgid "Improved exception message when calling :meth:`DataFrame.iloc` with a list of non-numeric objects (:issue:`25753`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1114
msgid "Improved exception message when calling ``.iloc`` or ``.loc`` with a boolean indexer with different length (:issue:`26658`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1115
msgid "Bug in ``KeyError`` exception message when indexing a :class:`MultiIndex` with a non-existent key not displaying the original key (:issue:`27250`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1116
msgid "Bug in ``.iloc`` and ``.loc`` with a boolean indexer not raising an ``IndexError`` when too few items are passed (:issue:`26658`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1117
msgid "Bug in :meth:`DataFrame.loc` and :meth:`Series.loc` where ``KeyError`` was not raised for a ``MultiIndex`` when the key was less than or equal to the number of levels in the :class:`MultiIndex` (:issue:`14885`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1118
msgid "Bug in which :meth:`DataFrame.append` produced an erroneous warning indicating that a ``KeyError`` will be thrown in the future when the data to be appended contains new columns (:issue:`22252`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1119
msgid "Bug in which :meth:`DataFrame.to_csv` caused a segfault for a reindexed data frame, when the indices were single-level :class:`MultiIndex` (:issue:`26303`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1120
msgid "Fixed bug where assigning a :class:`arrays.PandasArray` to a :class:`pandas.core.frame.DataFrame` would raise error (:issue:`26390`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1121
msgid "Allow keyword arguments for callable local reference used in the :meth:`DataFrame.query` string (:issue:`26426`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1122
msgid "Fixed a ``KeyError`` when indexing a :class:`MultiIndex` level with a list containing exactly one label, which is missing (:issue:`27148`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1123
msgid "Bug which produced ``AttributeError`` on partial matching :class:`Timestamp` in a :class:`MultiIndex`  (:issue:`26944`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1124
msgid "Bug in :class:`Categorical` and  :class:`CategoricalIndex` with :class:`Interval` values when using the ``in`` operator (``__contains``) with objects that are not comparable to the values in the ``Interval`` (:issue:`23705`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1125
msgid "Bug in :meth:`DataFrame.loc` and :meth:`DataFrame.iloc` on a :class:`DataFrame` with a single timezone-aware datetime64[ns] column incorrectly returning a scalar instead of a :class:`Series` (:issue:`27110`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1126
msgid "Bug in :class:`CategoricalIndex` and :class:`Categorical` incorrectly raising ``ValueError`` instead of ``TypeError`` when a list is passed using the ``in`` operator (``__contains__``) (:issue:`21729`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1127
msgid "Bug in setting a new value in a :class:`Series` with a :class:`Timedelta` object incorrectly casting the value to an integer (:issue:`22717`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1128
msgid "Bug in :class:`Series` setting a new key (``__setitem__``) with a timezone-aware datetime incorrectly raising ``ValueError`` (:issue:`12862`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1129
msgid "Bug in :meth:`DataFrame.iloc` when indexing with a read-only indexer (:issue:`17192`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1130
msgid "Bug in :class:`Series` setting an existing tuple key (``__setitem__``) with timezone-aware datetime values incorrectly raising ``TypeError`` (:issue:`20441`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1133
msgid "Missing"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1135
msgid "Fixed misleading exception message in :meth:`Series.interpolate` if argument ``order`` is required, but omitted (:issue:`10633`, :issue:`24014`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1136
msgid "Fixed class type displayed in exception message in :meth:`DataFrame.dropna` if invalid ``axis`` parameter passed (:issue:`25555`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1137
msgid "A ``ValueError`` will now be thrown by :meth:`DataFrame.fillna` when ``limit`` is not a positive integer (:issue:`27042`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1141
msgid "MultiIndex"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1143
msgid "Bug in which incorrect exception raised by :class:`Timedelta` when testing the membership of :class:`MultiIndex` (:issue:`24570`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1147
msgid "IO"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1149
msgid "Bug in :func:`DataFrame.to_html()` where values were truncated using display options instead of outputting the full content (:issue:`17004`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1150
msgid "Fixed bug in missing text when using :meth:`to_clipboard` if copying utf-16 characters in Python 3 on Windows (:issue:`25040`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1151
msgid "Bug in :func:`read_json` for ``orient='table'`` when it tries to infer dtypes by default, which is not applicable as dtypes are already defined in the JSON schema (:issue:`21345`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1152
msgid "Bug in :func:`read_json` for ``orient='table'`` and float index, as it infers index dtype by default, which is not applicable because index dtype is already defined in the JSON schema (:issue:`25433`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1153
msgid "Bug in :func:`read_json` for ``orient='table'`` and string of float column names, as it makes a column name type conversion to :class:`Timestamp`, which is not applicable because column names are already defined in the JSON schema (:issue:`25435`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1154
msgid "Bug in :func:`json_normalize` for ``errors='ignore'`` where missing values in the input data, were filled in resulting ``DataFrame`` with the string ``\"nan\"`` instead of ``numpy.nan`` (:issue:`25468`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1155
msgid ":meth:`DataFrame.to_html` now raises ``TypeError`` when using an invalid type for the ``classes`` parameter instead of ``AssertionError`` (:issue:`25608`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1156
msgid "Bug in :meth:`DataFrame.to_string` and :meth:`DataFrame.to_latex` that would lead to incorrect output when the ``header`` keyword is used (:issue:`16718`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1157
msgid "Bug in :func:`read_csv` not properly interpreting the UTF8 encoded filenames on Windows on Python 3.6+ (:issue:`15086`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1158
msgid "Improved performance in :meth:`pandas.read_stata` and :class:`pandas.io.stata.StataReader` when converting columns that have missing values (:issue:`25772`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1159
msgid "Bug in :meth:`DataFrame.to_html` where header numbers would ignore display options when rounding (:issue:`17280`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1160
msgid "Bug in :func:`read_hdf` where reading a table from an HDF5 file written directly with PyTables fails with a ``ValueError`` when using a sub-selection via the ``start`` or ``stop`` arguments (:issue:`11188`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1161
msgid "Bug in :func:`read_hdf` not properly closing store after a ``KeyError`` is raised (:issue:`25766`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1162
msgid "Improved the explanation for the failure when value labels are repeated in Stata dta files and suggested work-arounds (:issue:`25772`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1163
msgid "Improved :meth:`pandas.read_stata` and :class:`pandas.io.stata.StataReader` to read incorrectly formatted 118 format files saved by Stata (:issue:`25960`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1164
msgid "Improved the ``col_space`` parameter in :meth:`DataFrame.to_html` to accept a string so CSS length values can be set correctly (:issue:`25941`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1165
msgid "Fixed bug in loading objects from S3 that contain ``#`` characters in the URL (:issue:`25945`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1166
msgid "Adds ``use_bqstorage_api`` parameter to :func:`read_gbq` to speed up downloads of large data frames. This feature requires version 0.10.0 of the ``pandas-gbq`` library as well as the ``google-cloud-bigquery-storage`` and ``fastavro`` libraries. (:issue:`26104`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1167
msgid "Fixed memory leak in :meth:`DataFrame.to_json` when dealing with numeric data (:issue:`24889`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1168
msgid "Bug in :func:`read_json` where date strings with ``Z`` were not converted to a UTC timezone (:issue:`26168`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1169
msgid "Added ``cache_dates=True`` parameter to :meth:`read_csv`, which allows to cache unique dates when they are parsed (:issue:`25990`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1170
msgid ":meth:`DataFrame.to_excel` now raises a ``ValueError`` when the caller's dimensions exceed the limitations of Excel (:issue:`26051`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1171
msgid "Fixed bug in :func:`pandas.read_csv` where a BOM would result in incorrect parsing using engine='python' (:issue:`26545`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1172
msgid ":func:`read_excel` now raises a ``ValueError`` when input is of type :class:`pandas.io.excel.ExcelFile` and ``engine`` param is passed since :class:`pandas.io.excel.ExcelFile` has an engine defined (:issue:`26566`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1173
msgid "Bug while selecting from :class:`HDFStore` with ``where=''`` specified (:issue:`26610`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1174
msgid "Fixed bug in :func:`DataFrame.to_excel()` where custom objects (i.e. ``PeriodIndex``) inside merged cells were not being converted into types safe for the Excel writer (:issue:`27006`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1175
msgid "Bug in :meth:`read_hdf` where reading a timezone aware :class:`DatetimeIndex` would raise a ``TypeError`` (:issue:`11926`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1176
msgid "Bug in :meth:`to_msgpack` and :meth:`read_msgpack` which would raise a ``ValueError`` rather than a ``FileNotFoundError`` for an invalid path (:issue:`27160`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1177
msgid "Fixed bug in :meth:`DataFrame.to_parquet` which would raise a ``ValueError`` when the dataframe had no columns (:issue:`27339`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1178
msgid "Allow parsing of :class:`PeriodDtype` columns when using :func:`read_csv` (:issue:`26934`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1181
msgid "Plotting"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1183
msgid "Fixed bug where :class:`api.extensions.ExtensionArray` could not be used in matplotlib plotting (:issue:`25587`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1184
msgid "Bug in an error message in :meth:`DataFrame.plot`. Improved the error message if non-numerics are passed to :meth:`DataFrame.plot` (:issue:`25481`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1185
msgid "Bug in incorrect ticklabel positions when plotting an index that are non-numeric / non-datetime (:issue:`7612`, :issue:`15912`, :issue:`22334`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1186
msgid "Fixed bug causing plots of :class:`PeriodIndex` timeseries to fail if the frequency is a multiple of the frequency rule code (:issue:`14763`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1187
msgid "Fixed bug when plotting a :class:`DatetimeIndex` with ``datetime.timezone.utc`` timezone (:issue:`17173`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1191
msgid "GroupBy/resample/rolling"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1193
msgid "Bug in :meth:`pandas.core.resample.Resampler.agg` with a timezone aware index where ``OverflowError`` would raise when passing a list of functions (:issue:`22660`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1194
msgid "Bug in :meth:`pandas.core.groupby.DataFrameGroupBy.nunique` in which the names of column levels were lost (:issue:`23222`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1195
msgid "Bug in :func:`pandas.core.groupby.GroupBy.agg` when applying an aggregation function to timezone aware data (:issue:`23683`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1196
msgid "Bug in :func:`pandas.core.groupby.GroupBy.first` and :func:`pandas.core.groupby.GroupBy.last` where timezone information would be dropped (:issue:`21603`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1197
msgid "Bug in :func:`pandas.core.groupby.GroupBy.size` when grouping only NA values (:issue:`23050`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1198
msgid "Bug in :func:`Series.groupby` where ``observed`` kwarg was previously ignored (:issue:`24880`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1199
msgid "Bug in :func:`Series.groupby` where using ``groupby`` with a :class:`MultiIndex` Series with a list of labels equal to the length of the series caused incorrect grouping (:issue:`25704`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1200
msgid "Ensured that ordering of outputs in ``groupby`` aggregation functions is consistent across all versions of Python (:issue:`25692`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1201
msgid "Ensured that result group order is correct when grouping on an ordered ``Categorical`` and specifying ``observed=True`` (:issue:`25871`, :issue:`25167`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1202
msgid "Bug in :meth:`pandas.core.window.Rolling.min` and :meth:`pandas.core.window.Rolling.max` that caused a memory leak (:issue:`25893`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1203
msgid "Bug in :meth:`pandas.core.window.Rolling.count` and ``pandas.core.window.Expanding.count`` was previously ignoring the ``axis`` keyword (:issue:`13503`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1204
msgid "Bug in :meth:`pandas.core.groupby.GroupBy.idxmax` and :meth:`pandas.core.groupby.GroupBy.idxmin` with datetime column would return incorrect dtype (:issue:`25444`, :issue:`15306`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1205
msgid "Bug in :meth:`pandas.core.groupby.GroupBy.cumsum`, :meth:`pandas.core.groupby.GroupBy.cumprod`, :meth:`pandas.core.groupby.GroupBy.cummin` and :meth:`pandas.core.groupby.GroupBy.cummax` with categorical column having absent categories, would return incorrect result or segfault (:issue:`16771`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1206
msgid "Bug in :meth:`pandas.core.groupby.GroupBy.nth` where NA values in the grouping would return incorrect results (:issue:`26011`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1207
msgid "Bug in :meth:`pandas.core.groupby.SeriesGroupBy.transform` where transforming an empty group would raise a ``ValueError`` (:issue:`26208`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1208
msgid "Bug in :meth:`pandas.core.frame.DataFrame.groupby` where passing a :class:`pandas.core.groupby.grouper.Grouper` would return incorrect groups when using the ``.groups`` accessor (:issue:`26326`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1209
msgid "Bug in :meth:`pandas.core.groupby.GroupBy.agg` where incorrect results are returned for uint64 columns. (:issue:`26310`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1210
msgid "Bug in :meth:`pandas.core.window.Rolling.median` and :meth:`pandas.core.window.Rolling.quantile` where MemoryError is raised with empty window (:issue:`26005`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1211
msgid "Bug in :meth:`pandas.core.window.Rolling.median` and :meth:`pandas.core.window.Rolling.quantile` where incorrect results are returned with ``closed='left'`` and ``closed='neither'`` (:issue:`26005`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1212
msgid "Improved :class:`pandas.core.window.Rolling`, :class:`pandas.core.window.Window` and :class:`pandas.core.window.ExponentialMovingWindow` functions to exclude nuisance columns from results instead of raising errors and raise a ``DataError`` only if all columns are nuisance (:issue:`12537`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1213
msgid "Bug in :meth:`pandas.core.window.Rolling.max` and :meth:`pandas.core.window.Rolling.min` where incorrect results are returned with an empty variable window (:issue:`26005`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1214
msgid "Raise a helpful exception when an unsupported weighted window function is used as an argument of :meth:`pandas.core.window.Window.aggregate` (:issue:`26597`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1217
msgid "Reshaping"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1219
msgid "Bug in :func:`pandas.merge` adds a string of ``None``, if ``None`` is assigned in suffixes instead of remain the column name as-is (:issue:`24782`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1220
msgid "Bug in :func:`merge` when merging by index name would sometimes result in an incorrectly numbered index (missing index values are now assigned NA) (:issue:`24212`, :issue:`25009`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1221
msgid ":func:`to_records` now accepts dtypes to its ``column_dtypes`` parameter (:issue:`24895`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1222
msgid "Bug in :func:`concat` where order of ``OrderedDict`` (and ``dict`` in Python 3.6+) is not respected, when passed in as  ``objs`` argument (:issue:`21510`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1223
msgid "Bug in :func:`pivot_table` where columns with ``NaN`` values are dropped even if ``dropna`` argument is ``False``, when the ``aggfunc`` argument contains a ``list`` (:issue:`22159`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1224
msgid "Bug in :func:`concat` where the resulting ``freq`` of two :class:`DatetimeIndex` with the same ``freq`` would be dropped (:issue:`3232`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1225
msgid "Bug in :func:`merge` where merging with equivalent Categorical dtypes was raising an error (:issue:`22501`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1226
msgid "bug in :class:`DataFrame` instantiating with a dict of iterators or generators (e.g. ``pd.DataFrame({'A': reversed(range(3))})``) raised an error (:issue:`26349`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1227
msgid "Bug in :class:`DataFrame` instantiating with a ``range`` (e.g. ``pd.DataFrame(range(3))``) raised an error (:issue:`26342`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1228
msgid "Bug in :class:`DataFrame` constructor when passing non-empty tuples would cause a segmentation fault (:issue:`25691`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1229
msgid "Bug in :func:`Series.apply` failed when the series is a timezone aware :class:`DatetimeIndex` (:issue:`25959`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1230
msgid "Bug in :func:`pandas.cut` where large bins could incorrectly raise an error due to an integer overflow (:issue:`26045`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1231
msgid "Bug in :func:`DataFrame.sort_index` where an error is thrown when a multi-indexed ``DataFrame`` is sorted on all levels with the initial level sorted last (:issue:`26053`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1232
msgid "Bug in :meth:`Series.nlargest` treats ``True`` as smaller than ``False`` (:issue:`26154`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1233
msgid "Bug in :func:`DataFrame.pivot_table` with a :class:`IntervalIndex` as pivot index would raise ``TypeError`` (:issue:`25814`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1234
msgid "Bug in which :meth:`DataFrame.from_dict` ignored order of ``OrderedDict`` when ``orient='index'`` (:issue:`8425`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1235
msgid "Bug in :meth:`DataFrame.transpose` where transposing a DataFrame with a timezone-aware datetime column would incorrectly raise ``ValueError`` (:issue:`26825`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1236
msgid "Bug in :func:`pivot_table` when pivoting a timezone aware column as the ``values`` would remove timezone information (:issue:`14948`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1237
msgid "Bug in :func:`merge_asof` when specifying multiple ``by`` columns where one is ``datetime64[ns, tz]`` dtype (:issue:`26649`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1240
msgid "Sparse"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1243
msgid "Bug in :class:`SparseFrame` constructor where passing ``None`` as the data would cause ``default_fill_value`` to be ignored (:issue:`16807`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1244
msgid "Bug in :class:`SparseDataFrame` when adding a column in which the length of values does not match length of index, ``AssertionError`` is raised instead of raising ``ValueError`` (:issue:`25484`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1245
msgid "Introduce a better error message in :meth:`Series.sparse.from_coo` so it returns a ``TypeError`` for inputs that are not coo matrices (:issue:`26554`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1246
msgid "Bug in :func:`numpy.modf` on a :class:`SparseArray`. Now a tuple of :class:`SparseArray` is returned (:issue:`26946`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1250
msgid "Build changes"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1252
msgid "Fix install error with PyPy on macOS (:issue:`26536`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1255
msgid "ExtensionArray"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1257
msgid "Bug in :func:`factorize` when passing an ``ExtensionArray`` with a custom ``na_sentinel`` (:issue:`25696`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1258
msgid ":meth:`Series.count` miscounts NA values in ExtensionArrays (:issue:`26835`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1259
msgid "Added ``Series.__array_ufunc__`` to better handle NumPy ufuncs applied to Series backed by extension arrays (:issue:`23293`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1260
msgid "Keyword argument ``deep`` has been removed from :meth:`ExtensionArray.copy` (:issue:`27083`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1263
msgid "Other"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1265
msgid "Removed unused C functions from vendored UltraJSON implementation (:issue:`26198`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1266
msgid "Allow :class:`Index` and :class:`RangeIndex` to be passed to numpy ``min`` and ``max`` functions (:issue:`26125`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1267
msgid "Use actual class name in repr of empty objects of a ``Series`` subclass (:issue:`27001`)."
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1268
msgid "Bug in :class:`DataFrame` where passing an object array of timezone-aware ``datetime`` objects would incorrectly raise ``ValueError`` (:issue:`13287`)"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1273
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v0.25.0.rst:1275
msgid "A total of 231 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
