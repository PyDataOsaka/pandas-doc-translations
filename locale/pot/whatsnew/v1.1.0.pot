# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v1.1.0.rst:4
msgid "What's new in 1.1.0 (July 28, 2020)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:6
msgid "These are the changes in pandas 1.1.0. See :ref:`release` for a full changelog including other versions of pandas."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:9
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:14
msgid "Enhancements"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:19
msgid "KeyErrors raised by loc specify missing labels"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:20
msgid "Previously, if labels were missing for a ``.loc`` call, a KeyError was raised stating that this was no longer supported."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:22
msgid "Now the error message also includes a list of the missing labels (max 10 items, display width 80 characters). See :issue:`34272`."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:28
msgid "All dtypes can now be converted to ``StringDtype``"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:30
msgid "Previously, declaring or converting to :class:`StringDtype` was in general only possible if the data was already only ``str`` or nan-like (:issue:`31204`). :class:`StringDtype` now works in all situations where ``astype(str)`` or ``dtype=str`` work:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:33
msgid "For example, the below now works:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:46
msgid "Non-monotonic PeriodIndex partial string slicing"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:48
msgid ":class:`PeriodIndex` now supports partial string slicing for non-monotonic indexes, mirroring :class:`DatetimeIndex` behavior (:issue:`31096`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:50
#: ../../source/whatsnew/v1.1.0.rst:182
#: ../../source/whatsnew/v1.1.0.rst:204
msgid "For example:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:70
msgid "Comparing two ``DataFrame`` or two ``Series`` and summarizing the differences"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:72
msgid "We've added :meth:`DataFrame.compare` and :meth:`Series.compare` for comparing two ``DataFrame`` or two ``Series`` (:issue:`30429`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:97
msgid "See :ref:`User Guide <merging.compare>` for more details."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:103
msgid "Allow NA in groupby key"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:105
msgid "With :ref:`groupby <groupby.dropna>` , we've added a ``dropna`` keyword to :meth:`DataFrame.groupby` and :meth:`Series.groupby` in order to allow ``NA`` values in group keys. Users can define ``dropna`` to ``False`` if they want to include ``NA`` values in groupby keys. The default is set to ``True`` for ``dropna`` to keep backwards compatibility (:issue:`3729`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:125
msgid "The default setting of ``dropna`` argument is ``True`` which means ``NA`` are not included in group keys."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:131
msgid "Sorting with keys"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:133
msgid "We've added a ``key`` argument to the :class:`DataFrame` and :class:`Series` sorting methods, including :meth:`DataFrame.sort_values`, :meth:`DataFrame.sort_index`, :meth:`Series.sort_values`, and :meth:`Series.sort_index`. The ``key`` can be any callable function which is applied column-by-column to each column used for sorting, before sorting is performed (:issue:`27237`). See :ref:`sort_values with keys <basics.sort_value_key>` and :ref:`sort_index with keys <basics.sort_index_key>` for more information."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:150
msgid "Note how this is sorted with capital letters first. If we apply the :meth:`Series.str.lower` method, we get"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:158
msgid "When applied to a ``DataFrame``, they key is applied per-column to all columns or a subset if ``by`` is specified, e.g."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:172
msgid "For more details, see examples and documentation in :meth:`DataFrame.sort_values`, :meth:`Series.sort_values`, and :meth:`~DataFrame.sort_index`."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:178
msgid "Fold argument support in Timestamp constructor"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:180
msgid ":class:`Timestamp:` now supports the keyword-only fold argument according to `PEP 495 <https://www.python.org/dev/peps/pep-0495/#the-fold-attribute>`_ similar to parent ``datetime.datetime`` class. It supports both accepting fold as an initialization argument and inferring fold from other constructor arguments (:issue:`25057`, :issue:`31338`). Support is limited to ``dateutil`` timezones as ``pytz`` doesn't support fold."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:195
msgid "For more on working with fold, see :ref:`Fold subsection <timeseries.fold>` in the user guide."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:200
msgid "Parsing timezone-aware format with different timezones in to_datetime"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:202
msgid ":func:`to_datetime` now supports parsing formats containing timezone names (``%Z``) and UTC offsets (``%z``) from different timezones then converting them to UTC by setting ``utc=True``. This would return a :class:`DatetimeIndex` with timezone at UTC as opposed to an :class:`Index` with ``object`` dtype if ``utc=True`` is not set (:issue:`32792`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:223
msgid "Grouper and resample now supports the arguments origin and offset"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:225
msgid ":class:`Grouper` and :meth:`DataFrame.resample` now supports the arguments ``origin`` and ``offset``. It let the user control the timestamp on which to adjust the grouping. (:issue:`31809`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:227
msgid "The bins of the grouping are adjusted based on the beginning of the day of the time series starting point. This works well with frequencies that are multiples of a day (like ``30D``) or that divides a day (like ``90s`` or ``1min``). But it can create inconsistencies with some frequencies that do not meet this criteria. To change this behavior you can now specify a fixed timestamp with the argument ``origin``."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:229
msgid "Two arguments are now deprecated (more information in the documentation of :meth:`DataFrame.resample`):"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:231
msgid "``base`` should be replaced by ``offset``."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:232
msgid "``loffset`` should be replaced by directly adding an offset to the index :class:`DataFrame` after being resampled."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:234
msgid "Small example of the use of ``origin``:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:244
msgid "Resample with the default behavior ``'start_day'`` (origin is ``2000-10-01 00:00:00``):"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:251
msgid "Resample using a fixed origin:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:258
msgid "If needed you can adjust the bins with the argument ``offset`` (a :class:`Timedelta`) that would be added to the default ``origin``."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:260
msgid "For a full example, see: :ref:`timeseries.adjust-the-start-of-the-bins`."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:263
msgid "fsspec now used for filesystem handling"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:265
msgid "For reading and writing to filesystems other than local and reading from HTTP(S), the optional dependency ``fsspec`` will be used to dispatch operations (:issue:`33452`). This will give unchanged functionality for S3 and GCS storage, which were already supported, but also add support for several other storage implementations such as `Azure Datalake and Blob`_, SSH, FTP, dropbox and github. For docs and capabilities, see the `fsspec docs`_."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:272
msgid "The existing capability to interface with S3 and GCS will be unaffected by this change, as ``fsspec`` will still bring in the same packages as before."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:282
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:284
msgid "Compatibility with matplotlib 3.3.0 (:issue:`34850`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:285
msgid ":meth:`IntegerArray.astype` now supports ``datetime64`` dtype (:issue:`32538`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:286
msgid ":class:`IntegerArray` now implements the ``sum`` operation (:issue:`33172`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:287
msgid "Added :class:`pandas.errors.InvalidIndexError` (:issue:`34570`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:288
msgid "Added :meth:`DataFrame.value_counts` (:issue:`5377`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:289
msgid "Added a :func:`pandas.api.indexers.FixedForwardWindowIndexer` class to support forward-looking windows during ``rolling`` operations."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:290
msgid "Added a :func:`pandas.api.indexers.VariableOffsetWindowIndexer` class to support ``rolling`` operations with non-fixed offsets (:issue:`34994`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:291
msgid ":meth:`~DataFrame.describe` now includes a ``datetime_is_numeric`` keyword to control how datetime columns are summarized (:issue:`30164`, :issue:`34798`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:292
msgid ":class:`~pandas.io.formats.style.Styler` may now render CSS more efficiently where multiple cells have the same styling (:issue:`30876`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:293
msgid ":meth:`~pandas.io.formats.style.Styler.highlight_null` now accepts ``subset`` argument (:issue:`31345`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:294
msgid "When writing directly to a sqlite connection :meth:`DataFrame.to_sql` now supports the ``multi`` method (:issue:`29921`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:295
msgid ":class:`pandas.errors.OptionError` is now exposed in ``pandas.errors`` (:issue:`27553`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:296
msgid "Added :meth:`api.extensions.ExtensionArray.argmax` and :meth:`api.extensions.ExtensionArray.argmin` (:issue:`24382`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:297
msgid ":func:`timedelta_range` will now infer a frequency when passed ``start``, ``stop``, and ``periods`` (:issue:`32377`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:298
msgid "Positional slicing on a :class:`IntervalIndex` now supports slices with ``step > 1`` (:issue:`31658`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:299
msgid ":class:`Series.str` now has a ``fullmatch`` method that matches a regular expression against the entire string in each row of the :class:`Series`, similar to ``re.fullmatch`` (:issue:`32806`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:300
msgid ":meth:`DataFrame.sample` will now also allow array-like and BitGenerator objects to be passed to ``random_state`` as seeds (:issue:`32503`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:301
msgid ":meth:`Index.union` will now raise ``RuntimeWarning`` for :class:`MultiIndex` objects if the object inside are unsortable. Pass ``sort=False`` to suppress this warning (:issue:`33015`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:302
msgid "Added :meth:`Series.dt.isocalendar` and :meth:`DatetimeIndex.isocalendar` that returns a :class:`DataFrame` with year, week, and day calculated according to the ISO 8601 calendar (:issue:`33206`, :issue:`34392`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:303
msgid "The :meth:`DataFrame.to_feather` method now supports additional keyword arguments (e.g. to set the compression) that are added in pyarrow 0.17 (:issue:`33422`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:306
msgid "The :func:`cut` will now accept parameter ``ordered`` with default ``ordered=True``. If ``ordered=False`` and no labels are provided, an error will be raised (:issue:`33141`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:307
msgid ":meth:`DataFrame.to_csv`, :meth:`DataFrame.to_pickle`, and :meth:`DataFrame.to_json` now support passing a dict of compression arguments when using the ``gzip`` and ``bz2`` protocols. This can be used to set a custom compression level, e.g., ``df.to_csv(path, compression={'method': 'gzip', 'compresslevel': 1}`` (:issue:`33196`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:313
msgid ":meth:`melt` has gained an ``ignore_index`` (default ``True``) argument that, if set to ``False``, prevents the method from dropping the index (:issue:`17440`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:314
msgid ":meth:`Series.update` now accepts objects that can be coerced to a :class:`Series`, such as ``dict`` and ``list``, mirroring the behavior of :meth:`DataFrame.update` (:issue:`33215`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:316
msgid ":meth:`~pandas.core.groupby.DataFrameGroupBy.transform` and :meth:`~pandas.core.groupby.DataFrameGroupBy.aggregate` have gained ``engine`` and ``engine_kwargs`` arguments that support executing functions with ``Numba`` (:issue:`32854`, :issue:`33388`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:317
msgid ":meth:`~pandas.core.resample.Resampler.interpolate` now supports SciPy interpolation method :class:`scipy.interpolate.CubicSpline` as method ``cubicspline`` (:issue:`33670`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:318
msgid ":class:`~pandas.core.groupby.DataFrameGroupBy` and :class:`~pandas.core.groupby.SeriesGroupBy` now implement the ``sample`` method for doing random sampling within groups (:issue:`31775`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:319
msgid ":meth:`DataFrame.to_numpy` now supports the ``na_value`` keyword to control the NA sentinel in the output array (:issue:`33820`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:320
msgid "Added :class:`api.extension.ExtensionArray.equals` to the extension array interface, similar to :meth:`Series.equals` (:issue:`27081`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:321
msgid "The minimum supported dta version has increased to 105 in :func:`read_stata` and :class:`~pandas.io.stata.StataReader`  (:issue:`26667`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:322
msgid ":meth:`~DataFrame.to_stata` supports compression using the ``compression`` keyword argument. Compression can either be inferred or explicitly set using a string or a dictionary containing both the method and any additional arguments that are passed to the compression library. Compression was also added to the low-level Stata-file writers :class:`~pandas.io.stata.StataWriter`, :class:`~pandas.io.stata.StataWriter117`, and :class:`~pandas.io.stata.StataWriterUTF8` (:issue:`26599`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:328
msgid ":meth:`HDFStore.put` now accepts a ``track_times`` parameter. This parameter is passed to the ``create_table`` method of ``PyTables`` (:issue:`32682`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:329
msgid ":meth:`Series.plot` and :meth:`DataFrame.plot` now accepts ``xlabel`` and ``ylabel`` parameters to present labels on x and y axis (:issue:`9093`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:330
msgid "Made :class:`pandas.core.window.rolling.Rolling` and :class:`pandas.core.window.expanding.Expanding` iterable（:issue:`11704`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:331
msgid "Made ``option_context`` a :class:`contextlib.ContextDecorator`, which allows it to be used as a decorator over an entire function (:issue:`34253`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:332
msgid ":meth:`DataFrame.to_csv` and :meth:`Series.to_csv` now accept an ``errors`` argument (:issue:`22610`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:333
msgid ":meth:`~pandas.core.groupby.DataFrameGroupBy.groupby.transform` now allows ``func`` to be ``pad``, ``backfill`` and ``cumcount`` (:issue:`31269`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:334
msgid ":func:`read_json` now accepts an ``nrows`` parameter. (:issue:`33916`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:335
msgid ":meth:`DataFrame.hist`, :meth:`Series.hist`, :meth:`core.groupby.DataFrameGroupBy.hist`, and :meth:`core.groupby.SeriesGroupBy.hist` have gained the ``legend`` argument. Set to True to show a legend in the histogram. (:issue:`6279`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:336
msgid ":func:`concat` and :meth:`~DataFrame.append` now preserve extension dtypes, for example combining a nullable integer column with a numpy integer column will no longer result in object dtype but preserve the integer dtype (:issue:`33607`, :issue:`34339`, :issue:`34095`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:339
msgid ":func:`read_gbq` now allows to disable progress bar (:issue:`33360`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:340
msgid ":func:`read_gbq` now supports the ``max_results`` kwarg from ``pandas-gbq`` (:issue:`34639`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:341
msgid ":meth:`DataFrame.cov` and :meth:`Series.cov` now support a new parameter ``ddof`` to support delta degrees of freedom as in the corresponding numpy methods (:issue:`34611`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:342
msgid ":meth:`DataFrame.to_html` and :meth:`DataFrame.to_string`'s ``col_space`` parameter now accepts a list or dict to change only some specific columns' width (:issue:`28917`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:343
msgid ":meth:`DataFrame.to_excel` can now also write OpenOffice spreadsheet (.ods) files (:issue:`27222`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:344
msgid ":meth:`~Series.explode` now accepts ``ignore_index`` to reset the index, similar to :meth:`pd.concat` or :meth:`DataFrame.sort_values` (:issue:`34932`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:345
msgid ":meth:`DataFrame.to_markdown` and :meth:`Series.to_markdown` now accept ``index`` argument as an alias for tabulate's ``showindex`` (:issue:`32667`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:346
msgid ":meth:`read_csv` now accepts string values like \"0\", \"0.0\", \"1\", \"1.0\" as convertible to the nullable Boolean dtype (:issue:`34859`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:347
msgid ":class:`pandas.core.window.ExponentialMovingWindow` now supports a ``times`` argument that allows ``mean`` to be calculated with observations spaced by the timestamps in ``times`` (:issue:`34839`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:348
msgid ":meth:`DataFrame.agg` and :meth:`Series.agg` now accept named aggregation for renaming the output columns/indexes. (:issue:`26513`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:349
msgid "``compute.use_numba`` now exists as a configuration option that utilizes the numba engine when available (:issue:`33966`, :issue:`35374`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:350
msgid ":meth:`Series.plot` now supports asymmetric error bars. Previously, if :meth:`Series.plot` received a \"2xN\" array with error values for ``yerr`` and/or ``xerr``, the left/lower values (first row) were mirrored, while the right/upper values (second row) were ignored. Now, the first row represents the left/lower error values and the second row the right/upper error values. (:issue:`9536`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:357
msgid "Notable bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:359
msgid "These are bug fixes that might have notable behavior changes."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:362
msgid "``MultiIndex.get_indexer`` interprets ``method`` argument correctly"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:364
msgid "This restores the behavior of :meth:`MultiIndex.get_indexer` with ``method='backfill'`` or ``method='pad'`` to the behavior before pandas 0.23.0. In particular, MultiIndexes are treated as a list of tuples and padding or backfilling is done with respect to the ordering of these lists of tuples (:issue:`29896`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:366
msgid "As an example of this, given:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:377
msgid "The differences in reindexing ``df`` with ``mi_2`` and using ``method='backfill'`` can be seen here:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:379
msgid "*pandas >= 0.23, < 1.1.0*:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:393
msgid "*pandas <0.23, >= 1.1.0*"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:399
msgid "And the differences in reindexing ``df`` with ``mi_2`` and using ``method='pad'`` can be seen here:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:401
msgid "*pandas >= 0.23, < 1.1.0*"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:415
msgid "*pandas < 0.23, >= 1.1.0*"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:424
msgid "Failed label-based lookups always raise KeyError"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:426
msgid "Label lookups ``series[key]``, ``series.loc[key]`` and ``frame.loc[key]`` used to raise either ``KeyError`` or ``TypeError`` depending on the type of key and type of :class:`Index`.  These now consistently raise ``KeyError`` (:issue:`31867`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:435
#: ../../source/whatsnew/v1.1.0.rst:509
#: ../../source/whatsnew/v1.1.0.rst:537
#: ../../source/whatsnew/v1.1.0.rst:566
#: ../../source/whatsnew/v1.1.0.rst:597
#: ../../source/whatsnew/v1.1.0.rst:616
#: ../../source/whatsnew/v1.1.0.rst:634
#: ../../source/whatsnew/v1.1.0.rst:666
#: ../../source/whatsnew/v1.1.0.rst:701
msgid "*Previous behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:463
#: ../../source/whatsnew/v1.1.0.rst:516
#: ../../source/whatsnew/v1.1.0.rst:546
#: ../../source/whatsnew/v1.1.0.rst:578
#: ../../source/whatsnew/v1.1.0.rst:608
#: ../../source/whatsnew/v1.1.0.rst:626
#: ../../source/whatsnew/v1.1.0.rst:645
#: ../../source/whatsnew/v1.1.0.rst:679
#: ../../source/whatsnew/v1.1.0.rst:720
msgid "*New behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:492
msgid "Similarly, :meth:`DataFrame.at` and :meth:`Series.at` will raise a ``TypeError`` instead of a ``ValueError`` if an incompatible key is passed, and ``KeyError`` if a missing key is passed, matching the behavior of ``.loc[]`` (:issue:`31722`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:497
msgid "Failed Integer Lookups on MultiIndex Raise KeyError"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:498
msgid "Indexing with integers with a :class:`MultiIndex` that has an integer-dtype first level incorrectly failed to raise ``KeyError`` when one or more of those integer keys is not present in the first level of the index (:issue:`33539`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:525
msgid ":meth:`DataFrame.merge` preserves right frame's row order"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:526
msgid ":meth:`DataFrame.merge` now preserves the right frame's row order when executing a right merge (:issue:`27453`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:557
msgid "Assignment to multiple columns of a DataFrame when some columns do not exist"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:559
msgid "Assignment to multiple columns of a :class:`DataFrame` when some of the columns do not exist would previously assign the values to the last column. Now, new columns will be constructed with the right values. (:issue:`13658`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:588
msgid "Consistency across groupby reductions"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:590
msgid "Using :meth:`DataFrame.groupby` with ``as_index=True`` and the aggregation ``nunique`` would include the grouping column(s) in the columns of the result. Now the grouping column(s) only appear in the index, consistent with other reductions. (:issue:`32579`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:614
msgid "Using :meth:`DataFrame.groupby` with ``as_index=False`` and the function ``idxmax``, ``idxmin``, ``mad``, ``nunique``, ``sem``, ``skew``, or ``std`` would modify the grouping column. Now the grouping column remains unchanged, consistent with other reductions. (:issue:`21090`, :issue:`10355`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:632
msgid "The method :meth:`~pandas.core.groupby.DataFrameGroupBy.size` would previously ignore ``as_index=False``. Now the grouping columns are returned as columns, making the result a :class:`DataFrame` instead of a :class:`Series`. (:issue:`32599`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:654
msgid ":meth:`~pandas.core.groupby.DataFrameGroupby.agg` lost results with ``as_index=False`` when relabeling columns"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:656
msgid "Previously :meth:`~pandas.core.groupby.DataFrameGroupby.agg` lost the result columns, when the ``as_index`` option was set to ``False`` and the result columns were relabeled. In this case the result values were replaced with the previous index (:issue:`32240`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:691
msgid "apply and applymap on ``DataFrame`` evaluates first row/column only once"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:729
msgid "Backwards incompatible API changes"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:734
msgid "Added ``check_freq`` argument to ``testing.assert_frame_equal`` and ``testing.assert_series_equal``"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:736
msgid "The ``check_freq`` argument was added to :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal` in pandas 1.1.0 and defaults to ``True``. :func:`testing.assert_frame_equal` and :func:`testing.assert_series_equal` now raise ``AssertionError`` if the indexes do not have the same frequency. Before pandas 1.1.0, the index frequency was not checked."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:740
msgid "Increased minimum versions for dependencies"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:742
msgid "Some minimum supported versions of dependencies were updated (:issue:`33718`, :issue:`29766`, :issue:`29723`, pytables >= 3.4.3). If installed, we now require:"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:746
#: ../../source/whatsnew/v1.1.0.rst:766
msgid "Package"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:746
#: ../../source/whatsnew/v1.1.0.rst:766
msgid "Minimum Version"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:746
msgid "Required"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:746
#: ../../source/whatsnew/v1.1.0.rst:766
msgid "Changed"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:748
msgid "numpy"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:748
msgid "1.15.4"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:748
#: ../../source/whatsnew/v1.1.0.rst:750
#: ../../source/whatsnew/v1.1.0.rst:752
#: ../../source/whatsnew/v1.1.0.rst:774
#: ../../source/whatsnew/v1.1.0.rst:788
#: ../../source/whatsnew/v1.1.0.rst:790
#: ../../source/whatsnew/v1.1.0.rst:792
#: ../../source/whatsnew/v1.1.0.rst:804
msgid "X"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:750
msgid "pytz"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:750
msgid "2015.4"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:752
msgid "python-dateutil"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:752
msgid "2.7.3"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:754
msgid "bottleneck"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:754
msgid "1.2.1"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:756
msgid "numexpr"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:756
msgid "2.6.2"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:758
msgid "pytest (dev)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:758
msgid "4.0.2"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:761
msgid "For `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version. The following table lists the lowest version per library that is currently being tested throughout the development of pandas. Optional libraries below the lowest tested version may still work, but are not considered supported."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:768
msgid "beautifulsoup4"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:768
msgid "4.6.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:770
msgid "fastparquet"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:770
msgid "0.3.2"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:772
msgid "fsspec"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:772
msgid "0.7.4"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:774
msgid "gcsfs"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:774
msgid "0.6.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:776
msgid "lxml"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:776
msgid "3.8.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:778
msgid "matplotlib"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:778
msgid "2.2.2"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:780
msgid "numba"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:780
msgid "0.46.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:782
msgid "openpyxl"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:782
msgid "2.5.7"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:784
msgid "pyarrow"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:784
msgid "0.13.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:786
msgid "pymysql"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:786
msgid "0.7.1"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:788
msgid "pytables"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:788
msgid "3.4.3"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:790
msgid "s3fs"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:790
msgid "0.4.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:792
msgid "scipy"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:792
#: ../../source/whatsnew/v1.1.0.rst:802
#: ../../source/whatsnew/v1.1.0.rst:804
msgid "1.2.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:794
msgid "sqlalchemy"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:794
msgid "1.1.4"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:796
msgid "xarray"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:796
msgid "0.8.2"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:798
msgid "xlrd"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:798
msgid "1.1.0"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:800
msgid "xlsxwriter"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:800
msgid "0.9.8"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:802
msgid "xlwt"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:804
msgid "pandas-gbq"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:807
msgid "See :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:810
msgid "Development changes"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:812
msgid "The minimum version of Cython is now the most recent bug-fix version (0.29.16) (:issue:`33334`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:818
msgid "Deprecations"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:820
msgid "Lookups on a :class:`Series` with a single-item list containing a slice (e.g. ``ser[[slice(0, 4)]]``) are deprecated and will raise in a future version.  Either convert the list to a tuple, or pass the slice directly instead (:issue:`31333`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:822
msgid ":meth:`DataFrame.mean` and :meth:`DataFrame.median` with ``numeric_only=None`` will include ``datetime64`` and ``datetime64tz`` columns in a future version (:issue:`29941`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:823
msgid "Setting values with ``.loc`` using a positional slice is deprecated and will raise in a future version.  Use ``.loc`` with labels or ``.iloc`` with positions instead (:issue:`31840`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:824
msgid ":meth:`DataFrame.to_dict` has deprecated accepting short names for ``orient`` and will raise in a future version (:issue:`32515`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:825
msgid ":meth:`Categorical.to_dense` is deprecated and will be removed in a future version, use ``np.asarray(cat)`` instead (:issue:`32639`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:826
msgid "The ``fastpath`` keyword in the ``SingleBlockManager`` constructor is deprecated and will be removed in a future version (:issue:`33092`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:827
msgid "Providing ``suffixes`` as a ``set`` in :func:`pandas.merge` is deprecated. Provide a tuple instead (:issue:`33740`, :issue:`34741`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:828
msgid "Indexing a :class:`Series` with a multi-dimensional indexer like ``[:, None]`` to return an ``ndarray`` now raises a ``FutureWarning``. Convert to a NumPy array before indexing instead (:issue:`27837`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:829
msgid ":meth:`Index.is_mixed` is deprecated and will be removed in a future version, check ``index.inferred_type`` directly instead (:issue:`32922`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:831
msgid "Passing any arguments but the first one to :func:`read_html` as positional arguments is deprecated. All other arguments should be given as keyword arguments (:issue:`27573`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:835
msgid "Passing any arguments but ``path_or_buf`` (the first one) to :func:`read_json` as positional arguments is deprecated. All other arguments should be given as keyword arguments (:issue:`27573`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:839
msgid "Passing any arguments but the first two to :func:`read_excel` as positional arguments is deprecated. All other arguments should be given as keyword arguments (:issue:`27573`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:843
msgid ":func:`pandas.api.types.is_categorical` is deprecated and will be removed in a future version; use :func:`pandas.api.types.is_categorical_dtype` instead (:issue:`33385`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:844
msgid ":meth:`Index.get_value` is deprecated and will be removed in a future version (:issue:`19728`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:845
msgid ":meth:`Series.dt.week` and :meth:`Series.dt.weekofyear` are deprecated and will be removed in a future version, use :meth:`Series.dt.isocalendar().week` instead (:issue:`33595`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:846
msgid ":meth:`DatetimeIndex.week` and ``DatetimeIndex.weekofyear`` are deprecated and will be removed in a future version, use ``DatetimeIndex.isocalendar().week`` instead (:issue:`33595`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:847
msgid ":meth:`DatetimeArray.week` and ``DatetimeArray.weekofyear`` are deprecated and will be removed in a future version, use ``DatetimeArray.isocalendar().week`` instead (:issue:`33595`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:848
msgid ":meth:`DateOffset.__call__` is deprecated and will be removed in a future version, use ``offset + other`` instead (:issue:`34171`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:849
msgid ":meth:`~pandas.tseries.offsets.BusinessDay.apply_index` is deprecated and will be removed in a future version. Use ``offset + other`` instead (:issue:`34580`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:850
msgid ":meth:`DataFrame.tshift` and :meth:`Series.tshift` are deprecated and will be removed in a future version, use :meth:`DataFrame.shift` and :meth:`Series.shift` instead (:issue:`11631`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:851
msgid "Indexing an :class:`Index` object with a float key is deprecated, and will raise an ``IndexError`` in the future. You can manually convert to an integer key instead (:issue:`34191`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:854
msgid "The ``squeeze`` keyword in :meth:`~DataFrame.groupby` is deprecated and will be removed in a future version (:issue:`32380`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:855
msgid "The ``tz`` keyword in :meth:`Period.to_timestamp` is deprecated and will be removed in a future version; use ``per.to_timestamp(...).tz_localize(tz)`` instead (:issue:`34522`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:856
msgid ":meth:`DatetimeIndex.to_perioddelta` is deprecated and will be removed in a future version.  Use ``index - index.to_period(freq).to_timestamp()`` instead (:issue:`34853`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:857
msgid ":meth:`DataFrame.melt` accepting a ``value_name`` that already exists is deprecated, and will be removed in a future version (:issue:`34731`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:858
msgid "The ``center`` keyword in the :meth:`DataFrame.expanding` function is deprecated and will be removed in a future version (:issue:`20647`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:868
msgid "Performance improvements"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:870
msgid "Performance improvement in :class:`Timedelta` constructor (:issue:`30543`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:871
msgid "Performance improvement in :class:`Timestamp` constructor (:issue:`30543`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:872
msgid "Performance improvement in flex arithmetic ops between :class:`DataFrame` and :class:`Series` with ``axis=0`` (:issue:`31296`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:873
msgid "Performance improvement in arithmetic ops between :class:`DataFrame` and :class:`Series` with ``axis=1`` (:issue:`33600`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:874
msgid "The internal index method :meth:`~Index._shallow_copy` now copies cached attributes over to the new index, avoiding creating these again on the new index. This can speed up many operations that depend on creating copies of existing indexes (:issue:`28584`, :issue:`32640`, :issue:`32669`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:877
msgid "Significant performance improvement when creating a :class:`DataFrame` with sparse values from ``scipy.sparse`` matrices using the :meth:`DataFrame.sparse.from_spmatrix` constructor (:issue:`32821`, :issue:`32825`,  :issue:`32826`, :issue:`32856`, :issue:`32858`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:881
msgid "Performance improvement for groupby methods :meth:`~pandas.core.groupby.groupby.Groupby.first` and :meth:`~pandas.core.groupby.groupby.Groupby.last` (:issue:`34178`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:883
msgid "Performance improvement in :func:`factorize` for nullable (integer and Boolean) dtypes (:issue:`33064`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:884
msgid "Performance improvement when constructing :class:`Categorical` objects (:issue:`33921`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:885
msgid "Fixed performance regression in :func:`pandas.qcut` and :func:`pandas.cut` (:issue:`33921`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:886
msgid "Performance improvement in reductions (``sum``, ``prod``, ``min``, ``max``) for nullable (integer and Boolean) dtypes (:issue:`30982`, :issue:`33261`, :issue:`33442`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:887
msgid "Performance improvement in arithmetic operations between two :class:`DataFrame` objects (:issue:`32779`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:888
msgid "Performance improvement in :class:`pandas.core.groupby.RollingGroupby` (:issue:`34052`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:889
msgid "Performance improvement in arithmetic operations (``sub``, ``add``, ``mul``, ``div``) for :class:`MultiIndex` (:issue:`34297`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:890
msgid "Performance improvement in ``DataFrame[bool_indexer]`` when ``bool_indexer`` is a ``list`` (:issue:`33924`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:891
msgid "Significant performance improvement of :meth:`io.formats.style.Styler.render` with styles added with various ways such as :meth:`io.formats.style.Styler.apply`, :meth:`io.formats.style.Styler.applymap` or :meth:`io.formats.style.Styler.bar` (:issue:`19917`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:898
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:902
msgid "Categorical"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:904
msgid "Passing an invalid ``fill_value`` to :meth:`Categorical.take` raises a ``ValueError`` instead of ``TypeError`` (:issue:`33660`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:905
msgid "Combining a :class:`Categorical` with integer categories and which contains missing values with a float dtype column in operations such as :func:`concat` or :meth:`~DataFrame.append` will now result in a float column instead of an object dtype column (:issue:`33607`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:906
msgid "Bug where :func:`merge` was unable to join on non-unique categorical indices (:issue:`28189`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:907
msgid "Bug when passing categorical data to :class:`Index` constructor along with ``dtype=object`` incorrectly returning a :class:`CategoricalIndex` instead of object-dtype :class:`Index` (:issue:`32167`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:908
msgid "Bug where :class:`Categorical` comparison operator ``__ne__`` would incorrectly evaluate to ``False`` when either element was missing (:issue:`32276`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:909
msgid ":meth:`Categorical.fillna` now accepts :class:`Categorical` ``other`` argument (:issue:`32420`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:910
msgid "Repr of :class:`Categorical` was not distinguishing between ``int`` and ``str`` (:issue:`33676`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:913
msgid "Datetimelike"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:915
msgid "Passing an integer dtype other than ``int64`` to ``np.array(period_index, dtype=...)`` will now raise ``TypeError`` instead of incorrectly using ``int64`` (:issue:`32255`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:916
msgid ":meth:`Series.to_timestamp` now raises a ``TypeError`` if the axis is not a :class:`PeriodIndex`. Previously an ``AttributeError`` was raised (:issue:`33327`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:917
msgid ":meth:`Series.to_period` now raises a ``TypeError`` if the axis is not a :class:`DatetimeIndex`. Previously an ``AttributeError`` was raised (:issue:`33327`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:918
msgid ":class:`Period` no longer accepts tuples for the ``freq`` argument (:issue:`34658`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:919
msgid "Bug in :class:`Timestamp` where constructing a :class:`Timestamp` from ambiguous epoch time and calling constructor again changed the :meth:`Timestamp.value` property (:issue:`24329`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:920
msgid ":meth:`DatetimeArray.searchsorted`, :meth:`TimedeltaArray.searchsorted`, :meth:`PeriodArray.searchsorted` not recognizing non-pandas scalars and incorrectly raising ``ValueError`` instead of ``TypeError`` (:issue:`30950`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:921
msgid "Bug in :class:`Timestamp` where constructing :class:`Timestamp` with dateutil timezone less than 128 nanoseconds before daylight saving time switch from winter to summer would result in nonexistent time (:issue:`31043`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:922
msgid "Bug in :meth:`Period.to_timestamp`, :meth:`Period.start_time` with microsecond frequency returning a timestamp one nanosecond earlier than the correct time (:issue:`31475`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:923
msgid ":class:`Timestamp` raised a confusing error message when year, month or day is missing (:issue:`31200`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:924
msgid "Bug in :class:`DatetimeIndex` constructor incorrectly accepting ``bool``-dtype inputs (:issue:`32668`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:925
msgid "Bug in :meth:`DatetimeIndex.searchsorted` not accepting a ``list`` or :class:`Series` as its argument (:issue:`32762`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:926
msgid "Bug where :meth:`PeriodIndex` raised when passed a :class:`Series` of strings (:issue:`26109`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:927
msgid "Bug in :class:`Timestamp` arithmetic when adding or subtracting an ``np.ndarray`` with ``timedelta64`` dtype (:issue:`33296`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:928
msgid "Bug in :meth:`DatetimeIndex.to_period` not inferring the frequency when called with no arguments (:issue:`33358`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:929
msgid "Bug in :meth:`DatetimeIndex.tz_localize` incorrectly retaining ``freq`` in some cases where the original ``freq`` is no longer valid (:issue:`30511`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:930
msgid "Bug in :meth:`DatetimeIndex.intersection` losing ``freq`` and timezone in some cases (:issue:`33604`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:931
msgid "Bug in :meth:`DatetimeIndex.get_indexer` where incorrect output would be returned for mixed datetime-like targets (:issue:`33741`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:932
msgid "Bug in :class:`DatetimeIndex` addition and subtraction with some types of :class:`DateOffset` objects incorrectly retaining an invalid ``freq`` attribute (:issue:`33779`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:933
msgid "Bug in :class:`DatetimeIndex` where setting the ``freq`` attribute on an index could silently change the ``freq`` attribute on another index viewing the same data (:issue:`33552`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:934
msgid ":meth:`DataFrame.min` and :meth:`DataFrame.max` were not returning consistent results with :meth:`Series.min` and :meth:`Series.max` when called on objects initialized with empty :func:`pd.to_datetime`"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:935
msgid "Bug in :meth:`DatetimeIndex.intersection` and :meth:`TimedeltaIndex.intersection` with results not having the correct ``name`` attribute (:issue:`33904`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:936
msgid "Bug in :meth:`DatetimeArray.__setitem__`, :meth:`TimedeltaArray.__setitem__`, :meth:`PeriodArray.__setitem__` incorrectly allowing values with ``int64`` dtype to be silently cast (:issue:`33717`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:937
msgid "Bug in subtracting :class:`TimedeltaIndex` from :class:`Period` incorrectly raising ``TypeError`` in some cases where it should succeed and ``IncompatibleFrequency`` in some cases where it should raise ``TypeError`` (:issue:`33883`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:938
msgid "Bug in constructing a :class:`Series` or :class:`Index` from a read-only NumPy array with non-ns resolution which converted to object dtype instead of coercing to ``datetime64[ns]`` dtype when within the timestamp bounds (:issue:`34843`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:941
msgid "The ``freq`` keyword in :class:`Period`, :func:`date_range`, :func:`period_range`, :func:`pd.tseries.frequencies.to_offset` no longer allows tuples, pass as string instead (:issue:`34703`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:942
msgid "Bug in :meth:`DataFrame.append` when appending a :class:`Series` containing a scalar tz-aware :class:`Timestamp` to an empty :class:`DataFrame` resulted in an object column instead of ``datetime64[ns, tz]`` dtype (:issue:`35038`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:943
msgid "``OutOfBoundsDatetime`` issues an improved error message when timestamp is out of implementation bounds. (:issue:`32967`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:944
msgid "Bug in :meth:`AbstractHolidayCalendar.holidays` when no rules were defined (:issue:`31415`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:945
msgid "Bug in :class:`Tick` comparisons raising ``TypeError`` when comparing against timedelta-like objects (:issue:`34088`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:946
msgid "Bug in :class:`Tick` multiplication raising ``TypeError`` when multiplying by a float (:issue:`34486`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:949
msgid "Timedelta"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:951
msgid "Bug in constructing a :class:`Timedelta` with a high precision integer that would round the :class:`Timedelta` components (:issue:`31354`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:952
msgid "Bug in dividing ``np.nan`` or ``None`` by :class:`Timedelta` incorrectly returning ``NaT`` (:issue:`31869`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:953
msgid ":class:`Timedelta` now understands ``µs`` as an identifier for microsecond (:issue:`32899`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:954
msgid ":class:`Timedelta` string representation now includes nanoseconds, when nanoseconds are non-zero (:issue:`9309`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:955
msgid "Bug in comparing a :class:`Timedelta` object against an ``np.ndarray`` with ``timedelta64`` dtype incorrectly viewing all entries as unequal (:issue:`33441`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:956
msgid "Bug in :func:`timedelta_range` that produced an extra point on a edge case (:issue:`30353`, :issue:`33498`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:957
msgid "Bug in :meth:`DataFrame.resample` that produced an extra point on a edge case (:issue:`30353`, :issue:`13022`, :issue:`33498`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:958
msgid "Bug in :meth:`DataFrame.resample` that ignored the ``loffset`` argument when dealing with timedelta (:issue:`7687`, :issue:`33498`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:959
msgid "Bug in :class:`Timedelta` and :func:`pandas.to_timedelta` that ignored the ``unit`` argument for string input (:issue:`12136`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:962
msgid "Timezones"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:964
msgid "Bug in :func:`to_datetime` with ``infer_datetime_format=True`` where timezone names (e.g. ``UTC``) would not be parsed correctly (:issue:`33133`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:968
msgid "Numeric"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:969
msgid "Bug in :meth:`DataFrame.floordiv` with ``axis=0`` not treating division-by-zero like :meth:`Series.floordiv` (:issue:`31271`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:970
msgid "Bug in :func:`to_numeric` with string argument ``\"uint64\"`` and ``errors=\"coerce\"`` silently fails (:issue:`32394`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:971
msgid "Bug in :func:`to_numeric` with ``downcast=\"unsigned\"`` fails for empty data (:issue:`32493`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:972
msgid "Bug in :meth:`DataFrame.mean` with ``numeric_only=False`` and either ``datetime64`` dtype or ``PeriodDtype`` column incorrectly raising ``TypeError`` (:issue:`32426`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:973
msgid "Bug in :meth:`DataFrame.count` with ``level=\"foo\"`` and index level ``\"foo\"`` containing NaNs causes segmentation fault (:issue:`21824`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:974
msgid "Bug in :meth:`DataFrame.diff` with ``axis=1`` returning incorrect results with mixed dtypes (:issue:`32995`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:975
msgid "Bug in :meth:`DataFrame.corr` and :meth:`DataFrame.cov` raising when handling nullable integer columns with ``pandas.NA`` (:issue:`33803`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:976
msgid "Bug in arithmetic operations between :class:`DataFrame` objects with non-overlapping columns with duplicate labels causing an infinite loop (:issue:`35194`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:977
msgid "Bug in :class:`DataFrame` and :class:`Series` addition and subtraction between object-dtype objects and ``datetime64`` dtype objects (:issue:`33824`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:978
msgid "Bug in :meth:`Index.difference` giving incorrect results when comparing a :class:`Float64Index` and object :class:`Index` (:issue:`35217`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:979
msgid "Bug in :class:`DataFrame` reductions (e.g. ``df.min()``, ``df.max()``) with ``ExtensionArray`` dtypes (:issue:`34520`, :issue:`32651`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:980
msgid ":meth:`Series.interpolate` and :meth:`DataFrame.interpolate` now raise a ValueError if ``limit_direction`` is ``'forward'`` or ``'both'`` and ``method`` is ``'backfill'`` or ``'bfill'`` or ``limit_direction`` is ``'backward'`` or ``'both'`` and ``method`` is ``'pad'`` or ``'ffill'`` (:issue:`34746`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:983
msgid "Conversion"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:984
msgid "Bug in :class:`Series` construction from NumPy array with big-endian ``datetime64`` dtype (:issue:`29684`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:985
msgid "Bug in :class:`Timedelta` construction with large nanoseconds keyword value (:issue:`32402`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:986
msgid "Bug in :class:`DataFrame` construction where sets would be duplicated rather than raising (:issue:`32582`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:987
msgid "The :class:`DataFrame` constructor no longer accepts a list of :class:`DataFrame` objects. Because of changes to NumPy, :class:`DataFrame` objects are now consistently treated as 2D objects, so a list of :class:`DataFrame` objects is considered 3D, and no longer acceptable for the :class:`DataFrame` constructor (:issue:`32289`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:988
msgid "Bug in :class:`DataFrame` when initiating a frame with lists and assign ``columns`` with nested list for ``MultiIndex`` (:issue:`32173`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:989
msgid "Improved error message for invalid construction of list when creating a new index (:issue:`35190`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:993
msgid "Strings"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:995
msgid "Bug in the :meth:`~Series.astype` method when converting \"string\" dtype data to nullable integer dtype (:issue:`32450`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:996
msgid "Fixed issue where taking ``min`` or ``max`` of a ``StringArray`` or ``Series`` with ``StringDtype`` type would raise. (:issue:`31746`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:997
msgid "Bug in :meth:`Series.str.cat` returning ``NaN`` output when other had :class:`Index` type (:issue:`33425`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:998
msgid ":func:`pandas.api.dtypes.is_string_dtype` no longer incorrectly identifies categorical series as string."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1001
msgid "Interval"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1002
msgid "Bug in :class:`IntervalArray` incorrectly allowing the underlying data to be changed when setting values (:issue:`32782`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1005
msgid "Indexing"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1007
msgid ":meth:`DataFrame.xs` now raises a  ``TypeError`` if a ``level`` keyword is supplied and the axis is not a :class:`MultiIndex`. Previously an ``AttributeError`` was raised (:issue:`33610`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1008
msgid "Bug in slicing on a :class:`DatetimeIndex` with a partial-timestamp dropping high-resolution indices near the end of a year, quarter, or month (:issue:`31064`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1009
msgid "Bug in :meth:`PeriodIndex.get_loc` treating higher-resolution strings differently from :meth:`PeriodIndex.get_value` (:issue:`31172`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1010
msgid "Bug in :meth:`Series.at` and :meth:`DataFrame.at` not matching ``.loc`` behavior when looking up an integer in a :class:`Float64Index` (:issue:`31329`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1011
msgid "Bug in :meth:`PeriodIndex.is_monotonic` incorrectly returning ``True`` when containing leading ``NaT`` entries (:issue:`31437`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1012
msgid "Bug in :meth:`DatetimeIndex.get_loc` raising ``KeyError`` with converted-integer key instead of the user-passed key (:issue:`31425`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1013
msgid "Bug in :meth:`Series.xs` incorrectly returning ``Timestamp`` instead of ``datetime64`` in some object-dtype cases (:issue:`31630`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1014
msgid "Bug in :meth:`DataFrame.iat` incorrectly returning ``Timestamp`` instead of ``datetime`` in some object-dtype cases (:issue:`32809`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1015
msgid "Bug in :meth:`DataFrame.at` when either columns or index is non-unique (:issue:`33041`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1016
msgid "Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` when indexing with an integer key on a object-dtype :class:`Index` that is not all-integers (:issue:`31905`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1017
msgid "Bug in :meth:`DataFrame.iloc.__setitem__` on a :class:`DataFrame` with duplicate columns incorrectly setting values for all matching columns (:issue:`15686`, :issue:`22036`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1018
msgid "Bug in :meth:`DataFrame.loc` and :meth:`Series.loc` with a :class:`DatetimeIndex`, :class:`TimedeltaIndex`, or :class:`PeriodIndex` incorrectly allowing lookups of non-matching datetime-like dtypes (:issue:`32650`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1019
msgid "Bug in :meth:`Series.__getitem__` indexing with non-standard scalars, e.g. ``np.dtype`` (:issue:`32684`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1020
msgid "Bug in :class:`Index` constructor where an unhelpful error message was raised for NumPy scalars (:issue:`33017`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1021
msgid "Bug in :meth:`DataFrame.lookup` incorrectly raising an ``AttributeError`` when ``frame.index`` or ``frame.columns`` is not unique; this will now raise a ``ValueError`` with a helpful error message (:issue:`33041`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1022
msgid "Bug in :class:`Interval` where a :class:`Timedelta` could not be added or subtracted from a :class:`Timestamp` interval (:issue:`32023`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1023
msgid "Bug in :meth:`DataFrame.copy` not invalidating _item_cache after copy caused post-copy value updates to not be reflected (:issue:`31784`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1024
msgid "Fixed regression in :meth:`DataFrame.loc` and :meth:`Series.loc` throwing an error when a ``datetime64[ns, tz]`` value is provided (:issue:`32395`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1025
msgid "Bug in :meth:`Series.__getitem__` with an integer key and a :class:`MultiIndex` with leading integer level failing to raise ``KeyError`` if the key is not present in the first level (:issue:`33355`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1026
msgid "Bug in :meth:`DataFrame.iloc` when slicing a single column :class:`DataFrame` with ``ExtensionDtype`` (e.g. ``df.iloc[:, :1]``) returning an invalid result (:issue:`32957`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1027
msgid "Bug in :meth:`DatetimeIndex.insert` and :meth:`TimedeltaIndex.insert` causing index ``freq`` to be lost when setting an element into an empty :class:`Series` (:issue:`33573`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1028
msgid "Bug in :meth:`Series.__setitem__` with an :class:`IntervalIndex` and a list-like key of integers (:issue:`33473`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1029
msgid "Bug in :meth:`Series.__getitem__` allowing missing labels with ``np.ndarray``, :class:`Index`, :class:`Series` indexers but not ``list``, these now all raise ``KeyError`` (:issue:`33646`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1030
msgid "Bug in :meth:`DataFrame.truncate` and :meth:`Series.truncate` where index was assumed to be monotone increasing (:issue:`33756`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1031
msgid "Indexing with a list of strings representing datetimes failed on :class:`DatetimeIndex` or :class:`PeriodIndex` (:issue:`11278`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1032
msgid "Bug in :meth:`Series.at` when used with a :class:`MultiIndex` would raise an exception on valid inputs (:issue:`26989`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1033
msgid "Bug in :meth:`DataFrame.loc` with dictionary of values changes columns with dtype of ``int`` to ``float`` (:issue:`34573`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1034
msgid "Bug in :meth:`Series.loc` when used with a :class:`MultiIndex` would raise an ``IndexingError`` when accessing a ``None`` value (:issue:`34318`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1035
msgid "Bug in :meth:`DataFrame.reset_index` and :meth:`Series.reset_index` would not preserve data types on an empty :class:`DataFrame` or :class:`Series` with a :class:`MultiIndex` (:issue:`19602`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1036
msgid "Bug in :class:`Series` and :class:`DataFrame` indexing with a ``time`` key on a :class:`DatetimeIndex` with ``NaT`` entries (:issue:`35114`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1039
msgid "Missing"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1040
msgid "Calling :meth:`fillna` on an empty :class:`Series` now correctly returns a shallow copied object. The behaviour is now consistent with :class:`Index`, :class:`DataFrame` and a non-empty :class:`Series` (:issue:`32543`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1041
msgid "Bug in :meth:`Series.replace` when argument ``to_replace`` is of type dict/list and is used on a :class:`Series` containing ``<NA>`` was raising a ``TypeError``. The method now handles this by ignoring ``<NA>`` values when doing the comparison for the replacement (:issue:`32621`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1042
msgid "Bug in :meth:`~Series.any` and :meth:`~Series.all` incorrectly returning ``<NA>`` for all ``False`` or all ``True`` values using the nulllable Boolean dtype and with ``skipna=False`` (:issue:`33253`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1043
msgid "Clarified documentation on interpolate with ``method=akima``. The ``der`` parameter must be scalar or ``None`` (:issue:`33426`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1044
msgid ":meth:`DataFrame.interpolate` uses the correct axis convention now. Previously interpolating along columns lead to interpolation along indices and vice versa. Furthermore interpolating with methods ``pad``, ``ffill``, ``bfill`` and ``backfill`` are identical to using these methods with :meth:`DataFrame.fillna` (:issue:`12918`, :issue:`29146`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1045
msgid "Bug in :meth:`DataFrame.interpolate` when called on a :class:`DataFrame` with column names of string type was throwing a ValueError. The method is now independent of the type of the column names (:issue:`33956`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1046
msgid "Passing :class:`NA` into a format string using format specs will now work. For example ``\"{:.1f}\".format(pd.NA)`` would previously raise a ``ValueError``, but will now return the string ``\"<NA>\"`` (:issue:`34740`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1047
msgid "Bug in :meth:`Series.map` not raising on invalid ``na_action`` (:issue:`32815`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1050
msgid "MultiIndex"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1052
msgid ":meth:`DataFrame.swaplevels` now raises a ``TypeError`` if the axis is not a :class:`MultiIndex`. Previously an ``AttributeError`` was raised (:issue:`31126`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1053
msgid "Bug in :meth:`Dataframe.loc` when used with a :class:`MultiIndex`. The returned values were not in the same order as the given inputs (:issue:`22797`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1062
msgid "Bug in :meth:`MultiIndex.intersection` was not guaranteed to preserve order when ``sort=False``. (:issue:`31325`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1063
msgid "Bug in :meth:`DataFrame.truncate` was dropping :class:`MultiIndex` names. (:issue:`34564`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1072
msgid "Bug when joining two :class:`MultiIndex` without specifying level with different columns. Return-indexers parameter was ignored. (:issue:`34074`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1075
msgid "IO"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1076
msgid "Passing a ``set`` as ``names`` argument to :func:`pandas.read_csv`, :func:`pandas.read_table`, or :func:`pandas.read_fwf` will raise ``ValueError: Names should be an ordered collection.`` (:issue:`34946`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1077
msgid "Bug in print-out when ``display.precision`` is zero. (:issue:`20359`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1078
msgid "Bug in :func:`read_json` where integer overflow was occurring when json contains big number strings. (:issue:`30320`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1079
msgid ":func:`read_csv` will now raise a ``ValueError`` when the arguments ``header`` and ``prefix`` both are not ``None``. (:issue:`27394`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1080
msgid "Bug in :meth:`DataFrame.to_json` was raising ``NotFoundError`` when ``path_or_buf`` was an S3 URI (:issue:`28375`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1081
msgid "Bug in :meth:`DataFrame.to_parquet` overwriting pyarrow's default for ``coerce_timestamps``; following pyarrow's default allows writing nanosecond timestamps with ``version=\"2.0\"`` (:issue:`31652`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1084
msgid "Bug in :func:`read_csv` was raising ``TypeError`` when ``sep=None`` was used in combination with ``comment`` keyword (:issue:`31396`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1085
msgid "Bug in :class:`HDFStore` that caused it to set to ``int64`` the dtype of a ``datetime64`` column when reading a :class:`DataFrame` in Python 3 from fixed format written in Python 2 (:issue:`31750`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1086
msgid ":func:`read_sas()` now handles dates and datetimes larger than :attr:`Timestamp.max` returning them as :class:`datetime.datetime` objects (:issue:`20927`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1087
msgid "Bug in :meth:`DataFrame.to_json` where ``Timedelta`` objects would not be serialized correctly with ``date_format=\"iso\"`` (:issue:`28256`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1088
msgid ":func:`read_csv` will raise a ``ValueError`` when the column names passed in ``parse_dates`` are missing in the :class:`Dataframe` (:issue:`31251`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1089
msgid "Bug in :func:`read_excel` where a UTF-8 string with a high surrogate would cause a segmentation violation (:issue:`23809`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1090
msgid "Bug in :func:`read_csv` was causing a file descriptor leak on an empty file (:issue:`31488`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1091
msgid "Bug in :func:`read_csv` was causing a segfault when there were blank lines between the header and data rows (:issue:`28071`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1092
msgid "Bug in :func:`read_csv` was raising a misleading exception on a permissions issue (:issue:`23784`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1093
msgid "Bug in :func:`read_csv` was raising an ``IndexError`` when ``header=None`` and two extra data columns"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1094
msgid "Bug in :func:`read_sas` was raising an ``AttributeError`` when reading files from Google Cloud Storage (:issue:`33069`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1095
msgid "Bug in :meth:`DataFrame.to_sql` where an ``AttributeError`` was raised when saving an out of bounds date (:issue:`26761`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1096
msgid "Bug in :func:`read_excel` did not correctly handle multiple embedded spaces in OpenDocument text cells. (:issue:`32207`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1097
msgid "Bug in :func:`read_json` was raising ``TypeError`` when reading a ``list`` of Booleans into a :class:`Series`. (:issue:`31464`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1098
msgid "Bug in :func:`pandas.io.json.json_normalize` where location specified by ``record_path`` doesn't point to an array. (:issue:`26284`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1099
msgid ":func:`pandas.read_hdf` has a more explicit error message when loading an unsupported HDF file (:issue:`9539`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1101
msgid "Bug in :meth:`~DataFrame.read_feather` was raising an ``ArrowIOError`` when reading an s3 or http file path (:issue:`29055`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1102
msgid "Bug in :meth:`~DataFrame.to_excel` could not handle the column name ``render`` and was raising an ``KeyError`` (:issue:`34331`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1103
msgid "Bug in :meth:`~SQLDatabase.execute` was raising a ``ProgrammingError`` for some DB-API drivers when the SQL statement contained the ``%`` character and no parameters were present (:issue:`34211`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1104
msgid "Bug in :meth:`~pandas.io.stata.StataReader` which resulted in categorical variables with different dtypes when reading data using an iterator. (:issue:`31544`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1105
msgid ":meth:`HDFStore.keys` has now an optional ``include`` parameter that allows the retrieval of all native HDF5 table names (:issue:`29916`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1106
msgid "``TypeError`` exceptions raised by :func:`read_csv` and :func:`read_table` were showing as ``parser_f`` when an unexpected keyword argument was passed (:issue:`25648`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1107
msgid "Bug in :func:`read_excel` for ODS files removes 0.0 values (:issue:`27222`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1108
msgid "Bug in :func:`ujson.encode` was raising an ``OverflowError`` with numbers larger than ``sys.maxsize`` (:issue:`34395`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1109
msgid "Bug in :meth:`HDFStore.append_to_multiple` was raising a ``ValueError`` when the ``min_itemsize`` parameter is set (:issue:`11238`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1110
msgid "Bug in :meth:`~HDFStore.create_table` now raises an error when ``column`` argument was not specified in ``data_columns`` on input (:issue:`28156`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1111
msgid ":func:`read_json` now could read line-delimited json file from a file url while ``lines`` and ``chunksize`` are set."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1112
msgid "Bug in :meth:`DataFrame.to_sql` when reading DataFrames with ``-np.inf`` entries with MySQL now has a more explicit ``ValueError`` (:issue:`34431`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1113
msgid "Bug where capitalised files extensions were not decompressed by read_* functions (:issue:`35164`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1114
msgid "Bug in :meth:`read_excel` that was raising a ``TypeError`` when ``header=None`` and ``index_col`` is given as a ``list`` (:issue:`31783`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1115
msgid "Bug in :func:`read_excel` where datetime values are used in the header in a :class:`MultiIndex` (:issue:`34748`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1116
msgid ":func:`read_excel` no longer takes ``**kwds`` arguments. This means that passing in the keyword argument ``chunksize`` now raises a ``TypeError`` (previously raised a ``NotImplementedError``), while passing in the keyword argument ``encoding`` now raises a ``TypeError`` (:issue:`34464`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1117
msgid "Bug in :meth:`DataFrame.to_records` was incorrectly losing timezone information in timezone-aware ``datetime64`` columns (:issue:`32535`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1120
msgid "Plotting"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1122
msgid ":meth:`DataFrame.plot` for line/bar now accepts color by dictionary (:issue:`8193`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1123
msgid "Bug in :meth:`DataFrame.plot.hist` where weights are not working for multiple columns (:issue:`33173`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1124
msgid "Bug in :meth:`DataFrame.boxplot` and :meth:`DataFrame.plot.boxplot` lost color attributes of ``medianprops``, ``whiskerprops``, ``capprops`` and ``boxprops`` (:issue:`30346`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1125
msgid "Bug in :meth:`DataFrame.hist` where the order of ``column`` argument was ignored (:issue:`29235`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1126
msgid "Bug in :meth:`DataFrame.plot.scatter` that when adding multiple plots with different ``cmap``, colorbars always use the first ``cmap`` (:issue:`33389`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1127
msgid "Bug in :meth:`DataFrame.plot.scatter` was adding a colorbar to the plot even if the argument ``c`` was assigned to a column containing color names (:issue:`34316`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1128
msgid "Bug in :meth:`pandas.plotting.bootstrap_plot` was causing cluttered axes and overlapping labels (:issue:`34905`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1129
msgid "Bug in :meth:`DataFrame.plot.scatter` caused an error when plotting variable marker sizes (:issue:`32904`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1132
msgid "GroupBy/resample/rolling"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1134
msgid "Using a :class:`pandas.api.indexers.BaseIndexer` with ``count``, ``min``, ``max``, ``median``, ``skew``,  ``cov``, ``corr`` will now return correct results for any monotonic :class:`pandas.api.indexers.BaseIndexer` descendant (:issue:`32865`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1135
msgid ":meth:`DataFrameGroupby.mean` and :meth:`SeriesGroupby.mean` (and similarly for :meth:`~DataFrameGroupby.median`, :meth:`~DataFrameGroupby.std` and :meth:`~DataFrameGroupby.var`) now raise a ``TypeError`` if a non-accepted keyword argument is passed into it. Previously an ``UnsupportedFunctionCall`` was raised (``AssertionError`` if ``min_count`` passed into :meth:`~DataFrameGroupby.median`) (:issue:`31485`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1136
msgid "Bug in :meth:`.DataFrameGroupBy.apply` and :meth:`.SeriesGroupBy.apply` raising ``ValueError`` when the ``by`` axis is not sorted, has duplicates, and the applied ``func`` does not mutate passed in objects (:issue:`30667`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1137
msgid "Bug in :meth:`DataFrameGroupBy.transform` produces an incorrect result with transformation functions (:issue:`30918`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1138
msgid "Bug in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` were returning the wrong result when grouping by multiple keys of which some were categorical and others not (:issue:`32494`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1139
msgid "Bug in :meth:`.DataFrameGroupBy.count` and :meth:`.SeriesGroupBy.count` causing segmentation fault when grouped-by columns contain NaNs (:issue:`32841`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1140
msgid "Bug in :meth:`DataFrame.groupby` and :meth:`Series.groupby` produces inconsistent type when aggregating Boolean :class:`Series` (:issue:`32894`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1141
msgid "Bug in :meth:`DataFrameGroupBy.sum` and :meth:`SeriesGroupBy.sum` where a large negative number would be returned when the number of non-null values was below ``min_count`` for nullable integer dtypes (:issue:`32861`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1142
msgid "Bug in :meth:`SeriesGroupBy.quantile` was raising on nullable integers (:issue:`33136`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1143
msgid "Bug in :meth:`DataFrame.resample` where an ``AmbiguousTimeError`` would be raised when the resulting timezone aware :class:`DatetimeIndex` had a DST transition at midnight (:issue:`25758`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1144
msgid "Bug in :meth:`DataFrame.groupby` where a ``ValueError`` would be raised when grouping by a categorical column with read-only categories and ``sort=False`` (:issue:`33410`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1145
msgid "Bug in :meth:`.DataFrameGroupBy.agg`, :meth:`.SeriesGroupBy.agg`, :meth:`.DataFrameGroupBy.transform`, :meth:`.SeriesGroupBy.transform`, :meth:`.DataFrameGroupBy.resample`, and :meth:`.SeriesGroupBy.resample` where subclasses are not preserved (:issue:`28330`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1146
msgid "Bug in :meth:`SeriesGroupBy.agg` where any column name was accepted in the named aggregation of :class:`SeriesGroupBy` previously. The behaviour now allows only ``str`` and callables else would raise ``TypeError``. (:issue:`34422`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1147
msgid "Bug in :meth:`DataFrame.groupby` lost the name of the :class:`Index` when one of the ``agg`` keys referenced an empty list (:issue:`32580`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1148
msgid "Bug in :meth:`Rolling.apply` where ``center=True`` was ignored when ``engine='numba'`` was specified (:issue:`34784`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1149
msgid "Bug in :meth:`DataFrame.ewm.cov` was throwing ``AssertionError`` for :class:`MultiIndex` inputs (:issue:`34440`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1150
msgid "Bug in :meth:`core.groupby.DataFrameGroupBy.quantile` raised ``TypeError`` for non-numeric types rather than dropping the columns (:issue:`27892`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1151
msgid "Bug in :meth:`core.groupby.DataFrameGroupBy.transform` when ``func='nunique'`` and columns are of type ``datetime64``, the result would also be of type ``datetime64`` instead of ``int64`` (:issue:`35109`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1152
msgid "Bug in :meth:`DataFrame.groupby` raising an ``AttributeError`` when selecting a column and aggregating with ``as_index=False`` (:issue:`35246`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1153
msgid "Bug in :meth:`DataFrameGroupBy.first` and :meth:`DataFrameGroupBy.last` that would raise an unnecessary ``ValueError`` when grouping on multiple ``Categoricals`` (:issue:`34951`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1156
msgid "Reshaping"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1158
msgid "Bug effecting all numeric and Boolean reduction methods not returning subclassed data type. (:issue:`25596`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1159
msgid "Bug in :meth:`DataFrame.pivot_table` when only :class:`MultiIndexed` columns is set (:issue:`17038`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1160
msgid "Bug in :meth:`DataFrame.unstack` and :meth:`Series.unstack` can take tuple names in :class:`MultiIndexed` data (:issue:`19966`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1161
msgid "Bug in :meth:`DataFrame.pivot_table` when ``margin`` is ``True`` and only ``column`` is defined (:issue:`31016`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1162
msgid "Fixed incorrect error message in :meth:`DataFrame.pivot` when ``columns`` is set to ``None``. (:issue:`30924`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1163
msgid "Bug in :func:`crosstab` when inputs are two :class:`Series` and have tuple names, the output will keep a dummy :class:`MultiIndex` as columns. (:issue:`18321`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1164
msgid ":meth:`DataFrame.pivot` can now take lists for ``index`` and ``columns`` arguments (:issue:`21425`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1165
msgid "Bug in :func:`concat` where the resulting indices are not copied when ``copy=True`` (:issue:`29879`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1166
msgid "Bug in :meth:`SeriesGroupBy.aggregate` was resulting in aggregations being overwritten when they shared the same name (:issue:`30880`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1167
msgid "Bug where :meth:`Index.astype` would lose the :attr:`name` attribute when converting from ``Float64Index`` to ``Int64Index``, or when casting to an ``ExtensionArray`` dtype (:issue:`32013`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1168
msgid ":meth:`Series.append` will now raise a ``TypeError`` when passed a :class:`DataFrame` or a sequence containing :class:`DataFrame` (:issue:`31413`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1169
msgid ":meth:`DataFrame.replace` and :meth:`Series.replace` will raise a ``TypeError`` if ``to_replace`` is not an expected type. Previously the ``replace`` would fail silently (:issue:`18634`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1170
msgid "Bug on inplace operation of a :class:`Series` that was adding a column to the :class:`DataFrame` from where it was originally dropped from (using ``inplace=True``) (:issue:`30484`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1171
msgid "Bug in :meth:`DataFrame.apply` where callback was called with :class:`Series` parameter even though ``raw=True`` requested. (:issue:`32423`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1172
msgid "Bug in :meth:`DataFrame.pivot_table` losing timezone information when creating a :class:`MultiIndex` level from a column with timezone-aware dtype (:issue:`32558`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1173
msgid "Bug in :func:`concat` where when passing a non-dict mapping as ``objs`` would raise a ``TypeError`` (:issue:`32863`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1174
msgid ":meth:`DataFrame.agg` now provides more descriptive ``SpecificationError`` message when attempting to aggregate a non-existent column (:issue:`32755`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1175
msgid "Bug in :meth:`DataFrame.unstack` when :class:`MultiIndex` columns and :class:`MultiIndex` rows were used (:issue:`32624`, :issue:`24729` and :issue:`28306`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1176
msgid "Appending a dictionary to a :class:`DataFrame` without passing ``ignore_index=True`` will raise ``TypeError: Can only append a dict if ignore_index=True`` instead of ``TypeError: Can only append a :class:`Series` if ignore_index=True or if the :class:`Series` has a name`` (:issue:`30871`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1177
msgid "Bug in :meth:`DataFrame.corrwith()`, :meth:`DataFrame.memory_usage()`, :meth:`DataFrame.dot()`, :meth:`DataFrame.idxmin()`, :meth:`DataFrame.idxmax()`, :meth:`DataFrame.duplicated()`, :meth:`DataFrame.isin()`, :meth:`DataFrame.count()`, :meth:`Series.explode()`, :meth:`Series.asof()` and :meth:`DataFrame.asof()` not returning subclassed types. (:issue:`31331`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1181
msgid "Bug in :func:`concat` was not allowing for concatenation of :class:`DataFrame` and :class:`Series` with duplicate keys (:issue:`33654`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1182
msgid "Bug in :func:`cut` raised an error when the argument ``labels`` contains duplicates (:issue:`33141`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1183
msgid "Ensure only named functions can be used in :func:`eval()` (:issue:`32460`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1184
msgid "Bug in :meth:`Dataframe.aggregate` and :meth:`Series.aggregate` was causing a recursive loop in some cases (:issue:`34224`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1185
msgid "Fixed bug in :func:`melt` where melting :class:`MultiIndex` columns with ``col_level > 0`` would raise a ``KeyError`` on ``id_vars`` (:issue:`34129`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1186
msgid "Bug in :meth:`Series.where` with an empty :class:`Series` and empty ``cond`` having non-bool dtype (:issue:`34592`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1187
msgid "Fixed regression where :meth:`DataFrame.apply` would raise ``ValueError`` for elements with ``S`` dtype (:issue:`34529`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1190
msgid "Sparse"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1191
msgid "Creating a :class:`SparseArray` from timezone-aware dtype will issue a warning before dropping timezone information, instead of doing so silently (:issue:`32501`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1192
msgid "Bug in :meth:`arrays.SparseArray.from_spmatrix` wrongly read scipy sparse matrix (:issue:`31991`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1193
msgid "Bug in :meth:`Series.sum` with ``SparseArray`` raised a ``TypeError`` (:issue:`25777`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1194
msgid "Bug where :class:`DataFrame` containing an all-sparse :class:`SparseArray` filled with ``NaN`` when indexed by a list-like (:issue:`27781`, :issue:`29563`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1195
msgid "The repr of :class:`SparseDtype` now includes the repr of its ``fill_value`` attribute. Previously it used ``fill_value``'s  string representation (:issue:`34352`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1196
msgid "Bug where empty :class:`DataFrame` could not be cast to :class:`SparseDtype` (:issue:`33113`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1197
msgid "Bug in :meth:`arrays.SparseArray` was returning the incorrect type when indexing a sparse dataframe with an iterable (:issue:`34526`, :issue:`34540`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1200
msgid "ExtensionArray"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1202
msgid "Fixed bug where :meth:`Series.value_counts` would raise on empty input of ``Int64`` dtype (:issue:`33317`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1203
msgid "Fixed bug in :func:`concat` when concatenating :class:`DataFrame` objects with non-overlapping columns resulting in object-dtype columns rather than preserving the extension dtype (:issue:`27692`, :issue:`33027`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1204
msgid "Fixed bug where :meth:`StringArray.isna` would return ``False`` for NA values when ``pandas.options.mode.use_inf_as_na`` was set to ``True`` (:issue:`33655`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1205
msgid "Fixed bug in :class:`Series` construction with EA dtype and index but no data or scalar data fails (:issue:`26469`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1206
msgid "Fixed bug that caused :meth:`Series.__repr__()` to crash for extension types whose elements are multidimensional arrays (:issue:`33770`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1207
msgid "Fixed bug where :meth:`Series.update` would raise a ``ValueError`` for ``ExtensionArray`` dtypes with missing values (:issue:`33980`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1208
msgid "Fixed bug where :meth:`StringArray.memory_usage` was not implemented (:issue:`33963`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1209
msgid "Fixed bug where :meth:`DataFrameGroupBy` would ignore the ``min_count`` argument for aggregations on nullable Boolean dtypes (:issue:`34051`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1210
msgid "Fixed bug where the constructor of :class:`DataFrame` with ``dtype='string'`` would fail (:issue:`27953`, :issue:`33623`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1211
msgid "Bug where :class:`DataFrame` column set to scalar extension type was considered an object type rather than the extension type (:issue:`34832`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1212
msgid "Fixed bug in :meth:`IntegerArray.astype` to correctly copy the mask as well (:issue:`34931`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1215
msgid "Other"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1217
msgid "Set operations on an object-dtype :class:`Index` now always return object-dtype results (:issue:`31401`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1218
msgid "Fixed :func:`pandas.testing.assert_series_equal` to correctly raise if the ``left`` argument is a different subclass with ``check_series_type=True`` (:issue:`32670`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1219
msgid "Getting a missing attribute in a :meth:`DataFrame.query` or :meth:`DataFrame.eval` string raises the correct ``AttributeError`` (:issue:`32408`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1220
msgid "Fixed bug in :func:`pandas.testing.assert_series_equal` where dtypes were checked for ``Interval`` and ``ExtensionArray`` operands when ``check_dtype`` was ``False`` (:issue:`32747`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1221
msgid "Bug in :meth:`DataFrame.__dir__` caused a segfault when using unicode surrogates in a column name (:issue:`25509`)"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1222
msgid "Bug in :meth:`DataFrame.equals` and :meth:`Series.equals` in allowing subclasses to be equal (:issue:`34402`)."
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1229
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v1.1.0.rst:1231
msgid "A total of 368 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
