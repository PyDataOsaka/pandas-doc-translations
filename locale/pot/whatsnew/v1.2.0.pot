# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/whatsnew/v1.2.0.rst:4
msgid "What's new in 1.2.0 (December 26, 2020)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:6
msgid "These are the changes in pandas 1.2.0. See :ref:`release` for a full changelog including other versions of pandas."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:9
msgid "{{ header }}"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:13
msgid "The `xlwt <https://xlwt.readthedocs.io/en/latest/>`_ package for writing old-style ``.xls`` excel files is no longer maintained. The `xlrd <https://xlrd.readthedocs.io/en/latest/>`_ package is now only for reading old-style ``.xls`` files."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:18
msgid "Previously, the default argument ``engine=None`` to :func:`~pandas.read_excel` would result in using the ``xlrd`` engine in many cases, including new Excel 2007+ (``.xlsx``) files. If `openpyxl <https://openpyxl.readthedocs.io/en/stable/>`_  is installed, many of these cases will now default to using the ``openpyxl`` engine. See the :func:`read_excel` documentation for more details."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:25
msgid "Thus, it is strongly encouraged to install ``openpyxl`` to read Excel 2007+ (``.xlsx``) files. **Please do not report issues when using ``xlrd`` to read ``.xlsx`` files.** This is no longer supported, switch to using ``openpyxl`` instead."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:30
msgid "Attempting to use the ``xlwt`` engine will raise a ``FutureWarning`` unless the option :attr:`io.excel.xls.writer` is set to ``\"xlwt\"``. While this option is now deprecated and will also raise a ``FutureWarning``, it can be globally set and the warning suppressed. Users are recommended to write ``.xlsx`` files using the ``openpyxl`` engine instead."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:39
msgid "Enhancements"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:44
msgid "Optionally disallow duplicate labels"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:46
msgid ":class:`Series` and :class:`DataFrame` can now be created with ``allows_duplicate_labels=False`` flag to control whether the index or columns can contain duplicate labels (:issue:`28394`). This can be used to prevent accidental introduction of duplicate labels, which can affect downstream operations."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:50
msgid "By default, duplicates continue to be allowed."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:67
msgid "pandas will propagate the ``allows_duplicate_labels`` property through many operations."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:94
msgid "This is an experimental feature. Currently, many methods fail to propagate the ``allows_duplicate_labels`` value. In future versions it is expected that every method taking or returning one or more DataFrame or Series objects will propagate ``allows_duplicate_labels``."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:99
msgid "See :ref:`duplicates` for more."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:101
msgid "The ``allows_duplicate_labels`` flag is stored in the new :attr:`DataFrame.flags` attribute. This stores global attributes that apply to the *pandas object*. This differs from :attr:`DataFrame.attrs`, which stores information that applies to the dataset."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:107
msgid "Passing arguments to fsspec backends"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:109
msgid "Many read/write functions have acquired the ``storage_options`` optional argument, to pass a dictionary of parameters to the storage backend. This allows, for example, for passing credentials to S3 and GCS storage. The details of what parameters can be passed to which backends can be found in the documentation of the individual storage backends (detailed from the fsspec docs for `builtin implementations`_ and linked to `external ones`_). See Section :ref:`io.remote`."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:117
msgid ":issue:`35655` added fsspec support (including ``storage_options``) for reading excel files."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:126
msgid "Support for binary file handles in ``to_csv``"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:128
msgid ":meth:`to_csv` supports file handles in binary mode (:issue:`19827` and :issue:`35058`) with ``encoding`` (:issue:`13068` and :issue:`23854`) and ``compression`` (:issue:`22555`). If pandas does not automatically detect whether the file handle is opened in binary or text mode, it is necessary to provide ``mode=\"wb\"``."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:133
msgid "For example:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:144
msgid "Support for short caption and table position in ``to_latex``"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:146
msgid ":meth:`DataFrame.to_latex` now allows one to specify a floating table position (:issue:`35281`) and a short caption (:issue:`36267`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:150
msgid "The keyword ``position`` has been added to set the position."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:159
msgid "Usage of the keyword ``caption`` has been extended. Besides taking a single string as an argument, one can optionally provide a tuple ``(full_caption, short_caption)`` to add a short caption macro."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:174
msgid "Change in default floating precision for ``read_csv`` and ``read_table``"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:176
msgid "For the C parsing engine, the methods :meth:`read_csv` and :meth:`read_table` previously defaulted to a parser that could read floating point numbers slightly incorrectly with respect to the last bit in precision. The option ``floating_precision=\"high\"`` has always been available to avoid this issue. Beginning with this version, the default is now to use the more accurate parser by making ``floating_precision=None`` correspond to the high precision parser, and the new option ``floating_precision=\"legacy\"`` to use the legacy parser. The change to using the higher precision parser by default should have no impact on performance. (:issue:`17154`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:187
msgid "Experimental nullable data types for float data"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:189
msgid "We've added :class:`Float32Dtype` / :class:`Float64Dtype` and :class:`~arrays.FloatingArray`. These are extension data types dedicated to floating point data that can hold the ``pd.NA`` missing value indicator (:issue:`32265`, :issue:`34307`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:193
msgid "While the default float data type already supports missing values using ``np.nan``, these new data types use ``pd.NA`` (and its corresponding behavior) as the missing value indicator, in line with the already existing nullable :ref:`integer <integer_na>` and :ref:`boolean <boolean>` data types."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:198
msgid "One example where the behavior of ``np.nan`` and ``pd.NA`` is different is comparison operations:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:215
msgid "See the :ref:`missing_data.NA` doc section for more details on the behavior when using the ``pd.NA`` missing value indicator."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:218
msgid "As shown above, the dtype can be specified using the \"Float64\" or \"Float32\" string (capitalized to distinguish it from the default \"float64\" data type). Alternatively, you can also use the dtype object:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:226
msgid "Operations with the existing integer or boolean nullable data types that give float results will now also use the nullable floating data types (:issue:`38178`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:231
msgid "Experimental: the new floating data types are currently experimental, and their behavior or API may still change without warning. Especially the behavior regarding NaN (distinct from NA missing values) is subject to change."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:238
msgid "Index/column name preservation when aggregating"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:240
msgid "When aggregating using :meth:`concat` or the :class:`DataFrame` constructor, pandas will now attempt to preserve index and column names whenever possible (:issue:`35847`). In the case where all inputs share a common name, this name will be assigned to the result. When the input names do not all agree, the result will be unnamed. Here is an example where the index name is preserved:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:252
msgid "The same is true for :class:`MultiIndex`, but the logic is applied separately on a level-by-level basis."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:258
msgid "GroupBy supports EWM operations directly"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:260
msgid ":class:`.DataFrameGroupBy` now supports exponentially weighted window operations directly (:issue:`16037`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:268
msgid "Additionally ``mean`` supports execution via `Numba <https://numba.pydata.org/>`__ with the  ``engine`` and ``engine_kwargs`` arguments. Numba must be installed as an optional dependency to use this feature."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:275
msgid "Other enhancements"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:276
msgid "Added ``day_of_week`` (compatibility alias ``dayofweek``) property to :class:`Timestamp`, :class:`.DatetimeIndex`, :class:`Period`, :class:`PeriodIndex` (:issue:`9605`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:277
msgid "Added ``day_of_year`` (compatibility alias ``dayofyear``) property to :class:`Timestamp`, :class:`.DatetimeIndex`, :class:`Period`, :class:`PeriodIndex` (:issue:`9605`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:278
msgid "Added :meth:`~DataFrame.set_flags` for setting table-wide flags on a Series or DataFrame (:issue:`28394`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:279
msgid ":meth:`DataFrame.applymap` now supports ``na_action`` (:issue:`23803`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:280
msgid ":class:`Index` with object dtype supports division and multiplication (:issue:`34160`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:281
msgid ":meth:`io.sql.get_schema` now supports a ``schema`` keyword argument that will add a schema into the create table statement (:issue:`28486`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:282
msgid ":meth:`DataFrame.explode` and :meth:`Series.explode` now support exploding of sets (:issue:`35614`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:283
msgid ":meth:`DataFrame.hist` now supports time series (datetime) data (:issue:`32590`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:284
msgid ":meth:`.Styler.set_table_styles` now allows the direct styling of rows and columns and can be chained (:issue:`35607`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:285
msgid ":class:`.Styler` now allows direct CSS class name addition to individual data cells (:issue:`36159`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:286
msgid ":meth:`.Rolling.mean` and :meth:`.Rolling.sum` use Kahan summation to calculate the mean to avoid numerical problems (:issue:`10319`, :issue:`11645`, :issue:`13254`, :issue:`32761`, :issue:`36031`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:287
msgid ":meth:`.DatetimeIndex.searchsorted`, :meth:`.TimedeltaIndex.searchsorted`, :meth:`PeriodIndex.searchsorted`, and :meth:`Series.searchsorted` with datetime-like dtypes will now try to cast string arguments (list-like and scalar) to the matching datetime-like type (:issue:`36346`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:288
msgid "Added methods :meth:`IntegerArray.prod`, :meth:`IntegerArray.min`, and :meth:`IntegerArray.max` (:issue:`33790`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:289
msgid "Calling a NumPy ufunc on a ``DataFrame`` with extension types now preserves the extension types when possible (:issue:`23743`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:290
msgid "Calling a binary-input NumPy ufunc on multiple ``DataFrame`` objects now aligns, matching the behavior of binary operations and ufuncs on ``Series`` (:issue:`23743`). This change has been reverted in pandas 1.2.1, and the behaviour to not align DataFrames is deprecated instead, see the :ref:`the 1.2.1 release notes <whatsnew_121.ufunc_deprecation>`."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:293
msgid "Where possible :meth:`RangeIndex.difference` and :meth:`RangeIndex.symmetric_difference` will return :class:`RangeIndex` instead of :class:`Int64Index` (:issue:`36564`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:294
msgid ":meth:`DataFrame.to_parquet` now supports :class:`MultiIndex` for columns in parquet format (:issue:`34777`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:295
msgid ":func:`read_parquet` gained a ``use_nullable_dtypes=True`` option to use nullable dtypes that use ``pd.NA`` as missing value indicator where possible for the resulting DataFrame (default is ``False``, and only applicable for ``engine=\"pyarrow\"``) (:issue:`31242`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:296
msgid "Added :meth:`.Rolling.sem` and :meth:`Expanding.sem` to compute the standard error of the mean (:issue:`26476`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:297
msgid ":meth:`.Rolling.var` and :meth:`.Rolling.std` use Kahan summation and Welford's Method to avoid numerical issues (:issue:`37051`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:298
msgid ":meth:`DataFrame.corr` and :meth:`DataFrame.cov` use Welford's Method to avoid numerical issues (:issue:`37448`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:299
msgid ":meth:`DataFrame.plot` now recognizes ``xlabel`` and ``ylabel`` arguments for plots of type ``scatter`` and ``hexbin`` (:issue:`37001`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:300
msgid ":class:`DataFrame` now supports the ``divmod`` operation (:issue:`37165`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:301
msgid ":meth:`DataFrame.to_parquet` now returns a ``bytes`` object when no ``path`` argument is passed (:issue:`37105`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:302
msgid ":class:`.Rolling` now supports the ``closed`` argument for fixed windows (:issue:`34315`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:303
msgid ":class:`.DatetimeIndex` and :class:`Series` with ``datetime64`` or ``datetime64tz`` dtypes now support ``std`` (:issue:`37436`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:304
msgid ":class:`Window` now supports all Scipy window types in ``win_type`` with flexible keyword argument support (:issue:`34556`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:305
msgid ":meth:`testing.assert_index_equal` now has a ``check_order`` parameter that allows indexes to be checked in an order-insensitive manner (:issue:`37478`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:306
msgid ":func:`read_csv` supports memory-mapping for compressed files (:issue:`37621`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:307
msgid "Add support for ``min_count`` keyword for :meth:`DataFrame.groupby` and :meth:`DataFrame.resample` for functions ``min``, ``max``, ``first`` and ``last`` (:issue:`37821`, :issue:`37768`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:308
msgid "Improve error reporting for :meth:`DataFrame.merge` when invalid merge column definitions were given (:issue:`16228`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:309
msgid "Improve numerical stability for :meth:`.Rolling.skew`, :meth:`.Rolling.kurt`, :meth:`Expanding.skew` and :meth:`Expanding.kurt` through implementation of Kahan summation (:issue:`6929`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:310
msgid "Improved error reporting for subsetting columns of a :class:`.DataFrameGroupBy` with ``axis=1`` (:issue:`37725`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:311
msgid "Implement method ``cross`` for :meth:`DataFrame.merge` and :meth:`DataFrame.join` (:issue:`5401`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:312
msgid "When :func:`read_csv`, :func:`read_sas` and :func:`read_json` are called with ``chunksize``/``iterator`` they can be used in a ``with`` statement as they return context-managers (:issue:`38225`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:313
msgid "Augmented the list of named colors available for styling Excel exports, enabling all of CSS4 colors (:issue:`38247`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:320
msgid "Notable bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:322
msgid "These are bug fixes that might have notable behavior changes."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:325
msgid "Consistency of DataFrame Reductions"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:326
msgid ":meth:`DataFrame.any` and :meth:`DataFrame.all` with ``bool_only=True`` now determines whether to exclude object-dtype columns on a column-by-column basis, instead of checking if *all* object-dtype columns can be considered boolean."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:330
msgid "This prevents pathological behavior where applying the reduction on a subset of columns could result in a larger Series result. See (:issue:`37799`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:339
#: ../../source/whatsnew/v1.2.0.rst:372
#: ../../source/whatsnew/v1.2.0.rst:412
msgid "*Previous behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:354
#: ../../source/whatsnew/v1.2.0.rst:384
#: ../../source/whatsnew/v1.2.0.rst:421
msgid "*New behavior*:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:364
msgid "Other DataFrame reductions with ``numeric_only=None`` will also avoid this pathological behavior (:issue:`37827`):"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:398
msgid "Moreover, DataFrame reductions with ``numeric_only=None`` will now be consistent with their Series counterparts.  In particular, for reductions where the Series method raises ``TypeError``, the DataFrame reduction will now consider that column non-numeric instead of casting to a NumPy array which may have different semantics (:issue:`36076`, :issue:`28949`, :issue:`21020`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:432
msgid "Increased minimum version for Python"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:434
msgid "pandas 1.2.0 supports Python 3.7.1 and higher (:issue:`35214`)."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:439
msgid "Increased minimum versions for dependencies"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:441
msgid "Some minimum supported versions of dependencies were updated (:issue:`35214`). If installed, we now require:"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:445
#: ../../source/whatsnew/v1.2.0.rst:467
msgid "Package"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:445
#: ../../source/whatsnew/v1.2.0.rst:467
msgid "Minimum Version"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:445
msgid "Required"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:445
#: ../../source/whatsnew/v1.2.0.rst:467
msgid "Changed"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:447
msgid "numpy"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:447
msgid "1.16.5"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:447
#: ../../source/whatsnew/v1.2.0.rst:449
#: ../../source/whatsnew/v1.2.0.rst:451
#: ../../source/whatsnew/v1.2.0.rst:455
#: ../../source/whatsnew/v1.2.0.rst:457
#: ../../source/whatsnew/v1.2.0.rst:459
#: ../../source/whatsnew/v1.2.0.rst:477
#: ../../source/whatsnew/v1.2.0.rst:479
#: ../../source/whatsnew/v1.2.0.rst:483
#: ../../source/whatsnew/v1.2.0.rst:485
#: ../../source/whatsnew/v1.2.0.rst:487
#: ../../source/whatsnew/v1.2.0.rst:489
#: ../../source/whatsnew/v1.2.0.rst:495
#: ../../source/whatsnew/v1.2.0.rst:497
#: ../../source/whatsnew/v1.2.0.rst:499
#: ../../source/whatsnew/v1.2.0.rst:501
#: ../../source/whatsnew/v1.2.0.rst:503
msgid "X"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:449
msgid "pytz"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:449
msgid "2017.3"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:451
msgid "python-dateutil"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:451
msgid "2.7.3"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:453
msgid "bottleneck"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:453
msgid "1.2.1"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:455
msgid "numexpr"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:455
msgid "2.6.8"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:457
msgid "pytest (dev)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:457
msgid "5.0.1"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:459
msgid "mypy (dev)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:459
msgid "0.782"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:462
msgid "For `optional libraries <https://pandas.pydata.org/docs/getting_started/install.html>`_ the general recommendation is to use the latest version. The following table lists the lowest version per library that is currently being tested throughout the development of pandas. Optional libraries below the lowest tested version may still work, but are not considered supported."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:469
msgid "beautifulsoup4"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:469
msgid "4.6.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:471
msgid "fastparquet"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:471
msgid "0.3.2"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:473
msgid "fsspec"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:473
msgid "0.7.4"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:475
msgid "gcsfs"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:475
msgid "0.6.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:477
msgid "lxml"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:477
msgid "4.3.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:479
msgid "matplotlib"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:479
msgid "2.2.3"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:481
msgid "numba"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:481
msgid "0.46.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:483
msgid "openpyxl"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:483
msgid "2.6.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:485
msgid "pyarrow"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:485
msgid "0.15.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:487
msgid "pymysql"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:487
msgid "0.7.11"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:489
msgid "pytables"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:489
msgid "3.5.1"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:491
msgid "s3fs"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:491
msgid "0.4.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:493
msgid "scipy"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:493
#: ../../source/whatsnew/v1.2.0.rst:499
msgid "1.2.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:495
msgid "sqlalchemy"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:495
msgid "1.2.8"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:497
msgid "xarray"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:497
msgid "0.12.3"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:499
msgid "xlrd"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:501
msgid "xlsxwriter"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:501
msgid "1.0.2"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:503
msgid "xlwt"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:503
msgid "1.3.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:505
msgid "pandas-gbq"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:505
msgid "0.12.0"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:508
msgid "See :ref:`install.dependencies` and :ref:`install.optional_dependencies` for more."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:513
msgid "Other API changes"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:515
msgid "Sorting in descending order is now stable for :meth:`Series.sort_values` and :meth:`Index.sort_values` for Datetime-like :class:`Index` subclasses. This will affect sort order when sorting a DataFrame on multiple columns, sorting with a key function that produces duplicates, or requesting the sorting index when using :meth:`Index.sort_values`. When using :meth:`Series.value_counts`, the count of missing values is no longer necessarily last in the list of duplicate counts. Instead, its position corresponds to the position in the original Series. When using :meth:`Index.sort_values` for Datetime-like :class:`Index` subclasses, NaTs ignored the ``na_position`` argument and were sorted to the beginning. Now they respect ``na_position``, the default being ``last``, same as other :class:`Index` subclasses (:issue:`35992`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:516
msgid "Passing an invalid ``fill_value`` to :meth:`Categorical.take`, :meth:`.DatetimeArray.take`, :meth:`TimedeltaArray.take`, or :meth:`PeriodArray.take` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:517
msgid "Passing an invalid ``fill_value`` to :meth:`Series.shift` with a ``CategoricalDtype`` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:518
msgid "Passing an invalid value to :meth:`IntervalIndex.insert` or :meth:`CategoricalIndex.insert` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:519
msgid "Attempting to reindex a Series with a :class:`CategoricalIndex` with an invalid ``fill_value`` now raises a ``TypeError`` instead of a ``ValueError`` (:issue:`37733`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:520
msgid ":meth:`CategoricalIndex.append` with an index that contains non-category values will now cast instead of raising ``TypeError`` (:issue:`38098`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:527
msgid "Deprecations"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:528
msgid "Deprecated parameter ``inplace`` in :meth:`MultiIndex.set_codes` and :meth:`MultiIndex.set_levels` (:issue:`35626`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:529
msgid "Deprecated parameter ``dtype`` of method :meth:`~Index.copy` for all :class:`Index` subclasses. Use the :meth:`~Index.astype` method instead for changing dtype (:issue:`35853`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:530
msgid "Deprecated parameters ``levels`` and ``codes`` in :meth:`MultiIndex.copy`. Use the :meth:`~MultiIndex.set_levels` and :meth:`~MultiIndex.set_codes` methods instead (:issue:`36685`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:531
msgid "Date parser functions :func:`~pandas.io.date_converters.parse_date_time`, :func:`~pandas.io.date_converters.parse_date_fields`, :func:`~pandas.io.date_converters.parse_all_fields` and :func:`~pandas.io.date_converters.generic_parser` from ``pandas.io.date_converters`` are deprecated and will be removed in a future version; use :func:`to_datetime` instead (:issue:`35741`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:532
msgid ":meth:`DataFrame.lookup` is deprecated and will be removed in a future version, use :meth:`DataFrame.melt` and :meth:`DataFrame.loc` instead (:issue:`35224`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:533
msgid "The method :meth:`Index.to_native_types` is deprecated. Use ``.astype(str)`` instead (:issue:`28867`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:534
msgid "Deprecated indexing :class:`DataFrame` rows with a single datetime-like string as ``df[string]`` (given the ambiguity whether it is indexing the rows or selecting a column), use ``df.loc[string]`` instead (:issue:`36179`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:535
msgid "Deprecated :meth:`Index.is_all_dates` (:issue:`27744`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:536
msgid "The default value of ``regex`` for :meth:`Series.str.replace` will change from ``True`` to ``False`` in a future release. In addition, single character regular expressions will *not* be treated as literal strings when ``regex=True`` is set (:issue:`24804`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:537
msgid "Deprecated automatic alignment on comparison operations between :class:`DataFrame` and :class:`Series`, do ``frame, ser = frame.align(ser, axis=1, copy=False)`` before e.g. ``frame == ser`` (:issue:`28759`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:538
msgid ":meth:`Rolling.count` with ``min_periods=None`` will default to the size of the window in a future version (:issue:`31302`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:539
msgid "Using \"outer\" ufuncs on DataFrames to return 4d ndarray is now deprecated. Convert to an ndarray first (:issue:`23743`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:540
msgid "Deprecated slice-indexing on tz-aware :class:`DatetimeIndex` with naive ``datetime`` objects, to match scalar indexing behavior (:issue:`36148`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:541
msgid ":meth:`Index.ravel` returning a ``np.ndarray`` is deprecated, in the future this will return a view on the same index (:issue:`19956`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:542
msgid "Deprecate use of strings denoting units with 'M', 'Y' or 'y' in :func:`~pandas.to_timedelta` (:issue:`36666`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:543
msgid ":class:`Index` methods ``&``, ``|``, and ``^`` behaving as the set operations :meth:`Index.intersection`, :meth:`Index.union`, and :meth:`Index.symmetric_difference`, respectively, are deprecated and in the future will behave as pointwise boolean operations matching :class:`Series` behavior.  Use the named set methods instead (:issue:`36758`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:544
msgid ":meth:`Categorical.is_dtype_equal` and :meth:`CategoricalIndex.is_dtype_equal` are deprecated, will be removed in a future version (:issue:`37545`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:545
msgid ":meth:`Series.slice_shift` and :meth:`DataFrame.slice_shift` are deprecated, use :meth:`Series.shift` or :meth:`DataFrame.shift` instead (:issue:`37601`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:546
msgid "Partial slicing on unordered :class:`.DatetimeIndex` objects with keys that are not in the index is deprecated and will be removed in a future version (:issue:`18531`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:547
msgid "The ``how`` keyword in :meth:`PeriodIndex.astype` is deprecated and will be removed in a future version, use ``index.to_timestamp(how=how)`` instead (:issue:`37982`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:548
msgid "Deprecated :meth:`Index.asi8` for :class:`Index` subclasses other than :class:`.DatetimeIndex`, :class:`.TimedeltaIndex`, and :class:`PeriodIndex` (:issue:`37877`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:549
msgid "The ``inplace`` parameter of :meth:`Categorical.remove_unused_categories` is deprecated and will be removed in a future version (:issue:`37643`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:550
msgid "The ``null_counts`` parameter of :meth:`DataFrame.info` is deprecated and replaced by ``show_counts``. It will be removed in a future version (:issue:`37999`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:552
msgid "**Calling NumPy ufuncs on non-aligned DataFrames**"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:554
msgid "Calling NumPy ufuncs on non-aligned DataFrames changed behaviour in pandas 1.2.0 (to align the inputs before calling the ufunc), but this change is reverted in pandas 1.2.1. The behaviour to not align is now deprecated instead, see the :ref:`the 1.2.1 release notes <whatsnew_121.ufunc_deprecation>` for more details."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:566
msgid "Performance improvements"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:568
msgid "Performance improvements when creating DataFrame or Series with dtype ``str`` or :class:`StringDtype` from array with many string elements (:issue:`36304`, :issue:`36317`, :issue:`36325`, :issue:`36432`, :issue:`37371`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:569
msgid "Performance improvement in :meth:`.DataFrameGroupBy.agg` and :meth:`.SeriesGroupBy.agg` with the ``numba`` engine (:issue:`35759`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:570
msgid "Performance improvements when creating :meth:`Series.map` from a huge dictionary (:issue:`34717`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:571
msgid "Performance improvement in :meth:`.DataFrameGroupBy.transform` and :meth:`.SeriesGroupBy.transform` with the ``numba`` engine (:issue:`36240`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:572
msgid ":class:`.Styler` uuid method altered to compress data transmission over web whilst maintaining reasonably low table collision probability (:issue:`36345`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:573
msgid "Performance improvement in :func:`to_datetime` with non-ns time unit for ``float`` ``dtype`` columns (:issue:`20445`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:574
msgid "Performance improvement in setting values on an :class:`IntervalArray` (:issue:`36310`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:575
msgid "The internal index method :meth:`~Index._shallow_copy` now makes the new index and original index share cached attributes, avoiding creating these again, if created on either. This can speed up operations that depend on creating copies of existing indexes (:issue:`36840`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:576
msgid "Performance improvement in :meth:`.RollingGroupby.count` (:issue:`35625`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:577
msgid "Small performance decrease to :meth:`.Rolling.min` and :meth:`.Rolling.max` for fixed windows (:issue:`36567`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:578
msgid "Reduced peak memory usage in :meth:`DataFrame.to_pickle` when using ``protocol=5`` in python 3.8+ (:issue:`34244`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:579
msgid "Faster ``dir`` calls when the object has many index labels, e.g. ``dir(ser)`` (:issue:`37450`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:580
msgid "Performance improvement in :class:`ExpandingGroupby` (:issue:`37064`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:581
msgid "Performance improvement in :meth:`Series.astype` and :meth:`DataFrame.astype` for :class:`Categorical` (:issue:`8628`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:582
msgid "Performance improvement in :meth:`DataFrame.groupby` for ``float`` ``dtype`` (:issue:`28303`), changes of the underlying hash-function can lead to changes in float based indexes sort ordering for ties (e.g. :meth:`Index.value_counts`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:583
msgid "Performance improvement in :meth:`pd.isin` for inputs with more than 1e6 elements (:issue:`36611`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:584
msgid "Performance improvement for :meth:`DataFrame.__setitem__` with list-like indexers (:issue:`37954`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:585
msgid ":meth:`read_json` now avoids reading entire file into memory when chunksize is specified (:issue:`34548`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:592
msgid "Bug fixes"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:595
msgid "Categorical"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:596
msgid ":meth:`Categorical.fillna` will always return a copy, validate a passed fill value regardless of whether there are any NAs to fill, and disallow an ``NaT`` as a fill value for numeric categories (:issue:`36530`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:597
msgid "Bug in :meth:`Categorical.__setitem__` that incorrectly raised when trying to set a tuple value (:issue:`20439`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:598
msgid "Bug in :meth:`CategoricalIndex.equals` incorrectly casting non-category entries to ``np.nan`` (:issue:`37667`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:599
msgid "Bug in :meth:`CategoricalIndex.where` incorrectly setting non-category entries to ``np.nan`` instead of raising ``TypeError`` (:issue:`37977`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:600
msgid "Bug in :meth:`Categorical.to_numpy` and ``np.array(categorical)`` with tz-aware ``datetime64`` categories incorrectly dropping the time zone information instead of casting to object dtype (:issue:`38136`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:603
msgid "Datetime-like"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:604
msgid "Bug in :meth:`DataFrame.combine_first` that would convert datetime-like column on other :class:`DataFrame` to integer when the column is not present in original :class:`DataFrame` (:issue:`28481`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:605
msgid "Bug in :attr:`.DatetimeArray.date` where a ``ValueError`` would be raised with a read-only backing array (:issue:`33530`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:606
msgid "Bug in ``NaT`` comparisons failing to raise ``TypeError`` on invalid inequality comparisons (:issue:`35046`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:607
msgid "Bug in :class:`.DateOffset` where attributes reconstructed from pickle files differ from original objects when input values exceed normal ranges (e.g. months=12) (:issue:`34511`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:608
msgid "Bug in :meth:`.DatetimeIndex.get_slice_bound` where ``datetime.date`` objects were not accepted or naive :class:`Timestamp` with a tz-aware :class:`.DatetimeIndex` (:issue:`35690`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:609
msgid "Bug in :meth:`.DatetimeIndex.slice_locs` where ``datetime.date`` objects were not accepted (:issue:`34077`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:610
msgid "Bug in :meth:`.DatetimeIndex.searchsorted`, :meth:`.TimedeltaIndex.searchsorted`, :meth:`PeriodIndex.searchsorted`, and :meth:`Series.searchsorted` with ``datetime64``, ``timedelta64`` or :class:`Period` dtype placement of ``NaT`` values being inconsistent with NumPy (:issue:`36176`, :issue:`36254`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:611
msgid "Inconsistency in :class:`.DatetimeArray`, :class:`.TimedeltaArray`, and :class:`.PeriodArray` method ``__setitem__`` casting arrays of strings to datetime-like scalars but not scalar strings (:issue:`36261`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:612
msgid "Bug in :meth:`.DatetimeArray.take` incorrectly allowing ``fill_value`` with a mismatched time zone (:issue:`37356`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:613
msgid "Bug in :class:`.DatetimeIndex.shift` incorrectly raising when shifting empty indexes (:issue:`14811`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:614
msgid ":class:`Timestamp` and :class:`.DatetimeIndex` comparisons between tz-aware and tz-naive objects now follow the standard library ``datetime`` behavior, returning ``True``/``False`` for ``!=``/``==`` and raising for inequality comparisons (:issue:`28507`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:615
msgid "Bug in :meth:`.DatetimeIndex.equals` and :meth:`.TimedeltaIndex.equals` incorrectly considering ``int64`` indexes as equal (:issue:`36744`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:616
msgid ":meth:`Series.to_json`, :meth:`DataFrame.to_json`, and :meth:`read_json` now implement time zone parsing when orient structure is ``table`` (:issue:`35973`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:617
msgid ":meth:`astype` now attempts to convert to ``datetime64[ns, tz]`` directly from ``object`` with inferred time zone from string (:issue:`35973`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:618
msgid "Bug in :meth:`.TimedeltaIndex.sum` and :meth:`Series.sum` with ``timedelta64`` dtype on an empty index or series returning ``NaT`` instead of ``Timedelta(0)`` (:issue:`31751`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:619
msgid "Bug in :meth:`.DatetimeArray.shift` incorrectly allowing ``fill_value`` with a mismatched time zone (:issue:`37299`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:620
msgid "Bug in adding a :class:`.BusinessDay` with nonzero ``offset`` to a non-scalar other (:issue:`37457`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:621
msgid "Bug in :func:`to_datetime` with a read-only array incorrectly raising (:issue:`34857`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:622
msgid "Bug in :meth:`Series.isin` with ``datetime64[ns]`` dtype and :meth:`.DatetimeIndex.isin` incorrectly casting integers to datetimes (:issue:`36621`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:623
msgid "Bug in :meth:`Series.isin` with ``datetime64[ns]`` dtype and :meth:`.DatetimeIndex.isin` failing to consider tz-aware and tz-naive datetimes as always different (:issue:`35728`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:624
msgid "Bug in :meth:`Series.isin` with ``PeriodDtype`` dtype and :meth:`PeriodIndex.isin` failing to consider arguments with different ``PeriodDtype`` as always different (:issue:`37528`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:625
msgid "Bug in :class:`Period` constructor now correctly handles nanoseconds in the ``value`` argument (:issue:`34621` and :issue:`17053`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:628
msgid "Timedelta"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:629
msgid "Bug in :class:`.TimedeltaIndex`, :class:`Series`, and :class:`DataFrame` floor-division with ``timedelta64`` dtypes and ``NaT`` in the denominator (:issue:`35529`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:630
msgid "Bug in parsing of ISO 8601 durations in :class:`Timedelta` and :func:`to_datetime` (:issue:`29773`, :issue:`36204`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:631
msgid "Bug in :func:`to_timedelta` with a read-only array incorrectly raising (:issue:`34857`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:632
msgid "Bug in :class:`Timedelta` incorrectly truncating to sub-second portion of a string input when it has precision higher than nanoseconds (:issue:`36738`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:635
msgid "Timezones"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:637
msgid "Bug in :func:`date_range` was raising ``AmbiguousTimeError`` for valid input with ``ambiguous=False`` (:issue:`35297`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:638
msgid "Bug in :meth:`Timestamp.replace` was losing fold information (:issue:`37610`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:642
msgid "Numeric"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:643
msgid "Bug in :func:`to_numeric` where float precision was incorrect (:issue:`31364`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:644
msgid "Bug in :meth:`DataFrame.any` with ``axis=1`` and ``bool_only=True`` ignoring the ``bool_only`` keyword (:issue:`32432`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:645
msgid "Bug in :meth:`Series.equals` where a ``ValueError`` was raised when NumPy arrays were compared to scalars (:issue:`35267`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:646
msgid "Bug in :class:`Series` where two Series each have a :class:`.DatetimeIndex` with different time zones having those indexes incorrectly changed when performing arithmetic operations (:issue:`33671`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:647
msgid "Bug in :mod:`pandas.testing` module functions when used with ``check_exact=False`` on complex numeric types (:issue:`28235`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:648
msgid "Bug in :meth:`DataFrame.__rmatmul__` error handling reporting transposed shapes (:issue:`21581`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:649
msgid "Bug in :class:`Series` flex arithmetic methods where the result when operating with a ``list``, ``tuple`` or ``np.ndarray`` would have an incorrect name (:issue:`36760`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:650
msgid "Bug in :class:`.IntegerArray` multiplication with ``timedelta`` and ``np.timedelta64`` objects (:issue:`36870`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:651
msgid "Bug in :class:`MultiIndex` comparison with tuple incorrectly treating tuple as array-like (:issue:`21517`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:652
msgid "Bug in :meth:`DataFrame.diff` with ``datetime64`` dtypes including ``NaT`` values failing to fill ``NaT`` results correctly (:issue:`32441`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:653
msgid "Bug in :class:`DataFrame` arithmetic ops incorrectly accepting keyword arguments (:issue:`36843`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:654
msgid "Bug in :class:`.IntervalArray` comparisons with :class:`Series` not returning Series (:issue:`36908`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:655
msgid "Bug in :class:`DataFrame` allowing arithmetic operations with list of array-likes with undefined results. Behavior changed to raising ``ValueError`` (:issue:`36702`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:656
msgid "Bug in :meth:`DataFrame.std` with ``timedelta64`` dtype and ``skipna=False`` (:issue:`37392`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:657
msgid "Bug in :meth:`DataFrame.min` and :meth:`DataFrame.max` with ``datetime64`` dtype and ``skipna=False`` (:issue:`36907`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:658
msgid "Bug in :meth:`DataFrame.idxmax` and :meth:`DataFrame.idxmin` with mixed dtypes incorrectly raising ``TypeError`` (:issue:`38195`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:661
msgid "Conversion"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:663
msgid "Bug in :meth:`DataFrame.to_dict` with ``orient='records'`` now returns python native datetime objects for datetime-like columns (:issue:`21256`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:664
msgid "Bug in :meth:`Series.astype` conversion from ``string`` to ``float`` raised in presence of ``pd.NA`` values (:issue:`37626`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:667
msgid "Strings"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:668
msgid "Bug in :meth:`Series.to_string`, :meth:`DataFrame.to_string`, and :meth:`DataFrame.to_latex` adding a leading space when ``index=False`` (:issue:`24980`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:669
msgid "Bug in :func:`to_numeric` raising a ``TypeError`` when attempting to convert a string dtype Series containing only numeric strings and ``NA`` (:issue:`37262`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:672
msgid "Interval"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:674
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` where :class:`Interval` dtypes would be converted to object dtypes (:issue:`34871`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:675
msgid "Bug in :meth:`IntervalIndex.take` with negative indices and ``fill_value=None`` (:issue:`37330`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:676
msgid "Bug in :meth:`IntervalIndex.putmask` with datetime-like dtype incorrectly casting to object dtype (:issue:`37968`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:677
msgid "Bug in :meth:`IntervalArray.astype` incorrectly dropping dtype information with a :class:`CategoricalDtype` object (:issue:`37984`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:680
msgid "Indexing"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:682
msgid "Bug in :meth:`PeriodIndex.get_loc` incorrectly raising ``ValueError`` on non-datelike strings instead of ``KeyError``, causing similar errors in :meth:`Series.__getitem__`, :meth:`Series.__contains__`, and :meth:`Series.loc.__getitem__` (:issue:`34240`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:683
msgid "Bug in :meth:`Index.sort_values` where, when empty values were passed, the method would break by trying to compare missing values instead of pushing them to the end of the sort order (:issue:`35584`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:684
msgid "Bug in :meth:`Index.get_indexer` and :meth:`Index.get_indexer_non_unique` where ``int64`` arrays are returned instead of ``intp`` (:issue:`36359`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:685
msgid "Bug in :meth:`DataFrame.sort_index` where parameter ascending passed as a list on a single level index gives wrong result (:issue:`32334`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:686
msgid "Bug in :meth:`DataFrame.reset_index` was incorrectly raising a ``ValueError`` for input with a :class:`MultiIndex` with missing values in a level with ``Categorical`` dtype (:issue:`24206`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:687
msgid "Bug in indexing with boolean masks on datetime-like values sometimes returning a view instead of a copy (:issue:`36210`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:688
msgid "Bug in :meth:`DataFrame.__getitem__` and :meth:`DataFrame.loc.__getitem__` with :class:`IntervalIndex` columns and a numeric indexer (:issue:`26490`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:689
msgid "Bug in :meth:`Series.loc.__getitem__` with a non-unique :class:`MultiIndex` and an empty-list indexer (:issue:`13691`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:690
msgid "Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`MultiIndex` and a level named ``\"0\"`` (:issue:`37194`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:691
msgid "Bug in :meth:`Series.__getitem__` when using an unsigned integer array as an indexer giving incorrect results or segfaulting instead of raising ``KeyError`` (:issue:`37218`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:692
msgid "Bug in :meth:`Index.where` incorrectly casting numeric values to strings (:issue:`37591`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:693
msgid "Bug in :meth:`DataFrame.loc` returning empty result when indexer is a slice with negative step size (:issue:`38071`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:694
msgid "Bug in :meth:`Series.loc` and :meth:`DataFrame.loc` raises when the index was of ``object`` dtype and the given numeric label was in the index (:issue:`26491`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:695
msgid "Bug in :meth:`DataFrame.loc` returned requested key plus missing values when ``loc`` was applied to single level from a :class:`MultiIndex` (:issue:`27104`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:696
msgid "Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`CategoricalIndex` using a list-like indexer containing NA values (:issue:`37722`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:697
msgid "Bug in :meth:`DataFrame.loc.__setitem__` expanding an empty :class:`DataFrame` with mixed dtypes (:issue:`37932`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:698
msgid "Bug in :meth:`DataFrame.xs` ignored ``droplevel=False`` for columns (:issue:`19056`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:699
msgid "Bug in :meth:`DataFrame.reindex` raising ``IndexingError`` wrongly for empty DataFrame with ``tolerance`` not ``None`` or ``method=\"nearest\"`` (:issue:`27315`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:700
msgid "Bug in indexing on a :class:`Series` or :class:`DataFrame` with a :class:`CategoricalIndex` using list-like indexer that contains elements that are in the index's ``categories`` but not in the index itself failing to raise ``KeyError`` (:issue:`37901`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:701
msgid "Bug on inserting a boolean label into a :class:`DataFrame` with a numeric :class:`Index` columns incorrectly casting to integer (:issue:`36319`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:702
msgid "Bug in :meth:`DataFrame.iloc` and :meth:`Series.iloc` aligning objects in ``__setitem__`` (:issue:`22046`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:703
msgid "Bug in :meth:`MultiIndex.drop` does not raise if labels are partially found (:issue:`37820`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:704
msgid "Bug in :meth:`DataFrame.loc` did not raise ``KeyError`` when missing combination was given with ``slice(None)`` for remaining levels (:issue:`19556`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:705
msgid "Bug in :meth:`DataFrame.loc` raising ``TypeError`` when non-integer slice was given to select values from :class:`MultiIndex` (:issue:`25165`, :issue:`24263`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:706
msgid "Bug in :meth:`Series.at` returning :class:`Series` with one element instead of scalar when index is a :class:`MultiIndex` with one level (:issue:`38053`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:707
msgid "Bug in :meth:`DataFrame.loc` returning and assigning elements in wrong order when indexer is differently ordered than the :class:`MultiIndex` to filter (:issue:`31330`, :issue:`34603`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:708
msgid "Bug in :meth:`DataFrame.loc` and :meth:`DataFrame.__getitem__`  raising ``KeyError`` when columns were :class:`MultiIndex` with only one level (:issue:`29749`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:709
msgid "Bug in :meth:`Series.__getitem__` and :meth:`DataFrame.__getitem__` raising blank ``KeyError`` without missing keys for :class:`IntervalIndex` (:issue:`27365`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:710
msgid "Bug in setting a new label on a :class:`DataFrame` or :class:`Series` with a :class:`CategoricalIndex` incorrectly raising ``TypeError`` when the new label is not among the index's categories (:issue:`38098`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:711
msgid "Bug in :meth:`Series.loc` and :meth:`Series.iloc` raising ``ValueError`` when inserting a list-like ``np.array``, ``list`` or ``tuple`` in an ``object`` Series of equal length (:issue:`37748`, :issue:`37486`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:712
msgid "Bug in :meth:`Series.loc` and :meth:`Series.iloc` setting all the values of an ``object`` Series with those of a list-like ``ExtensionArray`` instead of inserting it (:issue:`38271`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:715
msgid "Missing"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:717
msgid "Bug in :meth:`.SeriesGroupBy.transform` now correctly handles missing values for ``dropna=False`` (:issue:`35014`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:718
msgid "Bug in :meth:`Series.nunique` with ``dropna=True`` was returning incorrect results when both ``NA`` and ``None`` missing values were present (:issue:`37566`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:719
msgid "Bug in :meth:`Series.interpolate` where kwarg ``limit_area`` and ``limit_direction`` had no effect when using methods ``pad`` and ``backfill`` (:issue:`31048`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:722
msgid "MultiIndex"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:724
msgid "Bug in :meth:`DataFrame.xs` when used with :class:`IndexSlice` raises ``TypeError`` with message ``\"Expected label or tuple of labels\"`` (:issue:`35301`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:725
msgid "Bug in :meth:`DataFrame.reset_index` with ``NaT`` values in index raises ``ValueError`` with message ``\"cannot convert float NaN to integer\"`` (:issue:`36541`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:726
msgid "Bug in :meth:`DataFrame.combine_first` when used with :class:`MultiIndex` containing string and ``NaN`` values raises ``TypeError`` (:issue:`36562`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:727
msgid "Bug in :meth:`MultiIndex.drop` dropped ``NaN`` values when non existing key was given as input (:issue:`18853`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:728
msgid "Bug in :meth:`MultiIndex.drop` dropping more values than expected when index has duplicates and is not sorted (:issue:`33494`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:731
msgid "I/O"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:733
msgid ":func:`read_sas` no longer leaks resources on failure (:issue:`35566`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:734
msgid "Bug in :meth:`DataFrame.to_csv` and :meth:`Series.to_csv` caused a ``ValueError`` when it was called with a filename in combination with ``mode`` containing a ``b`` (:issue:`35058`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:735
msgid "Bug in :meth:`read_csv` with ``float_precision='round_trip'`` did not handle ``decimal`` and ``thousands`` parameters (:issue:`35365`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:736
msgid ":meth:`to_pickle` and :meth:`read_pickle` were closing user-provided file objects (:issue:`35679`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:737
msgid ":meth:`to_csv` passes compression arguments for ``'gzip'`` always to ``gzip.GzipFile`` (:issue:`28103`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:738
msgid ":meth:`to_csv` did not support zip compression for binary file object not having a filename (:issue:`35058`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:739
msgid ":meth:`to_csv` and :meth:`read_csv` did not honor ``compression`` and ``encoding`` for path-like objects that are internally converted to file-like objects (:issue:`35677`, :issue:`26124`, :issue:`32392`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:740
msgid ":meth:`DataFrame.to_pickle`, :meth:`Series.to_pickle`, and :meth:`read_pickle` did not support compression for file-objects (:issue:`26237`, :issue:`29054`, :issue:`29570`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:741
msgid "Bug in :func:`LongTableBuilder.middle_separator` was duplicating LaTeX longtable entries in the List of Tables of a LaTeX document (:issue:`34360`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:742
msgid "Bug in :meth:`read_csv` with ``engine='python'`` truncating data if multiple items present in first row and first element started with BOM (:issue:`36343`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:743
msgid "Removed ``private_key`` and ``verbose`` from :func:`read_gbq` as they are no longer supported in ``pandas-gbq`` (:issue:`34654`, :issue:`30200`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:744
msgid "Bumped minimum pytables version to 3.5.1 to avoid a ``ValueError`` in :meth:`read_hdf` (:issue:`24839`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:745
msgid "Bug in :func:`read_table` and :func:`read_csv` when ``delim_whitespace=True`` and ``sep=default`` (:issue:`36583`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:746
msgid "Bug in :meth:`DataFrame.to_json` and :meth:`Series.to_json` when used with ``lines=True`` and ``orient='records'`` the last line of the record is not appended with 'new line character' (:issue:`36888`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:747
msgid "Bug in :meth:`read_parquet` with fixed offset time zones. String representation of time zones was not recognized (:issue:`35997`, :issue:`36004`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:748
msgid "Bug in :meth:`DataFrame.to_html`, :meth:`DataFrame.to_string`, and :meth:`DataFrame.to_latex` ignoring the ``na_rep`` argument when ``float_format`` was also specified (:issue:`9046`, :issue:`13828`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:749
msgid "Bug in output rendering of complex numbers showing too many trailing zeros (:issue:`36799`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:750
msgid "Bug in :class:`HDFStore` threw a ``TypeError`` when exporting an empty DataFrame with ``datetime64[ns, tz]`` dtypes with a fixed HDF5 store (:issue:`20594`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:751
msgid "Bug in :class:`HDFStore` was dropping time zone information when exporting a Series with ``datetime64[ns, tz]`` dtypes with a fixed HDF5 store (:issue:`20594`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:752
msgid ":func:`read_csv` was closing user-provided binary file handles when ``engine=\"c\"`` and an ``encoding`` was requested (:issue:`36980`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:753
msgid "Bug in :meth:`DataFrame.to_hdf` was not dropping missing rows with ``dropna=True`` (:issue:`35719`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:754
msgid "Bug in :func:`read_html` was raising a ``TypeError`` when supplying a ``pathlib.Path`` argument to the ``io`` parameter (:issue:`37705`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:755
msgid ":meth:`DataFrame.to_excel`, :meth:`Series.to_excel`, :meth:`DataFrame.to_markdown`, and :meth:`Series.to_markdown` now support writing to fsspec URLs such as S3 and Google Cloud Storage (:issue:`33987`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:756
msgid "Bug in :func:`read_fwf` with ``skip_blank_lines=True`` was not skipping blank lines (:issue:`37758`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:757
msgid "Parse missing values using :func:`read_json` with ``dtype=False`` to ``NaN`` instead of ``None`` (:issue:`28501`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:758
msgid ":meth:`read_fwf` was inferring compression with ``compression=None`` which was not consistent with the other ``read_*`` functions (:issue:`37909`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:759
msgid ":meth:`DataFrame.to_html` was ignoring ``formatters`` argument for ``ExtensionDtype`` columns (:issue:`36525`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:760
msgid "Bumped minimum xarray version to 0.12.3 to avoid reference to the removed ``Panel`` class (:issue:`27101`, :issue:`37983`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:761
msgid ":meth:`DataFrame.to_csv` was re-opening file-like handles that also implement ``os.PathLike`` (:issue:`38125`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:762
msgid "Bug in the conversion of a sliced ``pyarrow.Table`` with missing values to a DataFrame (:issue:`38525`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:763
msgid "Bug in :func:`read_sql_table` raising a ``sqlalchemy.exc.OperationalError`` when column names contained a percentage sign (:issue:`37517`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:766
msgid "Period"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:768
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` where :class:`Period` dtypes would be converted to object dtypes (:issue:`34871`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:771
msgid "Plotting"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:773
msgid "Bug in :meth:`DataFrame.plot` was rotating xticklabels when ``subplots=True``, even if the x-axis wasn't an irregular time series (:issue:`29460`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:774
msgid "Bug in :meth:`DataFrame.plot` where a marker letter in the ``style`` keyword sometimes caused a ``ValueError`` (:issue:`21003`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:775
msgid "Bug in :meth:`DataFrame.plot.bar` and :meth:`Series.plot.bar` where ticks positions were assigned by value order instead of using the actual value for numeric or a smart ordering for string (:issue:`26186`, :issue:`11465`). This fix has been reverted in pandas 1.2.1, see :doc:`v1.2.1`"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:776
msgid "Twinned axes were losing their tick labels which should only happen to all but the last row or column of 'externally' shared axes (:issue:`33819`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:777
msgid "Bug in :meth:`Series.plot` and :meth:`DataFrame.plot` was throwing a :exc:`ValueError` when the Series or DataFrame was indexed by a :class:`.TimedeltaIndex` with a fixed frequency and the x-axis lower limit was greater than the upper limit (:issue:`37454`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:779
msgid "Bug in :meth:`.DataFrameGroupBy.boxplot` when ``subplots=False`` would raise a ``KeyError`` (:issue:`16748`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:780
msgid "Bug in :meth:`DataFrame.plot` and :meth:`Series.plot` was overwriting matplotlib's shared y axes behavior when no ``sharey`` parameter was passed (:issue:`37942`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:781
msgid "Bug in :meth:`DataFrame.plot` was raising a ``TypeError`` with ``ExtensionDtype`` columns (:issue:`32073`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:784
msgid "Styler"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:786
msgid "Bug in :meth:`Styler.render` HTML was generated incorrectly because of formatting error in ``rowspan`` attribute, it now matches with w3 syntax (:issue:`38234`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:789
msgid "Groupby/resample/rolling"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:791
msgid "Bug in :meth:`.DataFrameGroupBy.count` and :meth:`SeriesGroupBy.sum` returning ``NaN`` for missing categories when grouped on multiple ``Categoricals``. Now returning ``0`` (:issue:`35028`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:792
msgid "Bug in :meth:`.DataFrameGroupBy.apply` that would sometimes throw an erroneous ``ValueError`` if the grouping axis had duplicate entries (:issue:`16646`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:793
msgid "Bug in :meth:`DataFrame.resample` that would throw a ``ValueError`` when resampling from ``\"D\"`` to ``\"24H\"`` over a transition into daylight savings time (DST) (:issue:`35219`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:794
msgid "Bug when combining methods :meth:`DataFrame.groupby` with :meth:`DataFrame.resample` and :meth:`DataFrame.interpolate` raising a ``TypeError`` (:issue:`35325`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:795
msgid "Bug in :meth:`.DataFrameGroupBy.apply` where a non-nuisance grouping column would be dropped from the output columns if another groupby method was called before ``.apply`` (:issue:`34656`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:796
msgid "Bug when subsetting columns on a :class:`~pandas.core.groupby.DataFrameGroupBy` (e.g. ``df.groupby('a')[['b']])``) would reset the attributes ``axis``, ``dropna``, ``group_keys``, ``level``, ``mutated``, ``sort``, and ``squeeze`` to their default values (:issue:`9959`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:797
msgid "Bug in :meth:`.DataFrameGroupBy.tshift` failing to raise ``ValueError`` when a frequency cannot be inferred for the index of a group (:issue:`35937`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:798
msgid "Bug in :meth:`DataFrame.groupby` does not always maintain column index name for ``any``, ``all``, ``bfill``, ``ffill``, ``shift`` (:issue:`29764`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:799
msgid "Bug in :meth:`.DataFrameGroupBy.apply` raising error with ``np.nan`` group(s) when ``dropna=False`` (:issue:`35889`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:800
msgid "Bug in :meth:`.Rolling.sum` returned wrong values when dtypes where mixed between float and integer and ``axis=1`` (:issue:`20649`, :issue:`35596`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:801
msgid "Bug in :meth:`.Rolling.count` returned ``np.nan`` with :class:`~pandas.api.indexers.FixedForwardWindowIndexer` as window, ``min_periods=0`` and only missing values in the window (:issue:`35579`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:802
msgid "Bug where :class:`pandas.core.window.Rolling` produces incorrect window sizes when using a ``PeriodIndex`` (:issue:`34225`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:803
msgid "Bug in :meth:`.DataFrameGroupBy.ffill` and :meth:`.DataFrameGroupBy.bfill` where a ``NaN`` group would return filled values instead of ``NaN`` when ``dropna=True`` (:issue:`34725`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:804
msgid "Bug in :meth:`.RollingGroupby.count` where a ``ValueError`` was raised when specifying the ``closed`` parameter (:issue:`35869`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:805
msgid "Bug in :meth:`.DataFrameGroupBy.rolling` returning wrong values with partial centered window (:issue:`36040`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:806
msgid "Bug in :meth:`.DataFrameGroupBy.rolling` returned wrong values with time aware window containing ``NaN``. Raises ``ValueError`` because windows are not monotonic now (:issue:`34617`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:807
msgid "Bug in :meth:`.Rolling.__iter__` where a ``ValueError`` was not raised when ``min_periods`` was larger than ``window`` (:issue:`37156`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:808
msgid "Using :meth:`.Rolling.var` instead of :meth:`.Rolling.std` avoids numerical issues for :meth:`.Rolling.corr` when :meth:`.Rolling.var` is still within floating point precision while :meth:`.Rolling.std` is not (:issue:`31286`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:809
msgid "Bug in :meth:`.DataFrameGroupBy.quantile` and :meth:`.Resampler.quantile` raised ``TypeError`` when values were of type ``Timedelta`` (:issue:`29485`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:810
msgid "Bug in :meth:`.Rolling.median` and :meth:`.Rolling.quantile` returned wrong values for :class:`.BaseIndexer` subclasses with non-monotonic starting or ending points for windows (:issue:`37153`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:811
msgid "Bug in :meth:`DataFrame.groupby` dropped ``nan`` groups from result with ``dropna=False`` when grouping over a single column (:issue:`35646`, :issue:`35542`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:812
msgid "Bug in :meth:`.DataFrameGroupBy.head`, :meth:`DataFrameGroupBy.tail`, :meth:`SeriesGroupBy.head`, and :meth:`SeriesGroupBy.tail` would raise when used with ``axis=1`` (:issue:`9772`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:813
msgid "Bug in :meth:`.DataFrameGroupBy.transform` would raise when used with ``axis=1`` and a transformation kernel (e.g. \"shift\") (:issue:`36308`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:814
msgid "Bug in :meth:`.DataFrameGroupBy.resample` using ``.agg`` with sum produced different result than just calling ``.sum`` (:issue:`33548`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:815
msgid "Bug in :meth:`.DataFrameGroupBy.apply` dropped values on ``nan`` group when returning the same axes with the original frame (:issue:`38227`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:816
msgid "Bug in :meth:`.DataFrameGroupBy.quantile` couldn't handle with arraylike ``q`` when grouping by columns (:issue:`33795`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:817
msgid "Bug in :meth:`DataFrameGroupBy.rank` with ``datetime64tz`` or period dtype incorrectly casting results to those dtypes instead of returning ``float64`` dtype (:issue:`38187`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:820
msgid "Reshaping"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:822
msgid "Bug in :meth:`DataFrame.crosstab` was returning incorrect results on inputs with duplicate row names, duplicate column names or duplicate names between row and column labels (:issue:`22529`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:823
msgid "Bug in :meth:`DataFrame.pivot_table` with ``aggfunc='count'`` or ``aggfunc='sum'`` returning ``NaN`` for missing categories when pivoted on a ``Categorical``. Now returning ``0`` (:issue:`31422`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:824
msgid "Bug in :func:`concat` and :class:`DataFrame` constructor where input index names are not preserved in some cases (:issue:`13475`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:825
msgid "Bug in func :meth:`crosstab` when using multiple columns with ``margins=True`` and ``normalize=True`` (:issue:`35144`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:826
msgid "Bug in :meth:`DataFrame.stack` where an empty DataFrame.stack would raise an error (:issue:`36113`). Now returning an empty Series with empty MultiIndex."
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:827
msgid "Bug in :meth:`Series.unstack`. Now a Series with single level of Index trying to unstack would raise a ``ValueError`` (:issue:`36113`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:828
msgid "Bug in :meth:`DataFrame.agg` with ``func={'name':<FUNC>}`` incorrectly raising ``TypeError`` when ``DataFrame.columns==['Name']`` (:issue:`36212`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:829
msgid "Bug in :meth:`Series.transform` would give incorrect results or raise when the argument ``func`` was a dictionary (:issue:`35811`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:830
msgid "Bug in :meth:`DataFrame.pivot` did not preserve :class:`MultiIndex` level names for columns when rows and columns are both multiindexed (:issue:`36360`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:831
msgid "Bug in :meth:`DataFrame.pivot` modified ``index`` argument when ``columns`` was passed but ``values`` was not (:issue:`37635`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:832
msgid "Bug in :meth:`DataFrame.join` returned a non deterministic level-order for the resulting :class:`MultiIndex` (:issue:`36910`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:833
msgid "Bug in :meth:`DataFrame.combine_first` caused wrong alignment with dtype ``string`` and one level of ``MultiIndex`` containing only ``NA`` (:issue:`37591`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:834
msgid "Fixed regression in :func:`merge` on merging :class:`.DatetimeIndex` with empty DataFrame (:issue:`36895`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:835
msgid "Bug in :meth:`DataFrame.apply` not setting index of return value when ``func`` return type is ``dict`` (:issue:`37544`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:836
msgid "Bug in :meth:`DataFrame.merge` and :meth:`pandas.merge` returning inconsistent ordering in result for ``how=right`` and ``how=left`` (:issue:`35382`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:837
msgid "Bug in :func:`merge_ordered` couldn't handle list-like ``left_by`` or ``right_by`` (:issue:`35269`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:838
msgid "Bug in :func:`merge_ordered` returned wrong join result when length of ``left_by`` or ``right_by`` equals to the rows of ``left`` or ``right`` (:issue:`38166`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:839
msgid "Bug in :func:`merge_ordered` didn't raise when elements in ``left_by`` or ``right_by`` not exist in ``left`` columns or ``right`` columns (:issue:`38167`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:840
msgid "Bug in :func:`DataFrame.drop_duplicates` not validating bool dtype for ``ignore_index`` keyword (:issue:`38274`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:843
msgid "ExtensionArray"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:845
msgid "Fixed bug where :class:`DataFrame` column set to scalar extension type via a dict instantiation was considered an object type rather than the extension type (:issue:`35965`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:846
msgid "Fixed bug where ``astype()`` with equal dtype and ``copy=False`` would return a new object (:issue:`28488`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:847
msgid "Fixed bug when applying a NumPy ufunc with multiple outputs to an :class:`.IntegerArray` returning ``None`` (:issue:`36913`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:848
msgid "Fixed an inconsistency in :class:`.PeriodArray`'s ``__init__`` signature to those of :class:`.DatetimeArray` and :class:`.TimedeltaArray` (:issue:`37289`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:849
msgid "Reductions for :class:`.BooleanArray`, :class:`.Categorical`, :class:`.DatetimeArray`, :class:`.FloatingArray`, :class:`.IntegerArray`, :class:`.PeriodArray`, :class:`.TimedeltaArray`, and :class:`.PandasArray` are now keyword-only methods (:issue:`37541`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:850
msgid "Fixed a bug where a  ``TypeError`` was wrongly raised if a membership check was made on an ``ExtensionArray`` containing nan-like values (:issue:`37867`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:853
msgid "Other"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:855
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly raising an ``AssertionError`` instead of a ``ValueError`` when invalid parameter combinations are passed (:issue:`36045`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:856
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` with numeric values and string ``to_replace`` (:issue:`34789`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:857
msgid "Fixed metadata propagation in :meth:`Series.abs` and ufuncs called on Series and DataFrames (:issue:`28283`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:858
msgid "Bug in :meth:`DataFrame.replace` and :meth:`Series.replace` incorrectly casting from ``PeriodDtype`` to object dtype (:issue:`34871`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:859
msgid "Fixed bug in metadata propagation incorrectly copying DataFrame columns as metadata when the column name overlaps with the metadata name (:issue:`37037`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:860
msgid "Fixed metadata propagation in the :class:`Series.dt`, :class:`Series.str` accessors, :class:`DataFrame.duplicated`, :class:`DataFrame.stack`, :class:`DataFrame.unstack`, :class:`DataFrame.pivot`, :class:`DataFrame.append`, :class:`DataFrame.diff`, :class:`DataFrame.applymap` and :class:`DataFrame.update` methods (:issue:`28283`, :issue:`37381`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:861
msgid "Fixed metadata propagation when selecting columns with ``DataFrame.__getitem__`` (:issue:`28283`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:862
msgid "Bug in :meth:`Index.intersection` with non-:class:`Index` failing to set the correct name on the returned :class:`Index` (:issue:`38111`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:863
msgid "Bug in :meth:`RangeIndex.intersection` failing to set the correct name on the returned :class:`Index` in some corner cases (:issue:`38197`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:864
msgid "Bug in :meth:`Index.difference` failing to set the correct name on the returned :class:`Index` in some corner cases (:issue:`38268`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:865
msgid "Bug in :meth:`Index.union` behaving differently depending on whether operand is an :class:`Index` or other list-like (:issue:`36384`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:866
msgid "Bug in :meth:`Index.intersection` with non-matching numeric dtypes casting to ``object`` dtype instead of minimal common dtype (:issue:`38122`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:867
msgid "Bug in :meth:`IntervalIndex.union` returning an incorrectly-typed :class:`Index` when empty (:issue:`38282`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:868
msgid "Passing an array with 2 or more dimensions to the :class:`Series` constructor now raises the more specific ``ValueError`` rather than a bare ``Exception`` (:issue:`35744`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:869
msgid "Bug in ``dir`` where ``dir(obj)`` wouldn't show attributes defined on the instance for pandas objects (:issue:`37173`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:870
msgid "Bug in :meth:`Index.drop` raising ``InvalidIndexError`` when index has duplicates (:issue:`38051`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:871
msgid "Bug in :meth:`RangeIndex.difference` returning :class:`Int64Index` in some cases where it should return :class:`RangeIndex` (:issue:`38028`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:872
msgid "Fixed bug in :func:`assert_series_equal` when comparing a datetime-like array with an equivalent non extension dtype array (:issue:`37609`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:873
msgid "Bug in :func:`.is_bool_dtype` would raise when passed a valid string such as ``\"boolean\"`` (:issue:`38386`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:874
msgid "Fixed regression in logical operators raising ``ValueError`` when columns of :class:`DataFrame` are a :class:`CategoricalIndex` with unused categories (:issue:`38367`)"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:881
msgid "Contributors"
msgstr ""

#: ../../source/whatsnew/v1.2.0.rst:883
msgid "A total of 257 people contributed patches to this release.  People with a \"+\" by their names contributed a patch for the first time."
msgstr ""
