# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/development/contributing_documentation.rst:3
msgid "{{ header }}"
msgstr ""

#: ../../source/development/contributing_documentation.rst:7
msgid "Contributing to the documentation"
msgstr ""

#: ../../source/development/contributing_documentation.rst:9
msgid "Contributing to the documentation benefits everyone who uses pandas. We encourage you to help us improve the documentation, and you don't have to be an expert on pandas to do so! In fact, there are sections of the docs that are worse off after being written by experts. If something in the docs doesn't make sense to you, updating the relevant section after you figure it out is a great way to ensure it will help the next person. Please visit the `issues page <https://github.com/pandas-dev/pandas/issues?page=1&q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs>`__ for a full list of issues that are currently open regarding the Pandas documentation."
msgstr ""

#: ../../source/development/contributing_documentation.rst:23
msgid "Documentation:"
msgstr ""

#: ../../source/development/contributing_documentation.rst:26
msgid "About the pandas documentation"
msgstr ""

#: ../../source/development/contributing_documentation.rst:28
msgid "The documentation is written in **reStructuredText**, which is almost like writing in plain English, and built using `Sphinx <https://www.sphinx-doc.org/en/master/>`__. The Sphinx Documentation has an excellent `introduction to reST <https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html>`__. Review the Sphinx docs to perform more complex changes to the documentation as well."
msgstr ""

#: ../../source/development/contributing_documentation.rst:34
msgid "Some other important things to know about the docs:"
msgstr ""

#: ../../source/development/contributing_documentation.rst:36
msgid "The pandas documentation consists of two parts: the docstrings in the code itself and the docs in this folder ``doc/``."
msgstr ""

#: ../../source/development/contributing_documentation.rst:39
msgid "The docstrings provide a clear explanation of the usage of the individual functions, while the documentation in this folder consists of tutorial-like overviews per topic together with some other information (what's new, installation, etc)."
msgstr ""

#: ../../source/development/contributing_documentation.rst:44
msgid "The docstrings follow a pandas convention, based on the **Numpy Docstring Standard**. Follow the :ref:`pandas docstring guide <docstring>` for detailed instructions on how to write a correct docstring."
msgstr ""

#: ../../source/development/contributing_documentation.rst:53
msgid "The tutorials make heavy use of the `IPython directive <https://matplotlib.org/sampledoc/ipython_directive.html>`_ sphinx extension. This directive lets you put code in the documentation which will be run during the doc build. For example::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:63
msgid "will be rendered as::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:70
msgid "Almost all code examples in the docs are run (and the output saved) during the doc build. This approach means that code examples will always be up to date, but it does make the doc building a bit more complex."
msgstr ""

#: ../../source/development/contributing_documentation.rst:74
msgid "Our API documentation files in ``doc/source/reference`` house the auto-generated documentation from the docstrings. For classes, there are a few subtleties around controlling which methods and attributes have pages auto-generated."
msgstr ""

#: ../../source/development/contributing_documentation.rst:78
msgid "We have two autosummary templates for classes."
msgstr ""

#: ../../source/development/contributing_documentation.rst:80
msgid "``_templates/autosummary/class.rst``. Use this when you want to automatically generate a page for every public method and attribute on the class. The ``Attributes`` and ``Methods`` sections will be automatically added to the class' rendered documentation by numpydoc. See ``DataFrame`` for an example."
msgstr ""

#: ../../source/development/contributing_documentation.rst:86
msgid "``_templates/autosummary/class_without_autosummary``. Use this when you want to pick a subset of methods / attributes to auto-generate pages for. When using this template, you should include an ``Attributes`` and ``Methods`` section in the class docstring. See ``CategoricalIndex`` for an example."
msgstr ""

#: ../../source/development/contributing_documentation.rst:92
msgid "Every method should be included in a ``toctree`` in one of the documentation files in ``doc/source/reference``, else Sphinx will emit a warning."
msgstr ""

#: ../../source/development/contributing_documentation.rst:96
msgid "The utility script ``scripts/validate_docstrings.py`` can be used to get a csv summary of the API documentation. And also validate common errors in the docstring of a specific class, function or method. The summary also compares the list of methods documented in the files in ``doc/source/reference`` (which is used to generate the `API Reference <https://pandas.pydata.org/pandas-docs/stable/api.html>`_ page) and the actual public methods. This will identify methods documented in ``doc/source/reference`` that are not actually class methods, and existing methods that are not documented in ``doc/source/reference``."
msgstr ""

#: ../../source/development/contributing_documentation.rst:107
msgid "Updating a pandas docstring"
msgstr ""

#: ../../source/development/contributing_documentation.rst:109
msgid "When improving a single function or method's docstring, it is not necessarily needed to build the full documentation (see next section). However, there is a script that checks a docstring (for example for the ``DataFrame.mean`` method)::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:115
msgid "This script will indicate some formatting errors if present, and will also run and test the examples included in the docstring. Check the :ref:`pandas docstring guide <docstring>` for a detailed guide on how to format the docstring."
msgstr ""

#: ../../source/development/contributing_documentation.rst:120
msgid "The examples in the docstring ('doctests') must be valid Python code, that in a deterministic way returns the presented output, and that can be copied and run by users. This can be checked with the script above, and is also tested on Travis. A failing doctest will be a blocker for merging a PR. Check the :ref:`examples <docstring.examples>` section in the docstring guide for some tips and tricks to get the doctests passing."
msgstr ""

#: ../../source/development/contributing_documentation.rst:127
msgid "When doing a PR with a docstring update, it is good to post the output of the validation script in a comment on github."
msgstr ""

#: ../../source/development/contributing_documentation.rst:133
msgid "How to build the pandas documentation"
msgstr ""

#: ../../source/development/contributing_documentation.rst:136
msgid "Requirements"
msgstr ""

#: ../../source/development/contributing_documentation.rst:138
msgid "First, you need to have a development environment to be able to build pandas (see the docs on :ref:`creating a development environment <contributing_environment>`)."
msgstr ""

#: ../../source/development/contributing_documentation.rst:142
msgid "Building the documentation"
msgstr ""

#: ../../source/development/contributing_documentation.rst:144
msgid "So how do you build the docs? Navigate to your local ``doc/`` directory in the console and run::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:149
msgid "Then you can find the HTML output in the folder ``doc/build/html/``."
msgstr ""

#: ../../source/development/contributing_documentation.rst:151
msgid "The first time you build the docs, it will take quite a while because it has to run all the code examples and build all the generated docstring pages. In subsequent evocations, sphinx will try to only build the pages that have been modified."
msgstr ""

#: ../../source/development/contributing_documentation.rst:155
msgid "If you want to do a full clean build, do::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:160
msgid "You can tell ``make.py`` to compile only a single section of the docs, greatly reducing the turn-around time for checking your changes."
msgstr ""

#: ../../source/development/contributing_documentation.rst:182
msgid "For comparison, a full documentation build may take 15 minutes, but a single section may take 15 seconds. Subsequent builds, which only process portions you have changed, will be faster."
msgstr ""

#: ../../source/development/contributing_documentation.rst:186
msgid "The build will automatically use the number of cores available on your machine to speed up the documentation build. You can override this::"
msgstr ""

#: ../../source/development/contributing_documentation.rst:191
msgid "Open the following file in a web browser to see the full documentation you just built ``doc/build/html/index.html``."
msgstr ""

#: ../../source/development/contributing_documentation.rst:194
msgid "And you'll have the satisfaction of seeing your new and improved documentation!"
msgstr ""

#: ../../source/development/contributing_documentation.rst:199
msgid "Building main branch documentation"
msgstr ""

#: ../../source/development/contributing_documentation.rst:201
msgid "When pull requests are merged into the pandas ``main`` branch, the main parts of the documentation are also built by Travis-CI. These docs are then hosted `here <https://pandas.pydata.org/docs/dev/>`__, see also the :any:`Continuous Integration <contributing.ci>` section."
msgstr ""

#: ../../source/development/contributing_documentation.rst:207
msgid "Previewing changes"
msgstr ""

#: ../../source/development/contributing_documentation.rst:209
msgid "Once, the pull request is submitted, GitHub Actions will automatically build the documentation. To view the built site:"
msgstr ""

#: ../../source/development/contributing_documentation.rst:212
msgid "Wait for the ``CI / Web and docs`` check to complete."
msgstr ""

#: ../../source/development/contributing_documentation.rst:213
msgid "Click ``Details`` next to it."
msgstr ""

#: ../../source/development/contributing_documentation.rst:214
msgid "From the ``Artifacts`` drop-down, click ``docs`` or ``website`` to download the site as a ZIP file."
msgstr ""
