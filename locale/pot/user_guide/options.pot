# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/user_guide/options.rst:3
msgid "{{ header }}"
msgstr ""

#: ../../source/user_guide/options.rst:7
msgid "Options and settings"
msgstr ""

#: ../../source/user_guide/options.rst:10
msgid "Overview"
msgstr ""

#: ../../source/user_guide/options.rst:11
msgid "pandas has an options API configure and customize global behavior related to :class:`DataFrame` display, data behavior and more."
msgstr ""

#: ../../source/user_guide/options.rst:14
msgid "Options have a full \"dotted-style\", case-insensitive name (e.g. ``display.max_rows``). You can get/set options directly as attributes of the top-level ``options`` attribute:"
msgstr ""

#: ../../source/user_guide/options.rst:25
msgid "The API is composed of 5 relevant functions, available directly from the ``pandas`` namespace:"
msgstr ""

#: ../../source/user_guide/options.rst:28
msgid ":func:`~pandas.get_option` / :func:`~pandas.set_option` - get/set the value of a single option."
msgstr ""

#: ../../source/user_guide/options.rst:29
msgid ":func:`~pandas.reset_option` - reset one or more options to their default value."
msgstr ""

#: ../../source/user_guide/options.rst:30
msgid ":func:`~pandas.describe_option` - print the descriptions of one or more options."
msgstr ""

#: ../../source/user_guide/options.rst:31
msgid ":func:`~pandas.option_context` - execute a codeblock with a set of options that revert to prior settings after execution."
msgstr ""

#: ../../source/user_guide/options.rst:36
msgid "Developers can check out `pandas/core/config_init.py <https://github.com/pandas-dev/pandas/blob/main/pandas/core/config_init.py>`_ for more information."
msgstr ""

#: ../../source/user_guide/options.rst:38
msgid "All of the functions above accept a regexp pattern (``re.search`` style) as an argument, to match an unambiguous substring:"
msgstr ""

#: ../../source/user_guide/options.rst:50
msgid "The following will **not work** because it matches multiple option names, e.g. ``display.max_colwidth``, ``display.max_rows``, ``display.max_columns``:"
msgstr ""

#: ../../source/user_guide/options.rst:61
msgid "Using this form of shorthand may cause your code to break if new options with similar names are added in future versions."
msgstr ""

#: ../../source/user_guide/options.rst:73
msgid "Available options"
msgstr ""

#: ../../source/user_guide/options.rst:75
msgid "You can get a list of available options and their descriptions with :func:`~pandas.describe_option`. When called with no argument :func:`~pandas.describe_option` will print out the descriptions for all available options."
msgstr ""

#: ../../source/user_guide/options.rst:83
msgid "Getting and setting options"
msgstr ""

#: ../../source/user_guide/options.rst:85
msgid "As described above, :func:`~pandas.get_option` and :func:`~pandas.set_option` are available from the pandas namespace.  To change an option, call ``set_option('option regex', new_value)``."
msgstr ""

#: ../../source/user_guide/options.rst:97
msgid "The option ``'mode.sim_interactive'`` is mostly used for debugging purposes."
msgstr ""

#: ../../source/user_guide/options.rst:99
msgid "You can use :func:`~pandas.reset_option` to revert to a setting's default value"
msgstr ""

#: ../../source/user_guide/options.rst:115
msgid "It's also possible to reset multiple options at once (using a regex):"
msgstr ""

#: ../../source/user_guide/options.rst:123
msgid ":func:`~pandas.option_context` context manager has been exposed through the top-level API, allowing you to execute code with given option values. Option values are restored automatically when you exit the ``with`` block:"
msgstr ""

#: ../../source/user_guide/options.rst:137
msgid "Setting startup options in Python/IPython environment"
msgstr ""

#: ../../source/user_guide/options.rst:139
msgid "Using startup scripts for the Python/IPython environment to import pandas and set options makes working with pandas more efficient. To do this, create a ``.py`` or ``.ipy`` script in the startup directory of the desired profile. An example where the startup folder is in a default IPython profile can be found at:"
msgstr ""

#: ../../source/user_guide/options.rst:147
msgid "More information can be found in the `IPython documentation <https://ipython.org/ipython-doc/stable/interactive/tutorial.html#startup-files>`__.  An example startup script for pandas is displayed below:"
msgstr ""

#: ../../source/user_guide/options.rst:160
msgid "Frequently used options"
msgstr ""

#: ../../source/user_guide/options.rst:161
msgid "The following is a demonstrates the more frequently used display options."
msgstr ""

#: ../../source/user_guide/options.rst:163
msgid "``display.max_rows`` and ``display.max_columns`` sets the maximum number of rows and columns displayed when a frame is pretty-printed. Truncated lines are replaced by an ellipsis."
msgstr ""

#: ../../source/user_guide/options.rst:176
msgid "Once the ``display.max_rows`` is exceeded, the ``display.min_rows`` options determines how many rows are shown in the truncated repr."
msgstr ""

#: ../../source/user_guide/options.rst:192
msgid "``display.expand_frame_repr`` allows for the representation of a :class:`DataFrame` to stretch across pages, wrapped over the all the columns."
msgstr ""

#: ../../source/user_guide/options.rst:204
msgid "``display.large_repr`` displays a :class:`DataFrame` that exceed ``max_columns`` or ``max_rows`` as a truncated frame or summary."
msgstr ""

#: ../../source/user_guide/options.rst:218
msgid "``display.max_colwidth`` sets the maximum width of columns.  Cells of this length or longer will be truncated with an ellipsis."
msgstr ""

#: ../../source/user_guide/options.rst:237
msgid "``display.max_info_columns`` sets a threshold for the number of columns displayed when calling :meth:`~pandas.DataFrame.info`."
msgstr ""

#: ../../source/user_guide/options.rst:249
msgid "``display.max_info_rows``: :meth:`~pandas.DataFrame.info` will usually show null-counts for each column. For a large :class:`DataFrame`, this can be quite slow. ``max_info_rows`` and ``max_info_cols`` limit this null check to the specified rows and columns respectively. The :meth:`~pandas.DataFrame.info` keyword argument ``show_counts=True`` will override this."
msgstr ""

#: ../../source/user_guide/options.rst:264
msgid "``display.precision`` sets the output display precision in terms of decimal places."
msgstr ""

#: ../../source/user_guide/options.rst:274
msgid "``display.chop_threshold`` sets the rounding threshold to zero when displaying a :class:`Series` or :class:`DataFrame`. This setting does not change the precision at which the number is stored."
msgstr ""

#: ../../source/user_guide/options.rst:287
msgid "``display.colheader_justify`` controls the justification of the headers. The options are ``'right'``, and ``'left'``."
msgstr ""

#: ../../source/user_guide/options.rst:307
msgid "Number formatting"
msgstr ""

#: ../../source/user_guide/options.rst:309
msgid "pandas also allows you to set how numbers are displayed in the console. This option is not set through the ``set_options`` API."
msgstr ""

#: ../../source/user_guide/options.rst:312
msgid "Use the ``set_eng_float_format`` function to alter the floating-point formatting of pandas objects to produce a particular format."
msgstr ""

#: ../../source/user_guide/options.rst:331
msgid "Use :meth:`~pandas.DataFrame.round` to specifically control rounding of an individual :class:`DataFrame`"
msgstr ""

#: ../../source/user_guide/options.rst:336
msgid "Unicode formatting"
msgstr ""

#: ../../source/user_guide/options.rst:340
msgid "Enabling this option will affect the performance for printing of DataFrame and Series (about 2 times slower). Use only when it is actually required."
msgstr ""

#: ../../source/user_guide/options.rst:343
msgid "Some East Asian countries use Unicode characters whose width corresponds to two Latin characters. If a DataFrame or Series contains these characters, the default output mode may not align them properly."
msgstr ""

#: ../../source/user_guide/options.rst:351
msgid "Enabling ``display.unicode.east_asian_width`` allows pandas to check each character's \"East Asian Width\" property. These characters can be aligned properly by setting this option to ``True``. However, this will result in longer render times than the standard ``len`` function."
msgstr ""

#: ../../source/user_guide/options.rst:360
msgid "In addition, Unicode characters whose width is \"ambiguous\" can either be 1 or 2 characters wide depending on the terminal setting or encoding. The option ``display.unicode.ambiguous_as_wide`` can be used to handle the ambiguity."
msgstr ""

#: ../../source/user_guide/options.rst:363
msgid "By default, an \"ambiguous\" character's width, such as \"ยก\" (inverted exclamation) in the example below, is taken to be 1."
msgstr ""

#: ../../source/user_guide/options.rst:371
msgid "Enabling ``display.unicode.ambiguous_as_wide`` makes pandas interpret these characters' widths to be 2. (Note that this option will only be effective when ``display.unicode.east_asian_width`` is enabled.)"
msgstr ""

#: ../../source/user_guide/options.rst:374
msgid "However, setting this option incorrectly for your terminal will cause these characters to be aligned incorrectly:"
msgstr ""

#: ../../source/user_guide/options.rst:391
msgid "Table schema display"
msgstr ""

#: ../../source/user_guide/options.rst:393
msgid ":class:`DataFrame` and :class:`Series` will publish a Table Schema representation by default. This can be enabled globally with the ``display.html.table_schema`` option:"
msgstr ""

#: ../../source/user_guide/options.rst:401
msgid "Only ``'display.max_rows'`` are serialized and published."
msgstr ""
