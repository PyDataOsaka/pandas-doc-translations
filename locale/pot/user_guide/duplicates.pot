# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/user_guide/duplicates.rst:5
msgid "Duplicate Labels"
msgstr ""

#: ../../source/user_guide/duplicates.rst:7
msgid ":class:`Index` objects are not required to be unique; you can have duplicate row or column labels. This may be a bit confusing at first. If you're familiar with SQL, you know that row labels are similar to a primary key on a table, and you would never want duplicates in a SQL table. But one of pandas' roles is to clean messy, real-world data before it goes to some downstream system. And real-world data has duplicates, even in fields that are supposed to be unique."
msgstr ""

#: ../../source/user_guide/duplicates.rst:14
msgid "This section describes how duplicate labels change the behavior of certain operations, and how prevent duplicates from arising during operations, or to detect them if they do."
msgstr ""

#: ../../source/user_guide/duplicates.rst:24
msgid "Consequences of Duplicate Labels"
msgstr ""

#: ../../source/user_guide/duplicates.rst:26
msgid "Some pandas methods (:meth:`Series.reindex` for example) just don't work with duplicates present. The output can't be determined, and so pandas raises."
msgstr ""

#: ../../source/user_guide/duplicates.rst:36
msgid "Other methods, like indexing, can give very surprising results. Typically indexing with a scalar will *reduce dimensionality*. Slicing a ``DataFrame`` with a scalar will return a ``Series``. Slicing a ``Series`` with a scalar will return a scalar. But with duplicates, this isn't the case."
msgstr ""

#: ../../source/user_guide/duplicates.rst:46
msgid "We have duplicates in the columns. If we slice ``'B'``, we get back a ``Series``"
msgstr ""

#: ../../source/user_guide/duplicates.rst:52
msgid "But slicing ``'A'`` returns a ``DataFrame``"
msgstr ""

#: ../../source/user_guide/duplicates.rst:59
msgid "This applies to row labels as well"
msgstr ""

#: ../../source/user_guide/duplicates.rst:69
msgid "Duplicate Label Detection"
msgstr ""

#: ../../source/user_guide/duplicates.rst:71
msgid "You can check whether an :class:`Index` (storing the row or column labels) is unique with :attr:`Index.is_unique`:"
msgstr ""

#: ../../source/user_guide/duplicates.rst:82
msgid "Checking whether an index is unique is somewhat expensive for large datasets. pandas does cache this result, so re-checking on the same index is very fast."
msgstr ""

#: ../../source/user_guide/duplicates.rst:85
msgid ":meth:`Index.duplicated` will return a boolean ndarray indicating whether a label is repeated."
msgstr ""

#: ../../source/user_guide/duplicates.rst:92
msgid "Which can be used as a boolean filter to drop duplicate rows."
msgstr ""

#: ../../source/user_guide/duplicates.rst:98
msgid "If you need additional logic to handle duplicate labels, rather than just dropping the repeats, using :meth:`~DataFrame.groupby` on the index is a common trick. For example, we'll resolve duplicates by taking the average of all rows with the same label."
msgstr ""

#: ../../source/user_guide/duplicates.rst:110
msgid "Disallowing Duplicate Labels"
msgstr ""

#: ../../source/user_guide/duplicates.rst:114
msgid "As noted above, handling duplicates is an important feature when reading in raw data. That said, you may want to avoid introducing duplicates as part of a data processing pipeline (from methods like :meth:`pandas.concat`, :meth:`~DataFrame.rename`, etc.). Both :class:`Series` and :class:`DataFrame` *disallow* duplicate labels by calling ``.set_flags(allows_duplicate_labels=False)``. (the default is to allow them). If there are duplicate labels, an exception will be raised."
msgstr ""

#: ../../source/user_guide/duplicates.rst:127
msgid "This applies to both row and column labels for a :class:`DataFrame`"
msgstr ""

#: ../../source/user_guide/duplicates.rst:136
msgid "This attribute can be checked or set with :attr:`~DataFrame.flags.allows_duplicate_labels`, which indicates whether that object can have duplicate labels."
msgstr ""

#: ../../source/user_guide/duplicates.rst:147
msgid ":meth:`DataFrame.set_flags` can be used to return a new ``DataFrame`` with attributes like ``allows_duplicate_labels`` set to some value"
msgstr ""

#: ../../source/user_guide/duplicates.rst:155
msgid "The new ``DataFrame`` returned is a view on the same data as the old ``DataFrame``. Or the property can just be set directly on the same object"
msgstr ""

#: ../../source/user_guide/duplicates.rst:164
msgid "When processing raw, messy data you might initially read in the messy data (which potentially has duplicate labels), deduplicate, and then disallow duplicates going forward, to ensure that your data pipeline doesn't introduce duplicates."
msgstr ""

#: ../../source/user_guide/duplicates.rst:175
msgid "Setting ``allows_duplicate_labels=False`` on a ``Series`` or ``DataFrame`` with duplicate labels or performing an operation that introduces duplicate labels on a ``Series`` or ``DataFrame`` that disallows duplicates will raise an :class:`errors.DuplicateLabelError`."
msgstr ""

#: ../../source/user_guide/duplicates.rst:185
msgid "This error message contains the labels that are duplicated, and the numeric positions of all the duplicates (including the \"original\") in the ``Series`` or ``DataFrame``"
msgstr ""

#: ../../source/user_guide/duplicates.rst:189
msgid "Duplicate Label Propagation"
msgstr ""

#: ../../source/user_guide/duplicates.rst:191
msgid "In general, disallowing duplicates is \"sticky\". It's preserved through operations."
msgstr ""

#: ../../source/user_guide/duplicates.rst:203
msgid "This is an experimental feature. Currently, many methods fail to propagate the ``allows_duplicate_labels`` value. In future versions it is expected that every method taking or returning one or more DataFrame or Series objects will propagate ``allows_duplicate_labels``."
msgstr ""
