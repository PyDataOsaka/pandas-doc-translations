# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:3
msgid "{{ header }}"
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:10
msgid "This tutorial uses the Titanic data set, stored as CSV. The data consists of the following data columns:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:13
msgid "PassengerId: Id of every passenger."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:14
msgid "Survived: Indication whether passenger survived. ``0`` for yes and ``1`` for no."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:15
msgid "Pclass: One out of the 3 ticket classes: Class ``1``, Class ``2`` and Class ``3``."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:16
msgid "Name: Name of passenger."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:17
msgid "Sex: Gender of passenger."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:18
msgid "Age: Age of passenger in years."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:19
msgid "SibSp: Number of siblings or spouses aboard."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:20
msgid "Parch: Number of parents or children aboard."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:21
msgid "Ticket: Ticket number of passenger."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:22
msgid "Fare: Indicating the fare."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:23
msgid "Cabin: Cabin number of passenger."
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/titanic.rst:24
msgid "Embarked: Port of embarkation."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:29
msgid "How do I read and write tabular data?"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:39
msgid "I want to analyze the Titanic passenger data, available as a CSV file."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:45
msgid "pandas provides the :func:`read_csv` function to read data stored as a csv file into a pandas ``DataFrame``. pandas supports many different file formats or data sources out of the box (csv, excel, sql, json, parquet, …), each of them with the prefix ``read_*``."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:55
msgid "Make sure to always have a check on the data after reading in the data. When displaying a ``DataFrame``, the first and last 5 rows will be shown by default:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:68
msgid "I want to see the first 8 rows of a pandas DataFrame."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:74
msgid "To see the first N rows of a ``DataFrame``, use the :meth:`~DataFrame.head` method with the required number of rows (in this case 8) as argument."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:84
msgid "Interested in the last N rows instead? pandas also provides a :meth:`~DataFrame.tail` method. For example, ``titanic.tail(10)`` will return the last 10 rows of the DataFrame."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:88
msgid "A check on how pandas interpreted each of the column data types can be done by requesting the pandas ``dtypes`` attribute:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:95
msgid "For each of the columns, the used data type is enlisted. The data types in this ``DataFrame`` are integers (``int64``), floats (``float64``) and strings (``object``)."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:100
msgid "When asking for the ``dtypes``, no brackets are used! ``dtypes`` is an attribute of a ``DataFrame`` and ``Series``. Attributes of a ``DataFrame`` or ``Series`` do not need brackets. Attributes represent a characteristic of a ``DataFrame``/``Series``, whereas methods (which require brackets) *do* something with the ``DataFrame``/``Series`` as introduced in the :ref:`first tutorial <10min_tut_01_tableoriented>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:112
msgid "My colleague requested the Titanic data as a spreadsheet."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:118
msgid "Whereas ``read_*`` functions are used to read data to pandas, the ``to_*`` methods are used to store data. The :meth:`~DataFrame.to_excel` method stores the data as an excel file. In the example here, the ``sheet_name`` is named *passengers* instead of the default *Sheet1*. By setting ``index=False`` the row index labels are not saved in the spreadsheet."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:129
msgid "The equivalent read function :meth:`~DataFrame.read_excel` will reload the data to a ``DataFrame``:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:152
msgid "I’m interested in a technical summary of a ``DataFrame``"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:159
msgid "The method :meth:`~DataFrame.info` provides technical information about a ``DataFrame``, so let’s explain the output in more detail:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:162
msgid "It is indeed a :class:`DataFrame`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:163
msgid "There are 891 entries, i.e. 891 rows."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:164
msgid "Each row has a row label (aka the ``index``) with values ranging from 0 to 890."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:166
msgid "The table has 12 columns. Most columns have a value for each of the rows (all 891 values are ``non-null``). Some columns do have missing values and less than 891 ``non-null`` values."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:169
msgid "The columns ``Name``, ``Sex``, ``Cabin`` and ``Embarked`` consists of textual data (strings, aka ``object``). The other columns are numerical data with some of them whole numbers (aka ``integer``) and others are real numbers (aka ``float``)."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:173
msgid "The kind of data (characters, integers,…) in the different columns are summarized by listing the ``dtypes``."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:175
msgid "The approximate amount of RAM used to hold the DataFrame is provided as well."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:188
msgid "Getting data in to pandas from many different file formats or data sources is supported by ``read_*`` functions."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:190
msgid "Exporting data out of pandas is provided by different ``to_*``\\ methods."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:192
msgid "The ``head``/``tail``/``info`` methods and the ``dtypes`` attribute are convenient for a first check."
msgstr ""

#: ../../source/getting_started/intro_tutorials/02_read_write.rst:204
msgid "For a complete overview of the input and output possibilities from and to pandas, see the user guide section about :ref:`reader and writer functions <io>`."
msgstr ""
