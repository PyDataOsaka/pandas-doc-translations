# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:3
msgid "{{ header }}"
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:6
msgid "How do I create plots in pandas?"
msgstr ""

#: ../../source/getting_started/intro_tutorials/includes/air_quality_no2.rst:10
msgid "For this tutorial, air quality data about :math:`NO_2` is used, made available by `OpenAQ <https://openaq.org>`__ and using the `py-openaq <http://dhhagan.github.io/py-openaq/index.html>`__ package. The ``air_quality_no2.csv`` data set provides :math:`NO_2` values for the measurement stations *FR04014*, *BETR801* and *London Westminster* in respectively Paris, Antwerp and London."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:35
msgid "The usage of the ``index_col`` and ``parse_dates`` parameters of the ``read_csv`` function to define the first (0th) column as index of the resulting ``DataFrame`` and convert the dates in the column to :class:`Timestamp` objects, respectively."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:49
msgid "I want a quick visual check of the data."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:58
msgid "With a ``DataFrame``, pandas creates by default one line plot for each of the columns with numeric data."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:71
msgid "I want to plot only the columns of the data table with the data from Paris."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:88
msgid "To plot a specific column, use the selection method of the :ref:`subset data tutorial <10min_tut_03_subset>` in combination with the :meth:`~DataFrame.plot` method. Hence, the :meth:`~DataFrame.plot` method works on both ``Series`` and ``DataFrame``."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:103
msgid "I want to visually compare the :math:`NO_2` values measured in London versus Paris."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:117
msgid "Apart from the default ``line`` plot when using the ``plot`` function, a number of alternatives are available to plot data. Let’s use some standard Python to get an overview of the available plot methods:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:130
msgid "In many development environments as well as IPython and Jupyter Notebook, use the TAB button to get an overview of the available methods, for example ``air_quality.plot.`` + TAB."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:134
msgid "One of the options is :meth:`DataFrame.plot.box`, which refers to a `boxplot <https://en.wikipedia.org/wiki/Box_plot>`__. The ``box`` method is applicable on the air quality example data:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:150
msgid "For an introduction to plots other than the default line plot, see the user guide section about :ref:`supported plot styles <visualization.other>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:161
msgid "I want each of the columns in a separate subplot."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:170
msgid "Separate subplots for each of the data columns are supported by the ``subplots`` argument of the ``plot`` functions. The builtin options available in each of the pandas plot functions are worth reviewing."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:184
msgid "Some more formatting options are explained in the user guide section on :ref:`plot formatting <visualization.formatting>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:195
msgid "I want to further customize, extend or save the resulting plot."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:220
msgid "Each of the plot objects created by pandas is a `Matplotlib <https://matplotlib.org/>`__ object. As Matplotlib provides plenty of options to customize plots, making the link between pandas and Matplotlib explicit enables all the power of Matplotlib to the plot. This strategy is applied in the previous example:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:239
msgid "The ``.plot.*`` methods are applicable on both Series and DataFrames."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:240
msgid "By default, each of the columns is plotted as a different element (line, boxplot,…)."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:242
msgid "Any plot created by pandas is a Matplotlib object."
msgstr ""

#: ../../source/getting_started/intro_tutorials/04_plotting.rst:253
msgid "A full overview of plotting in pandas is provided in the :ref:`visualization pages <visualization>`."
msgstr ""
