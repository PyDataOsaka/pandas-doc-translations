# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:3
msgid "{{ header }}"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:27
msgid "For this tutorial, air quality data about :math:`NO_2` and Particulate matter less than 2.5 micrometers is used, made available by `OpenAQ <https://openaq.org>`__ and downloaded using the `py-openaq <http://dhhagan.github.io/py-openaq/index.html>`__ package. The ``air_quality_no2_long.csv\"`` data set provides :math:`NO_2` values for the measurement stations *FR04014*, *BETR801* and *London Westminster* in respectively Paris, Antwerp and London."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:59
msgid "How to handle time series data with ease"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:64
msgid "Using pandas datetime properties"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:71
msgid "I want to work with the dates in the column ``datetime`` as datetime objects instead of plain text"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:78
msgid "Initially, the values in ``datetime`` are character strings and do not provide any datetime operations (e.g. extract the year, day of the week,…). By applying the ``to_datetime`` function, pandas interprets the strings and convert these to datetime (i.e. ``datetime64[ns, UTC]``) objects. In pandas we call these datetime objects similar to ``datetime.datetime`` from the standard library as :class:`pandas.Timestamp`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:91
msgid "As many data sets do contain datetime information in one of the columns, pandas input function like :func:`pandas.read_csv` and :func:`pandas.read_json` can do the transformation to dates when reading the data using the ``parse_dates`` parameter with a list of the columns to read as Timestamp:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:101
msgid "Why are these :class:`pandas.Timestamp` objects useful? Let’s illustrate the added value with some example cases."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:104
msgid "What is the start and end date of the time series data set we are working with?"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:111
msgid "Using :class:`pandas.Timestamp` for datetimes enables us to calculate with date information and make them comparable. Hence, we can use this to get the length of our time series:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:119
msgid "The result is a :class:`pandas.Timedelta` object, similar to ``datetime.timedelta`` from the standard Python library and defining a time duration."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:127
msgid "The various time concepts supported by pandas are explained in the user guide section on :ref:`time related concepts <timeseries.overview>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:138
msgid "I want to add a new column to the ``DataFrame`` containing only the month of the measurement"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:145
msgid "By using ``Timestamp`` objects for dates, a lot of time-related properties are provided by pandas. For example the ``month``, but also ``year``, ``quarter``,… All of these properties are accessible by the ``dt`` accessor."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:160
msgid "An overview of the existing date properties is given in the :ref:`time and date components overview table <timeseries.components>`. More details about the ``dt`` accessor to return datetime like properties are explained in a dedicated section on the  :ref:`dt accessor <basics.dt_accessors>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:173
msgid "What is the average :math:`NO_2` concentration for each day of the week for each of the measurement locations?"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:180
msgid "Remember the split-apply-combine pattern provided by ``groupby`` from the :ref:`tutorial on statistics calculation <10min_tut_06_stats>`? Here, we want to calculate a given statistic (e.g. mean :math:`NO_2`) **for each weekday** and **for each measurement location**. To group on weekdays, we use the datetime property ``weekday`` (with Monday=0 and Sunday=6) of pandas ``Timestamp``, which is also accessible by the ``dt`` accessor. The grouping on both locations and weekdays can be done to split the calculation of the mean on each of these combinations."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:190
msgid "As we are working with a very short time series in these examples, the analysis does not provide a long-term representative result!"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:204
msgid "Plot the typical :math:`NO_2` pattern during the day of our time series of all stations together. In other words, what is the average value for each hour of the day?"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:216
msgid "Similar to the previous case, we want to calculate a given statistic (e.g. mean :math:`NO_2`) **for each hour of the day** and we can use the split-apply-combine approach again. For this case, we use the datetime property ``hour`` of pandas ``Timestamp``, which is also accessible by the ``dt`` accessor."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:227
msgid "Datetime as index"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:229
msgid "In the :ref:`tutorial on reshaping <10min_tut_07_reshape>`, :meth:`~pandas.pivot` was introduced to reshape the data table with each of the measurements locations as a separate column:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:239
msgid "By pivoting the data, the datetime information became the index of the table. In general, setting a column as an index can be achieved by the ``set_index`` function."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:243
msgid "Working with a datetime index (i.e. ``DatetimeIndex``) provides powerful functionalities. For example, we do not need the ``dt`` accessor to get the time series properties, but have these properties available on the index directly:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:252
msgid "Some other advantages are the convenient subsetting of time period or the adapted time scale on plots. Let’s apply this on our data."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:260
msgid "Create a plot of the :math:`NO_2` values in the different stations from the 20th of May till the end of 21st of May"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:268
msgid "By providing a **string that parses to a datetime**, a specific subset of the data can be selected on a ``DatetimeIndex``."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:280
msgid "More information on the ``DatetimeIndex`` and the slicing by using strings is provided in the section on :ref:`time series indexing <timeseries.datetimeindex>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:287
msgid "Resample a time series to another frequency"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:294
msgid "Aggregate the current hourly time series values to the monthly maximum value in each of the stations."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:301
msgid "A very powerful method on time series data with a datetime index, is the ability to :meth:`~Series.resample` time series to another frequency (e.g., converting secondly data into 5-minutely data)."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:310
msgid "The :meth:`~Series.resample` method is similar to a groupby operation:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:312
msgid "it provides a time-based grouping, by using a string (e.g. ``M``, ``5H``,…) that defines the target frequency"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:314
msgid "it requires an aggregation function such as ``mean``, ``max``,…"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:321
msgid "An overview of the aliases used to define time series frequencies is given in the :ref:`offset aliases overview table <timeseries.offset_aliases>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:327
msgid "When defined, the frequency of the time series is provided by the ``freq`` attribute:"
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:339
msgid "Make a plot of the daily mean :math:`NO_2` value in each of the stations."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:357
msgid "More details on the power of time series ``resampling`` is provided in the user guide section on :ref:`resampling <timeseries.resampling>`."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:368
msgid "Valid date strings can be converted to datetime objects using ``to_datetime`` function or as part of read functions."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:370
msgid "Datetime objects in pandas support calculations, logical operations and convenient date-related properties using the ``dt`` accessor."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:372
msgid "A ``DatetimeIndex`` contains these date-related properties and supports convenient slicing."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:374
msgid "``Resample`` is a powerful method to change the frequency of a time series."
msgstr ""

#: ../../source/getting_started/intro_tutorials/09_timeseries.rst:386
msgid "A full overview on time series is given on the pages on :ref:`time series and date functionality <timeseries>`."
msgstr ""
