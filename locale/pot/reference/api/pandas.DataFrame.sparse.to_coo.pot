# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.DataFrame.sparse.to_coo.rst:2
msgid "pandas.DataFrame.sparse.to_coo"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:2
msgid "Return the contents of the frame as a sparse SciPy COO matrix."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:0
msgid "Returns"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:17
msgid "scipy.sparse.spmatrix"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:9
msgid "If the caller is heterogeneous and contains booleans or objects, the result will be of dtype=object. See Notes."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:20
msgid "Notes"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:21
msgid "The dtype will be the lowest-common-denominator type (implicit upcasting); that is to say if the dtypes (even of numeric types) are mixed, the one that accommodates all will be chosen."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:25
msgid "e.g. If the dtypes are float16 and float32, dtype will be upcast to float32. By numpy.find_common_type convention, mixing int64 and and uint64 will result in a float64 dtype."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/arrays/sparse/accessor.py:docstring of pandas.core.arrays.sparse.accessor.SparseFrameAccessor.to_coo:31
msgid "Examples"
msgstr ""
