# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.to_datetime.rst:2
msgid "pandas.to\\_datetime"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:2
msgid "Convert argument to datetime."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:4
msgid "This function converts a scalar, array-like, :class:`Series` or :class:`DataFrame`/dict-like to a pandas datetime object."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:0
msgid "Parameters"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:13
msgid "**arg**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "int, float, str, datetime, list, tuple, 1-d array, Series, DataFrame/dict-like"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:10
msgid "The object to convert to a datetime. If a :class:`DataFrame` is provided, the method expects minimally the following columns: :const:`\"year\"`, :const:`\"month\"`, :const:`\"day\"`. The column \"year\" must be specified in 4-digit format."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:18
msgid "**errors**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "{'ignore', 'raise', 'coerce'}, default 'raise'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:16
msgid "If :const:`'raise'`, then invalid parsing will raise an exception."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:17
msgid "If :const:`'coerce'`, then invalid parsing will be set as :const:`NaT`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:18
msgid "If :const:`'ignore'`, then invalid parsing will return the input."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:28
msgid "**dayfirst**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "bool, default False"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:21
msgid "Specify a date parse order if `arg` is str or is list-like. If :const:`True`, parses dates with the day first, e.g. :const:`\"10/11/12\"` is parsed as :const:`2012-11-10`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:27
msgid "``dayfirst=True`` is not strict, but will prefer to parse with day first."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:41
msgid "**yearfirst**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:31
msgid "Specify a date parse order if `arg` is str or is list-like."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:33
msgid "If :const:`True` parses dates with the year first, e.g. :const:`\"10/11/12\"` is parsed as :const:`2010-11-12`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:35
msgid "If both `dayfirst` and `yearfirst` are :const:`True`, `yearfirst` is preceded (same as :mod:`dateutil`)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:40
msgid "``yearfirst=True`` is not strict, but will prefer to parse with year first."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:68
msgid "**utc**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:44
msgid "Control timezone-related parsing, localization and conversion."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:46
msgid "If :const:`True`, the function *always* returns a timezone-aware UTC-localized :class:`Timestamp`, :class:`Series` or :class:`DatetimeIndex`. To do this, timezone-naive inputs are *localized* as UTC, while timezone-aware inputs are *converted* to UTC."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:51
msgid "If :const:`False` (default), inputs will not be coerced to UTC. Timezone-naive inputs will remain naive, while timezone-aware ones will keep their time offsets. Limitations exist for mixed offsets (typically, daylight savings), see :ref:`Examples <to_datetime_tz_examples>` section for details."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:59
msgid "In a future version of pandas, parsing datetimes with mixed time zones will raise an error unless `utc=True`. Please specify `utc=True` to opt in to the new behaviour and silence this warning. To create a `Series` with mixed offsets and `object` dtype, please use `apply` and `datetime.datetime.strptime`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:65
msgid "See also: pandas general documentation about `timezone conversion and localization <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html #time-zone-handling>`_."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:85
msgid "**format**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "str, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:71
msgid "The strftime to parse time, e.g. :const:`\"%d/%m/%Y\"`. See `strftime documentation <https://docs.python.org/3/library/datetime.html #strftime-and-strptime-behavior>`_ for more information on choices, though note that :const:`\"%f\"` will parse all the way up to nanoseconds. You can also pass:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:78
msgid "\"ISO8601\", to parse any `ISO8601 <https://en.wikipedia.org/wiki/ISO_8601>`_ time string (not necessarily in exactly the same format);"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:80
msgid "\"mixed\", to infer the format for each element individually. This is risky, and you should probably use it along with `dayfirst`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:85
msgid "If a :class:`DataFrame` is passed, then `format` has no effect."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:94
msgid "**exact**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "bool, default True"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:88
msgid "Control how `format` is used:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:90
msgid "If :const:`True`, require an exact `format` match."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:91
msgid "If :const:`False`, allow the `format` to match anywhere in the target string."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:94
msgid "Cannot be used alongside ``format='ISO8601'`` or ``format='mixed'``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:100
msgid "**unit**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "str, default 'ns'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:97
msgid "The unit of the arg (D,s,ms,us,ns) denote the unit, which is an integer or float number. This will be based off the origin. Example, with ``unit='ms'`` and ``origin='unix'``, this would calculate the number of milliseconds to the unix epoch start."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:110
msgid "**infer_datetime_format**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:103
msgid "If :const:`True` and no `format` is given, attempt to infer the format of the datetime strings based on the first non-NaN element, and if it can be inferred, switch to a faster method of parsing them. In some cases this can increase the parsing speed by ~5-10x."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:108
msgid "A strict version of this argument is now the default, passing it has no effect."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:123
msgid "**origin**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:-1
msgid "scalar, default 'unix'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:113
msgid "Define the reference date. The numeric values would be parsed as number of units (defined by `unit`) since this reference date."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:116
msgid "If :const:`'unix'` (or POSIX) time; origin is set to 1970-01-01."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:117
msgid "If :const:`'julian'`, unit must be :const:`'D'`, and origin is set to beginning of Julian Calendar. Julian day number :const:`0` is assigned to the day starting at noon on January 1, 4713 BC."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:120
msgid "If Timestamp convertible (Timestamp, dt.datetime, np.datetimt64 or date string), origin is set to Timestamp identified by origin."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:122
msgid "If a float or integer, origin is the millisecond difference relative to 1970-01-01."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:131
msgid "**cache**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:126
msgid "If :const:`True`, use a cache of unique, converted dates to apply the datetime conversion. May produce significant speed-up when parsing duplicate date strings, especially ones with timezone offsets. The cache is only used when there are at least 50 values. The presence of out-of-bounds values will render the cache unusable and may slow down parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:0
msgid "Returns"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:152
msgid "datetime"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:136
msgid "If parsing succeeded. Return type depends on input (types in parenthesis correspond to fallback in case of unsuccessful timezone or out-of-range timestamp parsing):"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:141
msgid "scalar: :class:`Timestamp` (or :class:`datetime.datetime`)"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:142
msgid "array-like: :class:`DatetimeIndex` (or :class:`Series` with :class:`object` dtype containing :class:`datetime.datetime`)"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:144
msgid "Series: :class:`Series` of :class:`datetime64` dtype (or :class:`Series` of :class:`object` dtype containing :class:`datetime.datetime`)"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:147
msgid "DataFrame: :class:`Series` of :class:`datetime64` dtype (or :class:`Series` of :class:`object` dtype containing :class:`datetime.datetime`)"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:0
msgid "Raises"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:157
msgid "ParserError"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:157
msgid "When parsing a date from string fails."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:165
msgid "ValueError"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:160
msgid "When another datetime conversion error happens. For example when one of 'year', 'month', day' columns is missing in a :class:`DataFrame`, or when a Timezone-aware :class:`datetime.datetime` is found in an array-like of mixed time offsets, and ``utc=False``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:170
msgid ":obj:`DataFrame.astype`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:171
msgid "Cast argument to a specified dtype."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:172
msgid ":obj:`to_timedelta`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:173
msgid "Convert argument to timedelta."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:174
msgid ":obj:`convert_dtypes`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:175
msgid "Convert dtypes."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:179
msgid "Notes"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:180
msgid "Many input types are supported, and lead to different output types:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:182
msgid "**scalars** can be int, float, str, datetime object (from stdlib :mod:`datetime` module or :mod:`numpy`). They are converted to :class:`Timestamp` when possible, otherwise they are converted to :class:`datetime.datetime`. None/NaN/null scalars are converted to :const:`NaT`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:187
msgid "**array-like** can contain int, float, str, datetime objects. They are converted to :class:`DatetimeIndex` when possible, otherwise they are converted to :class:`Index` with :class:`object` dtype, containing :class:`datetime.datetime`. None/NaN/null entries are converted to :const:`NaT` in both cases."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:193
msgid "**Series** are converted to :class:`Series` with :class:`datetime64` dtype when possible, otherwise they are converted to :class:`Series` with :class:`object` dtype, containing :class:`datetime.datetime`. None/NaN/null entries are converted to :const:`NaT` in both cases."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:198
msgid "**DataFrame/dict-like** are converted to :class:`Series` with :class:`datetime64` dtype. For each row a datetime is created from assembling the various dataframe columns. Column keys can be common abbreviations like ['year', 'month', 'day', 'minute', 'second', 'ms', 'us', 'ns']) or plurals of the same."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:204
msgid "The following causes are responsible for :class:`datetime.datetime` objects being returned (possibly inside an :class:`Index` or a :class:`Series` with :class:`object` dtype) instead of a proper pandas designated type (:class:`Timestamp`, :class:`DatetimeIndex` or :class:`Series` with :class:`datetime64` dtype):"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:210
msgid "when any input element is before :const:`Timestamp.min` or after :const:`Timestamp.max`, see `timestamp limitations <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html #timeseries-timestamp-limits>`_."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:215
msgid "when ``utc=False`` (default) and the input is an array-like or :class:`Series` containing mixed naive/aware datetime, or aware with mixed time offsets. Note that this happens in the (quite frequent) situation when the timezone has a daylight savings policy. In that case you may wish to use ``utc=True``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:223
msgid "Examples"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:224
msgid "**Handling various input formats**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:226
msgid "Assembling a datetime from multiple columns of a :class:`DataFrame`. The keys can be common abbreviations like ['year', 'month', 'day', 'minute', 'second', 'ms', 'us', 'ns']) or plurals of the same"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:238
msgid "Using a unix epoch time"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:245
msgid "For float arg, precision rounding might happen. To prevent unexpected behavior use a fixed-width exact type."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:248
msgid "Using a non-unix epoch origin"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:255
msgid "**Differences with strptime behavior**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:257
msgid ":const:`\"%f\"` will parse all the way up to nanoseconds."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:263
msgid "**Non-convertible date/times**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:265
msgid "If a date does not meet the `timestamp limitations <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html #timeseries-timestamp-limits>`_, passing ``errors='ignore'`` will return the original input instead of raising any exception."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:270
msgid "Passing ``errors='coerce'`` will force an out-of-bounds date to :const:`NaT`, in addition to forcing non-dates (or non-parseable dates) to :const:`NaT`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:280
msgid "**Timezones and time offsets**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:282
msgid "The default behaviour (``utc=False``) is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:284
msgid "Timezone-naive inputs are converted to timezone-naive :class:`DatetimeIndex`:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:290
msgid "Timezone-aware inputs *with constant time offset* are converted to timezone-aware :class:`DatetimeIndex`:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:297
msgid "However, timezone-aware inputs *with mixed time offsets* (for example issued from a timezone with daylight savings, such as Europe/Paris) are **not successfully converted** to a :class:`DatetimeIndex`. Parsing datetimes with mixed time zones will show a warning unless `utc=True`. If you specify `utc=False` the warning below will be shown and a simple :class:`Index` containing :class:`datetime.datetime` objects will be returned:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:315
msgid "A mix of timezone-aware and timezone-naive inputs is also converted to a simple :class:`Index` containing :class:`datetime.datetime` objects:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:330
msgid "Setting ``utc=True`` solves most of the above issues:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:332
msgid "Timezone-naive inputs are *localized* as UTC"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:338
msgid "Timezone-aware inputs are *converted* to UTC (the output represents the exact same datetime, but viewed from the UTC time offset `+00:00`)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/tools/datetimes.py:docstring of pandas.core.tools.datetimes.to_datetime:346
msgid "Inputs can contain both string or datetime, the above rules still apply"
msgstr ""
