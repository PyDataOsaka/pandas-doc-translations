# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.read_excel.rst:2
msgid "pandas.read\\_excel"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:2
msgid "Read an Excel file into a pandas DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:4
msgid "Supports `xls`, `xlsx`, `xlsm`, `xlsb`, `odf`, `ods` and `odt` file extensions read from a local filesystem or URL. Supports an option to read a single sheet or a list of sheets."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:0
msgid "Parameters"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:23
msgid "**io**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str, bytes, ExcelFile, xlrd.Book, path object, or file-like object"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:11
msgid "Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, and file. For file URLs, a host is expected. A local file could be: ``file://localhost/path/to/table.xlsx``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:15
msgid "If you want to pass in a path object, pandas accepts any ``os.PathLike``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:17
msgid "By file-like object, we refer to objects with a ``read()`` method, such as a file handle (e.g. via builtin ``open`` function) or ``StringIO``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:21
msgid "Passing byte strings is deprecated. To read from a byte string, wrap it in a ``BytesIO`` object."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:38
msgid "**sheet_name**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str, int, list, or None, default 0"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:26
msgid "Strings are used for sheet names. Integers are used in zero-indexed sheet positions (chart sheets do not count as a sheet position). Lists of strings/integers are used to request multiple sheets. Specify None to get all worksheets."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:31
msgid "Available cases:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:33
msgid "Defaults to ``0``: 1st sheet as a `DataFrame`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:34
msgid "``1``: 2nd sheet as a `DataFrame`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:35
msgid "``\"Sheet1\"``: Load sheet with name \"Sheet1\""
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:36
msgid "``[0, 1, \"Sheet5\"]``: Load first, second and sheet named \"Sheet5\" as a dict of `DataFrame`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:38
msgid "None: All worksheets."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:43
msgid "**header**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "int, list of int, default 0"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:41
msgid "Row (0-indexed) to use for the column labels of the parsed DataFrame. If a list of integers is passed those row positions will be combined into a ``MultiIndex``. Use None if there is no header."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:47
msgid "**names**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "array-like, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:46
msgid "List of column names to use. If file contains no header row, then you should explicitly pass header=None."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:59
msgid "**index_col**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "int, str, list of int, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:50
msgid "Column (0-indexed) to use as the row labels of the DataFrame. Pass None if there is no such column.  If a list is passed, those columns will be combined into a ``MultiIndex``.  If a subset of data is selected with ``usecols``, index_col is based on the subset."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:56
msgid "Missing values will be forward filled to allow roundtripping with ``to_excel`` for ``merged_cells=True``. To avoid forward filling the missing values use ``set_index`` after reading the data instead of ``index_col``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:72
msgid "**usecols**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str, list-like, or callable, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:62
msgid "If None, then parse all columns."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:63
msgid "If str, then indicates comma separated list of Excel column letters and column ranges (e.g. \"A:E\" or \"A,C,E:F\"). Ranges are inclusive of both sides."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:66
msgid "If list of int, then indicates list of column numbers to be parsed (0-indexed)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:68
msgid "If list of string, then indicates list of column names to be parsed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:69
msgid "If callable, then evaluate each column name against it and parse the column if the callable returns ``True``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:72
msgid "Returns a subset of the columns according to behavior above."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:78
msgid "**dtype**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "Type name or dict of column -> type, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:75
msgid "Data type for data or columns. E.g. {'a': np.float64, 'b': np.int32} Use `object` to preserve data as stored in Excel and not interpret dtype. If converters are specified, they will be applied INSTEAD of dtype conversion."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:106
msgid "**engine**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:81
msgid "If io is not a buffer or path, this must be set to identify io. Supported engines: \"xlrd\", \"openpyxl\", \"odf\", \"pyxlsb\". Engine compatibility :"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:85
msgid "\"xlrd\" supports old-style Excel files (.xls)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:86
msgid "\"openpyxl\" supports newer Excel file formats."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:87
msgid "\"odf\" supports OpenDocument file formats (.odf, .ods, .odt)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:88
msgid "\"pyxlsb\" supports Binary Excel files."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:90
msgid "The engine `xlrd <https://xlrd.readthedocs.io/en/latest/>`_  now only supports old-style ``.xls`` files.  When ``engine=None``, the following logic will be  used to determine the engine:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:96
msgid "If ``path_or_buffer`` is an OpenDocument format (.odf, .ods, .odt), then `odf <https://pypi.org/project/odfpy/>`_ will be used."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:98
msgid "Otherwise if ``path_or_buffer`` is an xls format, ``xlrd`` will be used."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:100
msgid "Otherwise if ``path_or_buffer`` is in xlsb format, ``pyxlsb`` will be used."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:104
msgid "Otherwise ``openpyxl`` will be used."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:112
msgid "**converters**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "dict, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:109
msgid "Dict of functions for converting values in certain columns. Keys can either be integers or column labels, values are functions that take one input argument, the Excel cell content, and return the transformed content."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:115
msgid "**true_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "list, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:115
msgid "Values to consider as True."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:118
msgid "**false_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:118
msgid "Values to consider as False."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:125
msgid "**skiprows**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "list-like, int, or callable, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:121
msgid "Line numbers to skip (0-indexed) or number of lines to skip (int) at the start of the file. If callable, the callable function will be evaluated against the row indices, returning True if the row should be skipped and False otherwise. An example of a valid callable argument would be ``lambda x: x in [0, 2]``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:128
msgid "**nrows**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "int, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:128
msgid "Number of rows to parse."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:135
msgid "**na_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "scalar, str, list-like, or dict, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:131
msgid "Additional strings to recognize as NA/NaN. If dict passed, specific per-column NA values. By default the following values are interpreted as NaN: '', '#N/A', '#N/A N/A', '#NA', '-1.#IND', '-1.#QNAN', '-NaN', '-nan', '1.#IND', '1.#QNAN', '<NA>', 'N/A', 'NA', 'NULL', 'NaN', 'None', 'n/a', 'nan', 'null'."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:151
msgid "**keep_default_na**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "bool, default True"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:138
msgid "Whether or not to include the default NaN values when parsing the data. Depending on whether `na_values` is passed in, the behavior is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:141
msgid "If `keep_default_na` is True, and `na_values` are specified, `na_values` is appended to the default NaN values used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:143
msgid "If `keep_default_na` is True, and `na_values` are not specified, only the default NaN values are used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:145
msgid "If `keep_default_na` is False, and `na_values` are specified, only the NaN values specified `na_values` are used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:147
msgid "If `keep_default_na` is False, and `na_values` are not specified, no strings will be parsed as NaN."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:150
msgid "Note that if `na_filter` is passed in as False, the `keep_default_na` and `na_values` parameters will be ignored."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:156
msgid "**na_filter**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:154
msgid "Detect missing value markers (empty strings and the value of na_values). In data without any NAs, passing na_filter=False can improve the performance of reading a large file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:159
msgid "**verbose**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "bool, default False"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:159
msgid "Indicate number of NA values placed in non-numeric columns."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:177
msgid "**parse_dates**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "bool, list-like, or dict, default False"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:162
msgid "The behavior is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:164
msgid "bool. If True -> try parsing the index."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:165
msgid "list of int or names. e.g. If [1, 2, 3] -> try parsing columns 1, 2, 3 each as a separate date column."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:167
msgid "list of lists. e.g.  If [[1, 3]] -> combine columns 1 and 3 and parse as a single date column."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:169
msgid "dict, e.g. {'foo' : [1, 3]} -> parse columns 1, 3 as date and call result 'foo'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:172
msgid "If a column or index contains an unparsable date, the entire column or index will be returned unaltered as an object data type. If you don`t want to parse some cells as date just change their type in Excel to \"Text\". For non-standard datetime parsing, use ``pd.to_datetime`` after ``pd.read_excel``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:177
msgid "Note: A fast-path exists for iso8601-formatted dates."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:192
msgid "**date_parser**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "function, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:180
msgid "Function to use for converting a sequence of string columns to an array of datetime instances. The default uses ``dateutil.parser.parser`` to do the conversion. Pandas will try to call `date_parser` in three different ways, advancing to the next if an exception occurs: 1) Pass one or more arrays (as defined by `parse_dates`) as arguments; 2) concatenate (row-wise) the string values from the columns defined by `parse_dates` into a single array and pass that; and 3) call `date_parser` once for each row using one or more strings (corresponding to the columns defined by `parse_dates`) as arguments."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:190
msgid "Use ``date_format`` instead, or read in as ``object`` and then apply :func:`to_datetime` as-needed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:199
msgid "**date_format** : str or dict of column -> format, default ``None``"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str or dict of column -> format, default"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:195
msgid "If used in conjunction with ``parse_dates``, will parse dates according to this format. For anything more complex, please read in as ``object`` and then apply :func:`to_datetime` as-needed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:205
msgid "**thousands**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:202
msgid "Thousands separator for parsing string columns to numeric.  Note that this parameter is only necessary for columns stored as TEXT in Excel, any numeric columns will automatically be parsed, regardless of display format."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:213
msgid "**decimal**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "str, default '.'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:208
msgid "Character to recognize as decimal point for parsing string columns to numeric. Note that this parameter is only necessary for columns stored as TEXT in Excel, any numeric columns will automatically be parsed, regardless of display format.(e.g. use ',' for European data)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:218
msgid "**comment**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:216
msgid "Comments out remainder of line. Pass a character or characters to this argument to indicate comments in the input file. Any data between the comment string and the end of the current line is ignored."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:221
msgid "**skipfooter**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "int, default 0"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:221
msgid "Rows at the end to skip (0-indexed)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:233
msgid "**storage_options**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "dict, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:224
msgid "Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded to ``urllib.request.Request`` as header options. For other URLs (e.g. starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to ``fsspec.open``. Please see ``fsspec`` and ``urllib`` for more details, and for more examples on storage options refer `here <https://pandas.pydata.org/docs/user_guide/io.html? highlight=storage_options#reading-writing-remote-files>`_."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:244
msgid "**dtype_backend**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:-1
msgid "{'numpy_nullable', 'pyarrow'}, default 'numpy_nullable'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:236
msgid "Back-end data type applied to the resultant :class:`DataFrame` (still experimental). Behaviour is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:239
msgid "``\"numpy_nullable\"``: returns nullable-dtype-backed :class:`DataFrame` (default)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:241
msgid "``\"pyarrow\"``: returns pyarrow-backed nullable :class:`ArrowDtype` DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:247
msgid "**engine_kwargs**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:247
msgid "Arbitrary keyword arguments passed to excel engine."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:0
msgid "Returns"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:259
msgid "DataFrame or dict of DataFrames"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:252
msgid "DataFrame from the passed in Excel file. See notes in sheet_name argument for more information on when a dict of DataFrames is returned."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:264
msgid ":obj:`DataFrame.to_excel`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:265
msgid "Write DataFrame to an Excel file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:266
msgid ":obj:`DataFrame.to_csv`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:267
msgid "Write DataFrame to a comma-separated values (csv) file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:268
msgid ":obj:`read_csv`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:269
msgid "Read a comma-separated values (csv) file into DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:270
msgid ":obj:`read_fwf`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:271
msgid "Read a table of fixed-width formatted lines into DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:275
msgid "Notes"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:276
msgid "For specific information on the methods used for each Excel engine, refer to the pandas :ref:`user guide <io.excel_reader>`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:281
msgid "Examples"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:282
msgid "The file can be read using the file name as string or an open file object:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:297
msgid "Index and header can be specified via the `index_col` and `header` arguments"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:306
msgid "Column types are inferred but can be explicitly specified"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:315
msgid "True, False, and NA values, and thousands separators have defaults, but can be explicitly specified, too. Supply the values you would like as strings or lists of strings!"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:docstring of pandas.io.excel._base.read_excel:326
msgid "Comment lines in the excel input file can be skipped using the `comment` kwarg"
msgstr ""
