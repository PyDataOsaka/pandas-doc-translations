# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.DataFrame.to_sql.rst:2
msgid "pandas.DataFrame.to\\_sql"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:2
msgid "Write records stored in a DataFrame to a SQL database."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:4
msgid "Databases supported by SQLAlchemy [R689dfd12abe5-1]_ are supported. Tables can be newly created, appended to, or overwritten."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:0
msgid "Parameters"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:10
msgid "**name**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "str"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:10
msgid "Name of SQL table."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:19
msgid "**con**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "sqlalchemy.engine.(Engine or Connection) or sqlite3.Connection"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:13
msgid "Using SQLAlchemy makes it possible to use any DB supported by that library. Legacy support is provided for sqlite3.Connection objects. The user is responsible for engine disposal and connection closure for the SQLAlchemy connectable. See `here                 <https://docs.sqlalchemy.org/en/20/core/connections.html>`_. If passing a sqlalchemy.engine.Connection which is already in a transaction, the transaction will not be committed.  If passing a sqlite3.Connection, it will not be possible to roll back the record insertion."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:23
msgid "**schema**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "str, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:22
msgid "Specify the schema (if database flavor supports this). If None, use default schema."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:30
msgid "**if_exists**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "{'fail', 'replace', 'append'}, default 'fail'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:26
msgid "How to behave if the table already exists."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:28
msgid "fail: Raise a ValueError."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:29
msgid "replace: Drop the table before inserting new values."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:30
msgid "append: Insert new values to the existing table."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:34
msgid "**index**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "bool, default True"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:33
msgid "Write DataFrame index as a column. Uses `index_label` as the column name in the table."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:39
msgid "**index_label**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "str or sequence, default None"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:37
msgid "Column label for index column(s). If None is given (default) and `index` is True, then the index names are used. A sequence should be given if the DataFrame uses MultiIndex."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:43
msgid "**chunksize**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "int, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:42
msgid "Specify the number of rows in each batch to be written at a time. By default, all rows will be written at once."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:49
msgid "**dtype**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "dict or scalar, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:46
msgid "Specifying the datatype for columns. If a dictionary is used, the keys should be the column names and the values should be the SQLAlchemy types or strings for the sqlite3 legacy mode. If a scalar is provided, it will be applied to all columns."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:59
msgid "**method**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:-1
msgid "{None, 'multi', callable}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:52
msgid "Controls the SQL insertion clause used:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:54
msgid "None : Uses standard SQL ``INSERT`` clause (one per row)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:55
msgid "'multi': Pass multiple values in a single ``INSERT`` clause."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:56
msgid "callable with signature ``(pd_table, conn, keys, data_iter)``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:58
msgid "Details and a sample callable implementation can be found in the section :ref:`insert method <io.sql.method>`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:0
msgid "Returns"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:76
msgid "None or int"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:64
msgid "Number of rows affected by to_sql. None is returned if the callable passed into ``method`` does not return an integer number of rows."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:67
msgid "The number of returned rows affected is the sum of the ``rowcount`` attribute of ``sqlite3.Cursor`` or SQLAlchemy connectable which may not reflect the exact number of written rows as stipulated in the `sqlite3 <https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount>`__ or `SQLAlchemy <https://docs.sqlalchemy.org/en/20/core/connections.html#sqlalchemy.engine.CursorResult.rowcount>`__."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:0
msgid "Raises"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:84
msgid "ValueError"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:81
msgid "When the table already exists and `if_exists` is 'fail' (the default)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:89
msgid ":obj:`read_sql`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:90
msgid "Read a DataFrame from a table."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:94
msgid "Notes"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:95
msgid "Timezone aware datetime columns will be written as ``Timestamp with timezone`` type with SQLAlchemy if supported by the database. Otherwise, the datetimes will be stored as timezone unaware timestamps local to the original timezone."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:101
msgid "References"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:102
msgid "https://docs.sqlalchemy.org"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:103
msgid "https://www.python.org/dev/peps/pep-0249/"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:107
msgid "[R689dfd12abe5-1]_, [R689dfd12abe5-2]_"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:110
msgid "Examples"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:111
msgid "Create an in-memory SQLite database."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:116
msgid "Create a table from scratch with 3 rows."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:132
msgid "An `sqlalchemy.engine.Connection` can also be passed to `con`:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:139
msgid "This is allowed to support operations that require that the same DBAPI connection is used for the entire operation."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:151
msgid "Overwrite the table with just ``df2``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:160
msgid "Use ``method`` to define a callable insertion method to do nothing if there's a primary key conflict on a table in a PostgreSQL database."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:173
msgid "For MySQL, a callable to update columns ``b`` and ``c`` if there's a conflict on a primary key."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/core/generic.py:docstring of pandas.core.generic.NDFrame.to_sql:190
msgid "Specify the dtype (especially useful for integers with missing values). Notice that while pandas is forced to store the data as floating point, the database supports nullable integers. When fetching the data with Python, we get back integer scalars."
msgstr ""
