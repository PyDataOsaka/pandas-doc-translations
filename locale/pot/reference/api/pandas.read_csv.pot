# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.read_csv.rst:2
msgid "pandas.read\\_csv"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:2
msgid "Read a comma-separated values (csv) file into DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:4
msgid "Also supports optionally iterating or breaking of the file into chunks."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:7
msgid "Additional help can be found in the online docs for `IO Tools <https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html>`_."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:0
msgid "Parameters"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:20
msgid "**filepath_or_buffer**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str, path object or file-like object"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:13
msgid "Any valid string path is acceptable. The string could be a URL. Valid URL schemes include http, ftp, s3, gs, and file. For file URLs, a host is expected. A local file could be: file://localhost/path/to/table.csv."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:17
msgid "If you want to pass in a path object, pandas accepts any ``os.PathLike``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:19
msgid "By file-like object, we refer to objects with a ``read()`` method, such as a file handle (e.g. via builtin ``open`` function) or ``StringIO``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:31
msgid "**sep**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str, default ','"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:23
msgid "Character or regex pattern to treat as the delimiter. If ``sep=None``, the C engine cannot automatically detect the separator, but the Python parsing engine can, meaning the latter will be used and automatically detect the separator from only the first valid row of the file by Python's builtin sniffer tool, ``csv.Sniffer``. In addition, separators longer than 1 character and different from ``'\\s+'`` will be interpreted as regular expressions and will also force the use of the Python parsing engine. Note that regex delimiters are prone to ignoring quoted data. Regex example: ``'\\r\\t'``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:34
msgid "**delimiter**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:34
msgid "Alias for ``sep``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:49
msgid "**header**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "int, Sequence of int, 'infer' or None, default 'infer'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:37
msgid "Row number(s) containing column labels and marking the start of the data (zero-indexed). Default behavior is to infer the column names: if no ``names`` are passed the behavior is identical to ``header=0`` and column names are inferred from the first line of the file, if column names are passed explicitly to ``names`` then the behavior is identical to ``header=None``. Explicitly pass ``header=0`` to be able to replace existing names. The header can be a list of integers that specify row locations for a :class:`~pandas.MultiIndex` on the columns e.g. ``[0, 1, 3]``. Intervening rows that are not specified will be skipped (e.g. 2 in this example is skipped). Note that this parameter ignores commented lines and empty lines if ``skip_blank_lines=True``, so ``header=0`` denotes the first line of data rather than the first line of the file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:54
msgid "**names**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Sequence of Hashable, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:52
msgid "Sequence of column labels to apply. If the file contains a header row, then you should explicitly pass ``header=0`` to override the column names. Duplicates in this list are not allowed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:63
msgid "**index_col**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Hashable, Sequence of Hashable or False, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:57
msgid "Column(s) to use as row label(s), denoted either by column labels or column indices.  If a sequence of labels or indices is given, :class:`~pandas.MultiIndex` will be formed for the row labels."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:61
msgid "Note: ``index_col=False`` can be used to force pandas to *not* use the first column as the index, e.g., when you have a malformed file with delimiters at the end of each line."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:84
msgid "**usecols**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "list of Hashable or Callable, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:66
msgid "Subset of columns to select, denoted either by column labels or column indices. If list-like, all elements must either be positional (i.e. integer indices into the document columns) or strings that correspond to column names provided either by the user in ``names`` or inferred from the document header row(s). If ``names`` are given, the document header row(s) are not taken into account. For example, a valid list-like ``usecols`` parameter would be ``[0, 1, 2]`` or ``['foo', 'bar', 'baz']``. Element order is ignored, so ``usecols=[0, 1]`` is the same as ``[1, 0]``. To instantiate a :class:`~pandas.DataFrame` from ``data`` with element order preserved use ``pd.read_csv(data, usecols=['foo', 'bar'])[['foo', 'bar']]`` for columns in ``['foo', 'bar']`` order or ``pd.read_csv(data, usecols=['foo', 'bar'])[['bar', 'foo']]`` for ``['bar', 'foo']`` order."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:80
msgid "If callable, the callable function will be evaluated against the column names, returning names where the callable function evaluates to ``True``. An example of a valid callable argument would be ``lambda x: x.upper() in ['AAA', 'BBB', 'DDD']``. Using this parameter results in much faster parsing time and lower memory usage."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:98
msgid "**dtype**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "dtype or dict of {Hashable"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "dtype}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:87
msgid "Data type(s) to apply to either the whole dataset or individual columns. E.g., ``{'a': np.float64, 'b': np.int32, 'c': 'Int64'}`` Use ``str`` or ``object`` together with suitable ``na_values`` settings to preserve and not interpret ``dtype``. If ``converters`` are specified, they will be applied INSTEAD of ``dtype`` conversion."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:96
msgid "Support for ``defaultdict`` was added. Specify a ``defaultdict`` as input where the default determines the ``dtype`` of the columns which are not explicitly listed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:108
msgid "**engine**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "{'c', 'python', 'pyarrow'}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:101
msgid "Parser engine to use. The C and pyarrow engines are faster, while the python engine is currently more feature-complete. Multithreading is currently only supported by the pyarrow engine."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:107
msgid "The 'pyarrow' engine was added as an *experimental* engine, and some features are unsupported, or may not work correctly, with this engine."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:112
msgid "**converters**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "dict of {Hashable"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Callable}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:111
msgid "Functions for converting values in specified columns. Keys can either be column labels or column indices."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:115
msgid "**true_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "list, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:115
msgid "Values to consider as ``True`` in addition to case-insensitive variants of 'True'."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:118
msgid "**false_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:118
msgid "Values to consider as ``False`` in addition to case-insensitive variants of 'False'."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:121
msgid "**skipinitialspace**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "bool, default False"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:121
msgid "Skip spaces after delimiter."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:129
msgid "**skiprows**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "int, list of int or Callable, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:124
msgid "Line numbers to skip (0-indexed) or number of lines to skip (``int``) at the start of the file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:127
msgid "If callable, the callable function will be evaluated against the row indices, returning ``True`` if the row should be skipped and ``False`` otherwise. An example of a valid callable argument would be ``lambda x: x in [0, 2]``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:132
msgid "**skipfooter**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "int, default 0"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:132
msgid "Number of lines at bottom of file to skip (Unsupported with ``engine='c'``)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:135
msgid "**nrows**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "int, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:135
msgid "Number of rows of file to read. Useful for reading pieces of large files."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:142
msgid "**na_values**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Hashable, Iterable of Hashable or dict of {Hashable"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Iterable}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:138
msgid "Additional strings to recognize as ``NA``/``NaN``. If ``dict`` passed, specific per-column ``NA`` values.  By default the following values are interpreted as ``NaN``: \" \", \"#N/A\", \"#N/A N/A\", \"#NA\", \"-1.#IND\", \"-1.#QNAN\", \"-NaN\", \"-nan\", \"1.#IND\", \"1.#QNAN\", \"<NA>\", \"N/A\", \"NA\", \"NULL\", \"NaN\", \"None\", \"n/a\", \"nan\", \"null \"."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:158
msgid "**keep_default_na**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "bool, default True"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:145
msgid "Whether or not to include the default ``NaN`` values when parsing the data. Depending on whether ``na_values`` is passed in, the behavior is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:148
msgid "If ``keep_default_na`` is ``True``, and ``na_values`` are specified, ``na_values`` is appended to the default ``NaN`` values used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:150
msgid "If ``keep_default_na`` is ``True``, and ``na_values`` are not specified, only the default ``NaN`` values are used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:152
msgid "If ``keep_default_na`` is ``False``, and ``na_values`` are specified, only the ``NaN`` values specified ``na_values`` are used for parsing."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:154
msgid "If ``keep_default_na`` is ``False``, and ``na_values`` are not specified, no strings will be parsed as ``NaN``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:157
msgid "Note that if ``na_filter`` is passed in as ``False``, the ``keep_default_na`` and ``na_values`` parameters will be ignored."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:163
msgid "**na_filter**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:161
msgid "Detect missing value markers (empty strings and the value of ``na_values``). In data without any ``NA`` values, passing ``na_filter=False`` can improve the performance of reading a large file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:166
msgid "**verbose**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:166
msgid "Indicate number of ``NA`` values placed in non-numeric columns."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:169
msgid "**skip_blank_lines**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:169
msgid "If ``True``, skip over blank lines rather than interpreting as ``NaN`` values."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:188
msgid "**parse_dates**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "bool, list of Hashable, list of lists or dict of {Hashable"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "list}, default False"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:172
msgid "The behavior is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:174
msgid "``bool``. If ``True`` -> try parsing the index."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:175
msgid "``list`` of ``int`` or names. e.g. If ``[1, 2, 3]`` -> try parsing columns 1, 2, 3 each as a separate date column."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:177
msgid "``list`` of ``list``. e.g.  If ``[[1, 3]]`` -> combine columns 1 and 3 and parse as a single date column."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:179
msgid "``dict``, e.g. ``{'foo' : [1, 3]}`` -> parse columns 1, 3 as date and call result 'foo'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:182
msgid "If a column or index cannot be represented as an array of ``datetime``, say because of an unparsable value or a mixture of timezones, the column or index will be returned unaltered as an ``object`` data type. For non-standard ``datetime`` parsing, use :func:`~pandas.to_datetime` after :func:`~pandas.read_csv`."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:188
msgid "Note: A fast-path exists for iso8601-formatted dates."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:197
msgid "**infer_datetime_format**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:191
msgid "If ``True`` and ``parse_dates`` is enabled, pandas will attempt to infer the format of the ``datetime`` strings in the columns, and if it can be inferred, switch to a faster method of parsing them. In some cases this can increase the parsing speed by 5-10x."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:196
msgid "A strict version of this argument is now the default, passing it has no effect."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:201
msgid "**keep_date_col**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:200
msgid "If ``True`` and ``parse_dates`` specifies combining multiple columns then keep the original columns."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:216
msgid "**date_parser**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "Callable, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:204
msgid "Function to use for converting a sequence of string columns to an array of ``datetime`` instances. The default uses ``dateutil.parser.parser`` to do the conversion. pandas will try to call ``date_parser`` in three different ways, advancing to the next if an exception occurs: 1) Pass one or more arrays (as defined by ``parse_dates``) as arguments; 2) concatenate (row-wise) the string values from the columns defined by ``parse_dates`` into a single array and pass that; and 3) call ``date_parser`` once for each row using one or more strings (corresponding to the columns defined by ``parse_dates``) as arguments."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:214
msgid "Use ``date_format`` instead, or read in as ``object`` and then apply :func:`~pandas.to_datetime` as-needed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:223
msgid "**date_format**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str or dict of column -> format, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:219
msgid "Format to use for parsing dates when used in conjunction with ``parse_dates``. For anything more complex, please read in as ``object`` and then apply :func:`~pandas.to_datetime` as-needed."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:226
msgid "**dayfirst**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:226
msgid "DD/MM format dates, international and European format."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:231
msgid "**cache_dates**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:229
msgid "If ``True``, use a cache of unique, converted dates to apply the ``datetime`` conversion. May produce significant speed-up when parsing duplicate date strings, especially ones with timezone offsets."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:239
msgid "**iterator**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:234
msgid "Return ``TextFileReader`` object for iteration or getting chunks with ``get_chunk()``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:239
#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:250
msgid "``TextFileReader`` is a context manager."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:250
msgid "**chunksize**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:242
msgid "Number of lines to read from the file per chunk. Passing a value will cause the function to return a ``TextFileReader`` object for iteration. See the `IO Tools docs <https://pandas.pydata.org/pandas-docs/stable/io.html#io-chunking>`_ for more information on ``iterator`` and ``chunksize``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:272
msgid "**compression**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str or dict, default 'infer'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:253
msgid "For on-the-fly decompression of on-disk data. If 'infer' and 'filepath_or_buffer' is path-like, then detect compression from the following extensions: '.gz', '.bz2', '.zip', '.xz', '.zst', '.tar', '.tar.gz', '.tar.xz' or '.tar.bz2' (otherwise no compression). If using 'zip' or 'tar', the ZIP file must contain only one data file to be read in. Set to ``None`` for no decompression. Can also be a dict with key ``'method'`` set to one of {``'zip'``, ``'gzip'``, ``'bz2'``, ``'zstd'``, ``'xz'``, ``'tar'``} and other key-value pairs are forwarded to ``zipfile.ZipFile``, ``gzip.GzipFile``, ``bz2.BZ2File``, ``zstandard.ZstdDecompressor``, ``lzma.LZMAFile`` or ``tarfile.TarFile``, respectively. As an example, the following could be passed for Zstandard decompression using a custom compression dictionary: ``compression={'method': 'zstd', 'dict_data': my_compression_dict}``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:269
msgid "Added support for `.tar` files."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:272
msgid "Zstandard support."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:275
msgid "**thousands**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str (length 1), optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:275
msgid "Character acting as the thousands separator in numerical values."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:278
msgid "**decimal**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str (length 1), default '.'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:278
msgid "Character to recognize as decimal point (e.g., use ',' for European data)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:281
msgid "**lineterminator**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:281
msgid "Character used to denote a line break. Only valid with C parser."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:285
msgid "**quotechar**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:284
msgid "Character used to denote the start and end of a quoted item. Quoted items can include the ``delimiter`` and it will be ignored."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:291
msgid "**quoting**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "{0 or csv.QUOTE_MINIMAL, 1 or csv.QUOTE_ALL, 2 or csv.QUOTE_NONNUMERIC, 3 or csv.QUOTE_NONE}, default csv.QUOTE_MINIMAL"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:288
msgid "Control field quoting behavior per ``csv.QUOTE_*`` constants. Default is ``csv.QUOTE_MINIMAL`` (i.e., 0) which implies that only fields containing special characters are quoted (e.g., characters defined in ``quotechar``, ``delimiter``, or ``lineterminator``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:296
msgid "**doublequote**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:294
msgid "When ``quotechar`` is specified and ``quoting`` is not ``QUOTE_NONE``, indicate whether or not to interpret two consecutive ``quotechar`` elements INSIDE a field as a single ``quotechar`` element."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:299
msgid "**escapechar**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:299
msgid "Character used to escape other characters."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:309
msgid "**comment**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:302
msgid "Character indicating that the remainder of line should not be parsed. If found at the beginning of a line, the line will be ignored altogether. This parameter must be a single character. Like empty lines (as long as ``skip_blank_lines=True``), fully commented lines are ignored by the parameter ``header`` but not by ``skiprows``. For example, if ``comment='#'``, parsing ``#empty\\na,b,c\\n1,2,3`` with ``header=0`` will result in ``'a,b,c'`` being treated as the header."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:325
msgid "**encoding**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str, optional, default 'utf-8'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:312
msgid "Encoding to use for UTF when reading/writing (ex. ``'utf-8'``). `List of Python standard encodings <https://docs.python.org/3/library/codecs.html#standard-encodings>`_ ."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:318
msgid "When ``encoding`` is ``None``, ``errors='replace'`` is passed to ``open()``. Otherwise, ``errors='strict'`` is passed to ``open()``. This behavior was previously only the case for ``engine='python'``."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:324
msgid "``encoding_errors`` is a new argument. ``encoding`` has no longer an influence on how encoding errors are handled."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:331
msgid "**encoding_errors**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str, optional, default 'strict'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:328
msgid "How encoding errors are treated. `List of possible values <https://docs.python.org/3/library/codecs.html#error-handlers>`_ ."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:338
msgid "**dialect**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "str or csv.Dialect, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:334
msgid "If provided, this parameter will override values (default or not) for the following parameters: ``delimiter``, ``doublequote``, ``escapechar``, ``skipinitialspace``, ``quotechar``, and ``quoting``. If it is necessary to override values, a ``ParserWarning`` will be issued. See ``csv.Dialect`` documentation for more details."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:358
msgid "**on_bad_lines**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "{'error', 'warn', 'skip'} or Callable, default 'error'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:341
msgid "Specifies what to do upon encountering a bad line (a line with too many fields). Allowed values are :"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:344
msgid "``'error'``, raise an Exception when a bad line is encountered."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:345
msgid "``'warn'``, raise a warning when a bad line is encountered and skip that line."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:346
msgid "``'skip'``, skip bad lines without raising or warning when they are encountered."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:352
msgid "Callable, function with signature ``(bad_line: list[str]) -> list[str] | None`` that will process a single bad line. ``bad_line`` is a list of strings split by the ``sep``. If the function returns ``None``, the bad line will be ignored. If the function returns a new ``list`` of strings with more elements than expected, a ``ParserWarning`` will be emitted while dropping extra elements. Only supported when ``engine='python'``"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:364
msgid "**delim_whitespace**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:361
msgid "Specifies whether or not whitespace (e.g. ``' '`` or ``'\\t'``) will be used as the ``sep`` delimiter. Equivalent to setting ``sep='\\s+'``. If this option is set to ``True``, nothing should be passed in for the ``delimiter`` parameter."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:372
msgid "**low_memory**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:367
msgid "Internally process the file in chunks, resulting in lower memory use while parsing, but possibly mixed type inference.  To ensure no mixed types either set ``False``, or specify the type with the ``dtype`` parameter. Note that the entire file is read into a single :class:`~pandas.DataFrame` regardless, use the ``chunksize`` or ``iterator`` parameter to return the data in chunks. (Only valid with C parser)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:377
msgid "**memory_map**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:375
msgid "If a filepath is provided for ``filepath_or_buffer``, map the file object directly onto memory and access the data directly from there. Using this option can improve performance because there is no longer any I/O overhead."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:385
msgid "**float_precision**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "{'high', 'legacy', 'round_trip'}, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:380
msgid "Specifies which converter the C engine should use for floating-point values. The options are ``None`` or ``'high'`` for the ordinary converter, ``'legacy'`` for the original lower precision pandas converter, and ``'round_trip'`` for the round-trip converter."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:397
msgid "**storage_options**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "dict, optional"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:388
msgid "Extra options that make sense for a particular storage connection, e.g. host, port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded to ``urllib.request.Request`` as header options. For other URLs (e.g. starting with \"s3://\", and \"gcs://\") the key-value pairs are forwarded to ``fsspec.open``. Please see ``fsspec`` and ``urllib`` for more details, and for more examples on storage options refer `here <https://pandas.pydata.org/docs/user_guide/io.html? highlight=storage_options#reading-writing-remote-files>`_."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:408
msgid "**dtype_backend**"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:-1
msgid "{'numpy_nullable', 'pyarrow'}, default 'numpy_nullable'"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:400
msgid "Back-end data type applied to the resultant :class:`DataFrame` (still experimental). Behaviour is as follows:"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:403
msgid "``\"numpy_nullable\"``: returns nullable-dtype-backed :class:`DataFrame` (default)."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:405
msgid "``\"pyarrow\"``: returns pyarrow-backed nullable :class:`ArrowDtype` DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:0
msgid "Returns"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:420
msgid "DataFrame or TextFileReader"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:413
msgid "A comma-separated values (csv) file is returned as two-dimensional data structure with labeled axes."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:425
msgid ":obj:`DataFrame.to_csv`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:426
msgid "Write DataFrame to a comma-separated values (csv) file."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:427
msgid ":obj:`read_table`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:428
msgid "Read general delimited file into DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:429
msgid ":obj:`read_fwf`"
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:430
msgid "Read a table of fixed-width formatted lines into DataFrame."
msgstr ""

#: ../../../../.local/lib/python3.10/site-packages/pandas/io/parsers/readers.py:docstring of pandas.io.parsers.readers.read_csv:436
msgid "Examples"
msgstr ""
