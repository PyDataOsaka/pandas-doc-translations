# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the pandas package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pandas 2.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-12 17:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/pandas.Interval.rst:2
msgid "pandas.Interval"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:2
msgid "Immutable object implementing an Interval, a bounded slice-like interval."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:0
msgid "Parameters"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:8
msgid "**left**"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:-1
msgid "orderable scalar"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:8
#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Left bound for the interval."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:11
msgid "**right**"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:11
#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Right bound for the interval."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:22
msgid "**closed**"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:-1
msgid "{'right', 'left', 'both', 'neither'}, default 'right'"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:14
msgid "Whether the interval is closed on the left-side, right-side, both or neither. See the Notes for more detailed explanation."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:27
msgid ":obj:`IntervalIndex`"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:28
msgid "An Index of Interval objects that are all closed on the same side."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:29
msgid ":obj:`cut`"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:30
msgid "Convert continuous data into discrete bins (Categorical of Interval objects)."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:31
msgid ":obj:`qcut`"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:32
msgid "Convert continuous data into bins (Categorical of Interval objects) based on quantiles."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:33
msgid ":obj:`Period`"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:34
msgid "Represents a period of time."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:38
msgid "Notes"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:39
msgid "The parameters `left` and `right` must be from the same type, you must be able to compare them and they must satisfy ``left <= right``."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:42
msgid "A closed interval (in mathematics denoted by square brackets) contains its endpoints, i.e. the closed interval ``[0, 5]`` is characterized by the conditions ``0 <= x <= 5``. This is what ``closed='both'`` stands for. An open interval (in mathematics denoted by parentheses) does not contain its endpoints, i.e. the open interval ``(0, 5)`` is characterized by the conditions ``0 < x < 5``. This is what ``closed='neither'`` stands for. Intervals can also be half-open or half-closed, i.e. ``[0, 5)`` is described by ``0 <= x < 5`` (``closed='left'``) and ``(0, 5]`` is described by ``0 < x <= 5`` (``closed='right'``)."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:54
msgid "Examples"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:55
msgid "It is possible to build Intervals of different types, like numeric ones:"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:61
msgid "You can check if an element belongs to it, or if it contains another interval:"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:68
msgid "You can test the bounds (``closed='right'``, so ``0 < x <= 5``):"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:77
msgid "Calculate its length"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:82
msgid "You can operate with `+` and `*` over an Interval and the operation is applied to each of its bounds, so the result depends on the type of the bound elements"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:93
msgid "To create a time interval you can use Timestamps as the bounds"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:104
msgid "Attributes"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`closed <pandas.Interval.closed>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "String describing the inclusive side the intervals."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`closed_left <pandas.Interval.closed_left>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Check if the interval is closed on the left side."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`closed_right <pandas.Interval.closed_right>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Check if the interval is closed on the right side."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`is_empty <pandas.Interval.is_empty>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Indicates if an interval is empty, meaning it contains no points."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`left <pandas.Interval.left>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`length <pandas.Interval.length>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Return the length of the Interval."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`mid <pandas.Interval.mid>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Return the midpoint of the Interval."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`open_left <pandas.Interval.open_left>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Check if the interval is open on the left side."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`open_right <pandas.Interval.open_right>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid "Check if the interval is open on the right side."
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:118:<autosummary>:1
msgid ":py:obj:`right <pandas.Interval.right>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:120
msgid "Methods"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:125:<autosummary>:1
msgid ":py:obj:`overlaps <pandas.Interval.overlaps>`\\"
msgstr ""

#: ../../docstring of pandas._libs.interval.Interval:125:<autosummary>:1
msgid "Check whether two Interval objects overlap."
msgstr ""
